{
    "pipes": [],
    "interfaces": [
        {
            "name": "IAuthCodeRequest",
            "id": "interface-IAuthCodeRequest-3abb8ef83a289c7ad5ba565f499dcd9a",
            "file": "src/app/shared/interfaces/auth.interface.ts",
            "type": "interface",
            "sourceCode": "export interface IAuthRequest {\n    username: string;\n    password: string;\n    grant_type?: string;\n}\n\nexport interface IAuthResponse {\n    access_token: string;\n    token_type: string;\n    refresh_type: string;\n    expires_in: number;\n    scopes: string;\n    name: string;\n    first_last_name: string;\n    second_last_name: string;\n    email: string;\n    jti: string;\n}\n\nexport interface IAuthCodeRequest {\n    email: string;\n    code: string;\n}\n\nexport interface IAuthRestorePasswordRequest {\n    email: string;\n    code: string;\n    password: string;\n}\n",
            "properties": [
                {
                    "name": "code",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "email",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IAuthRequest",
            "id": "interface-IAuthRequest-3abb8ef83a289c7ad5ba565f499dcd9a",
            "file": "src/app/shared/interfaces/auth.interface.ts",
            "type": "interface",
            "sourceCode": "export interface IAuthRequest {\n    username: string;\n    password: string;\n    grant_type?: string;\n}\n\nexport interface IAuthResponse {\n    access_token: string;\n    token_type: string;\n    refresh_type: string;\n    expires_in: number;\n    scopes: string;\n    name: string;\n    first_last_name: string;\n    second_last_name: string;\n    email: string;\n    jti: string;\n}\n\nexport interface IAuthCodeRequest {\n    email: string;\n    code: string;\n}\n\nexport interface IAuthRestorePasswordRequest {\n    email: string;\n    code: string;\n    password: string;\n}\n",
            "properties": [
                {
                    "name": "grant_type",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "password",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "username",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IAuthResponse",
            "id": "interface-IAuthResponse-3abb8ef83a289c7ad5ba565f499dcd9a",
            "file": "src/app/shared/interfaces/auth.interface.ts",
            "type": "interface",
            "sourceCode": "export interface IAuthRequest {\n    username: string;\n    password: string;\n    grant_type?: string;\n}\n\nexport interface IAuthResponse {\n    access_token: string;\n    token_type: string;\n    refresh_type: string;\n    expires_in: number;\n    scopes: string;\n    name: string;\n    first_last_name: string;\n    second_last_name: string;\n    email: string;\n    jti: string;\n}\n\nexport interface IAuthCodeRequest {\n    email: string;\n    code: string;\n}\n\nexport interface IAuthRestorePasswordRequest {\n    email: string;\n    code: string;\n    password: string;\n}\n",
            "properties": [
                {
                    "name": "access_token",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "email",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "expires_in",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "first_last_name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "jti",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "refresh_type",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "scopes",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "second_last_name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "token_type",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IAuthRestorePasswordRequest",
            "id": "interface-IAuthRestorePasswordRequest-3abb8ef83a289c7ad5ba565f499dcd9a",
            "file": "src/app/shared/interfaces/auth.interface.ts",
            "type": "interface",
            "sourceCode": "export interface IAuthRequest {\n    username: string;\n    password: string;\n    grant_type?: string;\n}\n\nexport interface IAuthResponse {\n    access_token: string;\n    token_type: string;\n    refresh_type: string;\n    expires_in: number;\n    scopes: string;\n    name: string;\n    first_last_name: string;\n    second_last_name: string;\n    email: string;\n    jti: string;\n}\n\nexport interface IAuthCodeRequest {\n    email: string;\n    code: string;\n}\n\nexport interface IAuthRestorePasswordRequest {\n    email: string;\n    code: string;\n    password: string;\n}\n",
            "properties": [
                {
                    "name": "code",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "email",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "password",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IBlocked",
            "id": "interface-IBlocked-3902643a0451058b13dfaa6ff19c913b",
            "file": "src/app/shared/models/calendar/calendar.model.ts",
            "type": "interface",
            "sourceCode": "import { isArray, isObject } from '@helpers/objects-equal.helper';\n\nexport interface ICalendarRequestParams {\n  fulfillmentCenterCode: string; // D88\n  serviceTypeCode: string; // RAD, RED\n  segmentType: string; // EXPRESS\n  channel: string; // DIGITAL, CALL\n}\n\nexport interface ICalendar {\n  year: string;\n  month: string;\n  daysList: Array<IDayList>;\n  monthNumber?: number;\n  startDay?: number;\n}\n\nexport class Week {\n  monday: IDayList;\n  tuesday: IDayList;\n  wednesday: IDayList;\n  thursday: IDayList;\n  friday: IDayList;\n  saturday: IDayList;\n  sunday: IDayList;\n  constructor(monday: IDayList,\n              tuesday: IDayList,\n              wednesday: IDayList,\n              thursday: IDayList,\n              friday: IDayList,\n              saturday: IDayList,\n              sunday: IDayList) {\n    this.monday = monday;\n    this.tuesday = tuesday;\n    this.wednesday = wednesday;\n    this.thursday = thursday;\n    this.friday = friday;\n    this.saturday = saturday;\n    this.sunday = sunday;\n  }\n}\n\nexport class SelectedDay {\n  isSelected: boolean;\n  dayList: IDayList;\n}\n\nexport interface IDayList {\n  id: number;\n  capacity: number;\n  orders: number;\n  dayNumber: number;\n  day: string;\n  dayToShow: boolean;\n  check: boolean;\n  restrictedDay: boolean;\n  today: boolean;\n  pastDay: boolean;\n  dayType?: 'empty' | 'only_number' | 'active';\n}\n\n\nexport class Calendar {\n  public year: string;\n  public month: string;\n  public daysList: Array<IDayList>;\n  public monthNumber: number;\n  public startDay: number;\n\n  constructor(store: ICalendar) {\n    const currentValue = isObject(store) ? store : {} as ICalendar;\n    this.year = currentValue.year || '';\n    this.month = currentValue.month || '';\n    this.daysList = currentValue.daysList || [];\n    this.monthNumber = currentValue.monthNumber || 0;\n    this.startDay = currentValue.startDay || 0;\n  }\n\n}\n\n// CALENDAR RESPONSE\nexport interface ICalendarResponse {\n  elements: ICalendar[];\n}\n\nexport class CalendarResponse {\n  public elements: Calendar[];\n\n  constructor(response: ICalendarResponse) {\n    const current = isObject(response) ? response : {} as ICalendarResponse;\n    this.elements = isArray(current.elements) ? current.elements.map(e => new Calendar(e)) : [];\n  }\n}\n\n\n// blocked day\n\nexport interface IDayBlockedRequest {\n  fulfillmentCenterCode: string; // D88\n  pathVariable?: string;\n}\n\nexport interface IBlocked {\n  day: string;\n  check: boolean;\n}\n\n\nexport interface IBlockedResponse {\n  elements: IBlocked[];\n}\n\n\nexport class BlockedDayResponse {\n  public elements: IBlocked[];\n\n  constructor(response: IBlockedResponse) {\n    const current = isObject(response) ? response : {} as IBlockedResponse;\n    this.elements = isArray(current.elements) ? current.elements.map(e => new Blocked(e)) : [];\n  }\n}\n\n\nexport class Blocked {\n  public day: string;\n  public check: boolean;\n\n  constructor(store: IBlocked) {\n    const currentValue = isObject(store) ? store : {} as IBlocked;\n    this.day = currentValue.day || '';\n    this.check = currentValue.check || false;\n  }\n\n}\n",
            "properties": [
                {
                    "name": "check",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 105
                },
                {
                    "name": "day",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 104
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IBlockedResponse",
            "id": "interface-IBlockedResponse-3902643a0451058b13dfaa6ff19c913b",
            "file": "src/app/shared/models/calendar/calendar.model.ts",
            "type": "interface",
            "sourceCode": "import { isArray, isObject } from '@helpers/objects-equal.helper';\n\nexport interface ICalendarRequestParams {\n  fulfillmentCenterCode: string; // D88\n  serviceTypeCode: string; // RAD, RED\n  segmentType: string; // EXPRESS\n  channel: string; // DIGITAL, CALL\n}\n\nexport interface ICalendar {\n  year: string;\n  month: string;\n  daysList: Array<IDayList>;\n  monthNumber?: number;\n  startDay?: number;\n}\n\nexport class Week {\n  monday: IDayList;\n  tuesday: IDayList;\n  wednesday: IDayList;\n  thursday: IDayList;\n  friday: IDayList;\n  saturday: IDayList;\n  sunday: IDayList;\n  constructor(monday: IDayList,\n              tuesday: IDayList,\n              wednesday: IDayList,\n              thursday: IDayList,\n              friday: IDayList,\n              saturday: IDayList,\n              sunday: IDayList) {\n    this.monday = monday;\n    this.tuesday = tuesday;\n    this.wednesday = wednesday;\n    this.thursday = thursday;\n    this.friday = friday;\n    this.saturday = saturday;\n    this.sunday = sunday;\n  }\n}\n\nexport class SelectedDay {\n  isSelected: boolean;\n  dayList: IDayList;\n}\n\nexport interface IDayList {\n  id: number;\n  capacity: number;\n  orders: number;\n  dayNumber: number;\n  day: string;\n  dayToShow: boolean;\n  check: boolean;\n  restrictedDay: boolean;\n  today: boolean;\n  pastDay: boolean;\n  dayType?: 'empty' | 'only_number' | 'active';\n}\n\n\nexport class Calendar {\n  public year: string;\n  public month: string;\n  public daysList: Array<IDayList>;\n  public monthNumber: number;\n  public startDay: number;\n\n  constructor(store: ICalendar) {\n    const currentValue = isObject(store) ? store : {} as ICalendar;\n    this.year = currentValue.year || '';\n    this.month = currentValue.month || '';\n    this.daysList = currentValue.daysList || [];\n    this.monthNumber = currentValue.monthNumber || 0;\n    this.startDay = currentValue.startDay || 0;\n  }\n\n}\n\n// CALENDAR RESPONSE\nexport interface ICalendarResponse {\n  elements: ICalendar[];\n}\n\nexport class CalendarResponse {\n  public elements: Calendar[];\n\n  constructor(response: ICalendarResponse) {\n    const current = isObject(response) ? response : {} as ICalendarResponse;\n    this.elements = isArray(current.elements) ? current.elements.map(e => new Calendar(e)) : [];\n  }\n}\n\n\n// blocked day\n\nexport interface IDayBlockedRequest {\n  fulfillmentCenterCode: string; // D88\n  pathVariable?: string;\n}\n\nexport interface IBlocked {\n  day: string;\n  check: boolean;\n}\n\n\nexport interface IBlockedResponse {\n  elements: IBlocked[];\n}\n\n\nexport class BlockedDayResponse {\n  public elements: IBlocked[];\n\n  constructor(response: IBlockedResponse) {\n    const current = isObject(response) ? response : {} as IBlockedResponse;\n    this.elements = isArray(current.elements) ? current.elements.map(e => new Blocked(e)) : [];\n  }\n}\n\n\nexport class Blocked {\n  public day: string;\n  public check: boolean;\n\n  constructor(store: IBlocked) {\n    const currentValue = isObject(store) ? store : {} as IBlocked;\n    this.day = currentValue.day || '';\n    this.check = currentValue.check || false;\n  }\n\n}\n",
            "properties": [
                {
                    "name": "elements",
                    "type": "IBlocked[]",
                    "optional": false,
                    "description": "",
                    "line": 110
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ICalendar",
            "id": "interface-ICalendar-3902643a0451058b13dfaa6ff19c913b",
            "file": "src/app/shared/models/calendar/calendar.model.ts",
            "type": "interface",
            "sourceCode": "import { isArray, isObject } from '@helpers/objects-equal.helper';\n\nexport interface ICalendarRequestParams {\n  fulfillmentCenterCode: string; // D88\n  serviceTypeCode: string; // RAD, RED\n  segmentType: string; // EXPRESS\n  channel: string; // DIGITAL, CALL\n}\n\nexport interface ICalendar {\n  year: string;\n  month: string;\n  daysList: Array<IDayList>;\n  monthNumber?: number;\n  startDay?: number;\n}\n\nexport class Week {\n  monday: IDayList;\n  tuesday: IDayList;\n  wednesday: IDayList;\n  thursday: IDayList;\n  friday: IDayList;\n  saturday: IDayList;\n  sunday: IDayList;\n  constructor(monday: IDayList,\n              tuesday: IDayList,\n              wednesday: IDayList,\n              thursday: IDayList,\n              friday: IDayList,\n              saturday: IDayList,\n              sunday: IDayList) {\n    this.monday = monday;\n    this.tuesday = tuesday;\n    this.wednesday = wednesday;\n    this.thursday = thursday;\n    this.friday = friday;\n    this.saturday = saturday;\n    this.sunday = sunday;\n  }\n}\n\nexport class SelectedDay {\n  isSelected: boolean;\n  dayList: IDayList;\n}\n\nexport interface IDayList {\n  id: number;\n  capacity: number;\n  orders: number;\n  dayNumber: number;\n  day: string;\n  dayToShow: boolean;\n  check: boolean;\n  restrictedDay: boolean;\n  today: boolean;\n  pastDay: boolean;\n  dayType?: 'empty' | 'only_number' | 'active';\n}\n\n\nexport class Calendar {\n  public year: string;\n  public month: string;\n  public daysList: Array<IDayList>;\n  public monthNumber: number;\n  public startDay: number;\n\n  constructor(store: ICalendar) {\n    const currentValue = isObject(store) ? store : {} as ICalendar;\n    this.year = currentValue.year || '';\n    this.month = currentValue.month || '';\n    this.daysList = currentValue.daysList || [];\n    this.monthNumber = currentValue.monthNumber || 0;\n    this.startDay = currentValue.startDay || 0;\n  }\n\n}\n\n// CALENDAR RESPONSE\nexport interface ICalendarResponse {\n  elements: ICalendar[];\n}\n\nexport class CalendarResponse {\n  public elements: Calendar[];\n\n  constructor(response: ICalendarResponse) {\n    const current = isObject(response) ? response : {} as ICalendarResponse;\n    this.elements = isArray(current.elements) ? current.elements.map(e => new Calendar(e)) : [];\n  }\n}\n\n\n// blocked day\n\nexport interface IDayBlockedRequest {\n  fulfillmentCenterCode: string; // D88\n  pathVariable?: string;\n}\n\nexport interface IBlocked {\n  day: string;\n  check: boolean;\n}\n\n\nexport interface IBlockedResponse {\n  elements: IBlocked[];\n}\n\n\nexport class BlockedDayResponse {\n  public elements: IBlocked[];\n\n  constructor(response: IBlockedResponse) {\n    const current = isObject(response) ? response : {} as IBlockedResponse;\n    this.elements = isArray(current.elements) ? current.elements.map(e => new Blocked(e)) : [];\n  }\n}\n\n\nexport class Blocked {\n  public day: string;\n  public check: boolean;\n\n  constructor(store: IBlocked) {\n    const currentValue = isObject(store) ? store : {} as IBlocked;\n    this.day = currentValue.day || '';\n    this.check = currentValue.check || false;\n  }\n\n}\n",
            "properties": [
                {
                    "name": "daysList",
                    "type": "Array<IDayList>",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "month",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "monthNumber",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "startDay",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "year",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ICalendarParams",
            "id": "interface-ICalendarParams-b2a5503d70dad161a02ecab14ccf2d03",
            "file": "src/app/shared/models/calendar/calendar-params.model.ts",
            "type": "interface",
            "sourceCode": "export interface ICalendarParams {\n  fulfillmentCenter: string;\n}\n",
            "properties": [
                {
                    "name": "fulfillmentCenter",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ICalendarRequestParams",
            "id": "interface-ICalendarRequestParams-3902643a0451058b13dfaa6ff19c913b",
            "file": "src/app/shared/models/calendar/calendar.model.ts",
            "type": "interface",
            "sourceCode": "import { isArray, isObject } from '@helpers/objects-equal.helper';\n\nexport interface ICalendarRequestParams {\n  fulfillmentCenterCode: string; // D88\n  serviceTypeCode: string; // RAD, RED\n  segmentType: string; // EXPRESS\n  channel: string; // DIGITAL, CALL\n}\n\nexport interface ICalendar {\n  year: string;\n  month: string;\n  daysList: Array<IDayList>;\n  monthNumber?: number;\n  startDay?: number;\n}\n\nexport class Week {\n  monday: IDayList;\n  tuesday: IDayList;\n  wednesday: IDayList;\n  thursday: IDayList;\n  friday: IDayList;\n  saturday: IDayList;\n  sunday: IDayList;\n  constructor(monday: IDayList,\n              tuesday: IDayList,\n              wednesday: IDayList,\n              thursday: IDayList,\n              friday: IDayList,\n              saturday: IDayList,\n              sunday: IDayList) {\n    this.monday = monday;\n    this.tuesday = tuesday;\n    this.wednesday = wednesday;\n    this.thursday = thursday;\n    this.friday = friday;\n    this.saturday = saturday;\n    this.sunday = sunday;\n  }\n}\n\nexport class SelectedDay {\n  isSelected: boolean;\n  dayList: IDayList;\n}\n\nexport interface IDayList {\n  id: number;\n  capacity: number;\n  orders: number;\n  dayNumber: number;\n  day: string;\n  dayToShow: boolean;\n  check: boolean;\n  restrictedDay: boolean;\n  today: boolean;\n  pastDay: boolean;\n  dayType?: 'empty' | 'only_number' | 'active';\n}\n\n\nexport class Calendar {\n  public year: string;\n  public month: string;\n  public daysList: Array<IDayList>;\n  public monthNumber: number;\n  public startDay: number;\n\n  constructor(store: ICalendar) {\n    const currentValue = isObject(store) ? store : {} as ICalendar;\n    this.year = currentValue.year || '';\n    this.month = currentValue.month || '';\n    this.daysList = currentValue.daysList || [];\n    this.monthNumber = currentValue.monthNumber || 0;\n    this.startDay = currentValue.startDay || 0;\n  }\n\n}\n\n// CALENDAR RESPONSE\nexport interface ICalendarResponse {\n  elements: ICalendar[];\n}\n\nexport class CalendarResponse {\n  public elements: Calendar[];\n\n  constructor(response: ICalendarResponse) {\n    const current = isObject(response) ? response : {} as ICalendarResponse;\n    this.elements = isArray(current.elements) ? current.elements.map(e => new Calendar(e)) : [];\n  }\n}\n\n\n// blocked day\n\nexport interface IDayBlockedRequest {\n  fulfillmentCenterCode: string; // D88\n  pathVariable?: string;\n}\n\nexport interface IBlocked {\n  day: string;\n  check: boolean;\n}\n\n\nexport interface IBlockedResponse {\n  elements: IBlocked[];\n}\n\n\nexport class BlockedDayResponse {\n  public elements: IBlocked[];\n\n  constructor(response: IBlockedResponse) {\n    const current = isObject(response) ? response : {} as IBlockedResponse;\n    this.elements = isArray(current.elements) ? current.elements.map(e => new Blocked(e)) : [];\n  }\n}\n\n\nexport class Blocked {\n  public day: string;\n  public check: boolean;\n\n  constructor(store: IBlocked) {\n    const currentValue = isObject(store) ? store : {} as IBlocked;\n    this.day = currentValue.day || '';\n    this.check = currentValue.check || false;\n  }\n\n}\n",
            "properties": [
                {
                    "name": "channel",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "fulfillmentCenterCode",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "segmentType",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "serviceTypeCode",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ICalendarResponse",
            "id": "interface-ICalendarResponse-3902643a0451058b13dfaa6ff19c913b",
            "file": "src/app/shared/models/calendar/calendar.model.ts",
            "type": "interface",
            "sourceCode": "import { isArray, isObject } from '@helpers/objects-equal.helper';\n\nexport interface ICalendarRequestParams {\n  fulfillmentCenterCode: string; // D88\n  serviceTypeCode: string; // RAD, RED\n  segmentType: string; // EXPRESS\n  channel: string; // DIGITAL, CALL\n}\n\nexport interface ICalendar {\n  year: string;\n  month: string;\n  daysList: Array<IDayList>;\n  monthNumber?: number;\n  startDay?: number;\n}\n\nexport class Week {\n  monday: IDayList;\n  tuesday: IDayList;\n  wednesday: IDayList;\n  thursday: IDayList;\n  friday: IDayList;\n  saturday: IDayList;\n  sunday: IDayList;\n  constructor(monday: IDayList,\n              tuesday: IDayList,\n              wednesday: IDayList,\n              thursday: IDayList,\n              friday: IDayList,\n              saturday: IDayList,\n              sunday: IDayList) {\n    this.monday = monday;\n    this.tuesday = tuesday;\n    this.wednesday = wednesday;\n    this.thursday = thursday;\n    this.friday = friday;\n    this.saturday = saturday;\n    this.sunday = sunday;\n  }\n}\n\nexport class SelectedDay {\n  isSelected: boolean;\n  dayList: IDayList;\n}\n\nexport interface IDayList {\n  id: number;\n  capacity: number;\n  orders: number;\n  dayNumber: number;\n  day: string;\n  dayToShow: boolean;\n  check: boolean;\n  restrictedDay: boolean;\n  today: boolean;\n  pastDay: boolean;\n  dayType?: 'empty' | 'only_number' | 'active';\n}\n\n\nexport class Calendar {\n  public year: string;\n  public month: string;\n  public daysList: Array<IDayList>;\n  public monthNumber: number;\n  public startDay: number;\n\n  constructor(store: ICalendar) {\n    const currentValue = isObject(store) ? store : {} as ICalendar;\n    this.year = currentValue.year || '';\n    this.month = currentValue.month || '';\n    this.daysList = currentValue.daysList || [];\n    this.monthNumber = currentValue.monthNumber || 0;\n    this.startDay = currentValue.startDay || 0;\n  }\n\n}\n\n// CALENDAR RESPONSE\nexport interface ICalendarResponse {\n  elements: ICalendar[];\n}\n\nexport class CalendarResponse {\n  public elements: Calendar[];\n\n  constructor(response: ICalendarResponse) {\n    const current = isObject(response) ? response : {} as ICalendarResponse;\n    this.elements = isArray(current.elements) ? current.elements.map(e => new Calendar(e)) : [];\n  }\n}\n\n\n// blocked day\n\nexport interface IDayBlockedRequest {\n  fulfillmentCenterCode: string; // D88\n  pathVariable?: string;\n}\n\nexport interface IBlocked {\n  day: string;\n  check: boolean;\n}\n\n\nexport interface IBlockedResponse {\n  elements: IBlocked[];\n}\n\n\nexport class BlockedDayResponse {\n  public elements: IBlocked[];\n\n  constructor(response: IBlockedResponse) {\n    const current = isObject(response) ? response : {} as IBlockedResponse;\n    this.elements = isArray(current.elements) ? current.elements.map(e => new Blocked(e)) : [];\n  }\n}\n\n\nexport class Blocked {\n  public day: string;\n  public check: boolean;\n\n  constructor(store: IBlocked) {\n    const currentValue = isObject(store) ? store : {} as IBlocked;\n    this.day = currentValue.day || '';\n    this.check = currentValue.check || false;\n  }\n\n}\n",
            "properties": [
                {
                    "name": "elements",
                    "type": "ICalendar[]",
                    "optional": false,
                    "description": "",
                    "line": 83
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ICalendarServiceDefaultCapacities",
            "id": "interface-ICalendarServiceDefaultCapacities-6564f1b05a51d56ecb41494cbbc3e361",
            "file": "src/app/shared/models/calendar/calendar-response.model.ts",
            "type": "interface",
            "sourceCode": "import { ECapacitiesServiceType } from '../capacities/capacities-service-type.model';\n\nexport interface ICalendarServiceDefaultCapacities {\n    serviceTypeCode: ECapacitiesServiceType;\n    capacitiesQuantity: number;\n    ordersQuantity: number;\n}\n\nexport class CalendarServiceDefaultCapacities {\n    serviceType: ECapacitiesServiceType;\n    capacityQuantity: number;\n}\n",
            "properties": [
                {
                    "name": "capacitiesQuantity",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "ordersQuantity",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "serviceTypeCode",
                    "type": "ECapacitiesServiceType",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ICalendarUpdateRequestParams",
            "id": "interface-ICalendarUpdateRequestParams-123572efbfaeaf2a4ad3ac1c76b959a1",
            "file": "src/app/shared/models/calendar/capacity.model.ts",
            "type": "interface",
            "sourceCode": "import { isObject } from '@helpers/objects-equal.helper';\n\nexport interface ICapacityRequestParams {\n  fulfillmentCenterCode: string; // B88\n  serviceTypeCode: string; // RAD o RET\n  segmentType: string; // PROGRAMMED\n  day: string; // '2020-04-27'\n  channel: string; // DIGITAL, CALL\n  hours: string;\n  quantities: string;\n}\n\n\nexport interface ICalendarUpdateRequestParams {\n  fulfillmentCenterCode: string;\n  serviceTypeCode: string;\n  days: string;\n  channel: string;\n  hours: string;\n  quantities: string;\n  filter: string;\n}\n\nexport interface ICapacity {\n  serviceTypeCode: string;\n  capacitiesQuantity: number;\n  ordersQuantity: number;\n  segments: Array<ISegment>;\n}\n\nexport interface ISegment {\n  id: number;\n  group: null;\n  capacity: number;\n  orders: number;\n  hour: string;\n  scheduleSegment: string;\n  enabled: boolean;\n  dayType?: 'empty' | 'only_number' | 'active';\n}\n\n\nexport class Capacity {\n  public serviceTypeCode: string;\n  public capacitiesQuantity: number;\n  public ordersQuantity: number;\n  public segments: Array<ISegment>;\n\n  constructor(schedules: ICapacity) {\n    const currentValue = isObject(schedules) ? schedules : {} as ICapacity;\n    this.serviceTypeCode = currentValue.serviceTypeCode || '';\n    this.capacitiesQuantity = currentValue.capacitiesQuantity || 0;\n    this.ordersQuantity = currentValue.ordersQuantity || 0;\n    this.segments = currentValue.segments || [];\n  }\n\n}\n\nexport class ResponseDetailCapacity {\n  public serviceTypeCode: string;\n  public capacitiesQuantity: number;\n  public ordersQuantity: number;\n  public segments: Array<ISegment>;\n\n  constructor(schedules: ICapacity) {\n    const currentValue = isObject(schedules) ? schedules : {} as ICapacity;\n    this.serviceTypeCode = currentValue.serviceTypeCode || '';\n    this.capacitiesQuantity = currentValue.capacitiesQuantity || 0;\n    this.ordersQuantity = currentValue.ordersQuantity || 0;\n    this.segments = currentValue.segments || [];\n  }\n}\n",
            "properties": [
                {
                    "name": "channel",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "days",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "filter",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "fulfillmentCenterCode",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "hours",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "quantities",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "serviceTypeCode",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ICapacity",
            "id": "interface-ICapacity-123572efbfaeaf2a4ad3ac1c76b959a1",
            "file": "src/app/shared/models/calendar/capacity.model.ts",
            "type": "interface",
            "sourceCode": "import { isObject } from '@helpers/objects-equal.helper';\n\nexport interface ICapacityRequestParams {\n  fulfillmentCenterCode: string; // B88\n  serviceTypeCode: string; // RAD o RET\n  segmentType: string; // PROGRAMMED\n  day: string; // '2020-04-27'\n  channel: string; // DIGITAL, CALL\n  hours: string;\n  quantities: string;\n}\n\n\nexport interface ICalendarUpdateRequestParams {\n  fulfillmentCenterCode: string;\n  serviceTypeCode: string;\n  days: string;\n  channel: string;\n  hours: string;\n  quantities: string;\n  filter: string;\n}\n\nexport interface ICapacity {\n  serviceTypeCode: string;\n  capacitiesQuantity: number;\n  ordersQuantity: number;\n  segments: Array<ISegment>;\n}\n\nexport interface ISegment {\n  id: number;\n  group: null;\n  capacity: number;\n  orders: number;\n  hour: string;\n  scheduleSegment: string;\n  enabled: boolean;\n  dayType?: 'empty' | 'only_number' | 'active';\n}\n\n\nexport class Capacity {\n  public serviceTypeCode: string;\n  public capacitiesQuantity: number;\n  public ordersQuantity: number;\n  public segments: Array<ISegment>;\n\n  constructor(schedules: ICapacity) {\n    const currentValue = isObject(schedules) ? schedules : {} as ICapacity;\n    this.serviceTypeCode = currentValue.serviceTypeCode || '';\n    this.capacitiesQuantity = currentValue.capacitiesQuantity || 0;\n    this.ordersQuantity = currentValue.ordersQuantity || 0;\n    this.segments = currentValue.segments || [];\n  }\n\n}\n\nexport class ResponseDetailCapacity {\n  public serviceTypeCode: string;\n  public capacitiesQuantity: number;\n  public ordersQuantity: number;\n  public segments: Array<ISegment>;\n\n  constructor(schedules: ICapacity) {\n    const currentValue = isObject(schedules) ? schedules : {} as ICapacity;\n    this.serviceTypeCode = currentValue.serviceTypeCode || '';\n    this.capacitiesQuantity = currentValue.capacitiesQuantity || 0;\n    this.ordersQuantity = currentValue.ordersQuantity || 0;\n    this.segments = currentValue.segments || [];\n  }\n}\n",
            "properties": [
                {
                    "name": "capacitiesQuantity",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "ordersQuantity",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "segments",
                    "type": "Array<ISegment>",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "serviceTypeCode",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ICapacityRequestParams",
            "id": "interface-ICapacityRequestParams-123572efbfaeaf2a4ad3ac1c76b959a1",
            "file": "src/app/shared/models/calendar/capacity.model.ts",
            "type": "interface",
            "sourceCode": "import { isObject } from '@helpers/objects-equal.helper';\n\nexport interface ICapacityRequestParams {\n  fulfillmentCenterCode: string; // B88\n  serviceTypeCode: string; // RAD o RET\n  segmentType: string; // PROGRAMMED\n  day: string; // '2020-04-27'\n  channel: string; // DIGITAL, CALL\n  hours: string;\n  quantities: string;\n}\n\n\nexport interface ICalendarUpdateRequestParams {\n  fulfillmentCenterCode: string;\n  serviceTypeCode: string;\n  days: string;\n  channel: string;\n  hours: string;\n  quantities: string;\n  filter: string;\n}\n\nexport interface ICapacity {\n  serviceTypeCode: string;\n  capacitiesQuantity: number;\n  ordersQuantity: number;\n  segments: Array<ISegment>;\n}\n\nexport interface ISegment {\n  id: number;\n  group: null;\n  capacity: number;\n  orders: number;\n  hour: string;\n  scheduleSegment: string;\n  enabled: boolean;\n  dayType?: 'empty' | 'only_number' | 'active';\n}\n\n\nexport class Capacity {\n  public serviceTypeCode: string;\n  public capacitiesQuantity: number;\n  public ordersQuantity: number;\n  public segments: Array<ISegment>;\n\n  constructor(schedules: ICapacity) {\n    const currentValue = isObject(schedules) ? schedules : {} as ICapacity;\n    this.serviceTypeCode = currentValue.serviceTypeCode || '';\n    this.capacitiesQuantity = currentValue.capacitiesQuantity || 0;\n    this.ordersQuantity = currentValue.ordersQuantity || 0;\n    this.segments = currentValue.segments || [];\n  }\n\n}\n\nexport class ResponseDetailCapacity {\n  public serviceTypeCode: string;\n  public capacitiesQuantity: number;\n  public ordersQuantity: number;\n  public segments: Array<ISegment>;\n\n  constructor(schedules: ICapacity) {\n    const currentValue = isObject(schedules) ? schedules : {} as ICapacity;\n    this.serviceTypeCode = currentValue.serviceTypeCode || '';\n    this.capacitiesQuantity = currentValue.capacitiesQuantity || 0;\n    this.ordersQuantity = currentValue.ordersQuantity || 0;\n    this.segments = currentValue.segments || [];\n  }\n}\n",
            "properties": [
                {
                    "name": "channel",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "day",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "fulfillmentCenterCode",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "hours",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "quantities",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "segmentType",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "serviceTypeCode",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ICapacityStepCapacityTableFormValue",
            "id": "interface-ICapacityStepCapacityTableFormValue-3825493af8509ca4871c85e7b2b4f62e",
            "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-capacity-table/models/op-capacities-step-capacity-table.model.ts",
            "type": "interface",
            "sourceCode": "import { IDatepickerRange } from '@atoms/input-datepicker/input-datepicker-range/input-datepicker-range.component';\nimport { ServiceTypeSegment } from '@models/local/service-type.model';\n\n\nexport interface ICapacityStepCapacityTableFormValue {\n  capacityRange?: IDatepickerRange;\n  capacityForSelection: number;\n  capacitySegmentList: ServiceTypeSegment[];\n}\n\nexport interface ICapacityStepCapacityTableSegments {\n  capacityRange?: IDatepickerRange;\n  capacitySegmentList: ServiceTypeSegment[];\n}\n\nexport class FromFormToCapacityStepCapacityTableSegments implements ICapacityStepCapacityTableSegments {\n  capacityRange: IDatepickerRange;\n  capacitySegmentList: ServiceTypeSegment[];\n\n  constructor(amPmCapacityForm: ICapacityStepCapacityTableFormValue) {\n    this.capacityRange = amPmCapacityForm.capacityRange;\n    this.capacitySegmentList = amPmCapacityForm.capacitySegmentList;\n  }\n\n}\n",
            "properties": [
                {
                    "name": "capacityForSelection",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "capacityRange",
                    "type": "IDatepickerRange",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "capacitySegmentList",
                    "type": "ServiceTypeSegment[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ICapacityStepCapacityTableSegments",
            "id": "interface-ICapacityStepCapacityTableSegments-3825493af8509ca4871c85e7b2b4f62e",
            "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-capacity-table/models/op-capacities-step-capacity-table.model.ts",
            "type": "interface",
            "sourceCode": "import { IDatepickerRange } from '@atoms/input-datepicker/input-datepicker-range/input-datepicker-range.component';\nimport { ServiceTypeSegment } from '@models/local/service-type.model';\n\n\nexport interface ICapacityStepCapacityTableFormValue {\n  capacityRange?: IDatepickerRange;\n  capacityForSelection: number;\n  capacitySegmentList: ServiceTypeSegment[];\n}\n\nexport interface ICapacityStepCapacityTableSegments {\n  capacityRange?: IDatepickerRange;\n  capacitySegmentList: ServiceTypeSegment[];\n}\n\nexport class FromFormToCapacityStepCapacityTableSegments implements ICapacityStepCapacityTableSegments {\n  capacityRange: IDatepickerRange;\n  capacitySegmentList: ServiceTypeSegment[];\n\n  constructor(amPmCapacityForm: ICapacityStepCapacityTableFormValue) {\n    this.capacityRange = amPmCapacityForm.capacityRange;\n    this.capacitySegmentList = amPmCapacityForm.capacitySegmentList;\n  }\n\n}\n",
            "properties": [
                {
                    "name": "capacityRange",
                    "type": "IDatepickerRange",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "capacitySegmentList",
                    "type": "ServiceTypeSegment[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ICapacityStepExpressResourceSegments",
            "id": "interface-ICapacityStepExpressResourceSegments-dfb3124443b4efb9fa7ba6ba06fe8577",
            "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-express-resource/models/op-capacities-step-express-resource.model.ts",
            "type": "interface",
            "sourceCode": "import { IDatepickerRange } from '@atoms/input-datepicker/input-datepicker-range/input-datepicker-range.component';\n\nexport interface ICapacityStepExpressResourceSegments {\n  capacityRange?: IDatepickerRange;\n  expressResource: number;\n}\n\nexport class FromFormToCapacityStepExpressResourceSegments implements ICapacityStepExpressResourceSegments {\n  capacityRange: IDatepickerRange;\n  expressResource: number;\n\n  constructor(amPmCapacityForm: ICapacityStepExpressResourceSegments) {\n    this.capacityRange = amPmCapacityForm.capacityRange;\n    this.expressResource = amPmCapacityForm.expressResource;\n  }\n}\n\n",
            "properties": [
                {
                    "name": "capacityRange",
                    "type": "IDatepickerRange",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "expressResource",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ICustomSelectOption",
            "id": "interface-ICustomSelectOption-1e829c56793866aeea463a438b08c4a5",
            "file": "src/app/shared/interfaces/custom-controls.interface.ts",
            "type": "interface",
            "sourceCode": "export interface ICustomSelectOption {\n  value: string;\n  text: string;\n  code?: string;\n  fulfillmentCenterCode?: string; // D88\n  serviceTypeCode?: string; // RAD, RED\n  segmentType?: string; // EXPRESS\n  channel?: string; // DIGITAL, CALL\n}\n\n\n",
            "properties": [
                {
                    "name": "channel",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "code",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "fulfillmentCenterCode",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "segmentType",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "serviceTypeCode",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "text",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "value",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IDatepickerRange",
            "id": "interface-IDatepickerRange-8ddae36757deb3dcaea2d9b5c9458597",
            "file": "src/app/core/atoms/input-datepicker/input-datepicker-range/input-datepicker-range.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnDestroy, OnInit, Optional, Self } from '@angular/core';\nimport { CustomDateAdapter, MY_FORMATS } from '../input-datepicker/input-datepicker.component';\nimport { ControlValueAccessor, FormControl, FormGroup, NgControl } from '@angular/forms';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport * as moment from 'moment';\nimport { Subscription } from 'rxjs';\nimport { DatepickerHeaderComponent } from '../components/datepicker-header/datepicker-header.component';\n\nexport interface IDatepickerRange {\n  startDate: string;\n  endDate: string;\n}\n\n@Component({\n  selector: 'app-input-datepicker-range',\n  templateUrl: './input-datepicker-range.component.html',\n  styleUrls: ['./input-datepicker-range.component.scss'],\n  providers: [\n    {provide: DateAdapter, useClass: CustomDateAdapter, deps: [MAT_DATE_LOCALE]},\n    {provide: MAT_DATE_FORMATS, useValue: MY_FORMATS},\n  ],\n})\nexport class InputDatepickerRangeComponent implements ControlValueAccessor, OnInit, OnDestroy {\n\n  public datepickerRangeSubscribe: Subscription[] = [];\n\n  public datepickerRangeHeader = DatepickerHeaderComponent;\n  public datepickerRangeName: string | number = 'input-datepicker';\n  private datepickerRangeValue: IDatepickerRange = {} as IDatepickerRange;\n\n  public datepickerRangeGroup: FormGroup = new FormGroup({\n    startDate: new FormControl(),\n    endDate: new FormControl()\n  });\n\n\n  @Input() placeholder = 'dd/mm/aaaa';\n  @Input() inputFormat = 'DD/MM/YYYY';\n  @Input() outputFormat = 'DD/MM/YYYY';\n  @Input() minDate = moment();\n  @Input() maxDate: moment.Moment;\n  @Input() disabled = false;\n  @Input() iconDisabled = false;\n\n  @Input('startValue')\n  set _startValue(value: string) {\n    this.datepickerRangeStartControl\n      .setValue(value ? moment(value, this.inputFormat) : null);\n  }\n\n  @Input('endValue')\n  set _endValue(value: string) {\n    this.datepickerRangeEndControl\n      .setValue(value ? moment(value, this.inputFormat) : null);\n  }\n\n\n  onChange = (_: any) => {\n  }\n  onTouched = (_: any) => {\n  }\n\n  constructor(@Optional() @Self() public ngControl: NgControl) {\n    if (ngControl){\n      ngControl.valueAccessor = this;\n    }\n  }\n\n  ngOnInit(): void {\n    this.changeDatepickerRangeValue();\n\n    if (this.ngControl && this.ngControl.name) {\n      this.datepickerRangeName = this.ngControl.name;\n    }\n  }\n\n  ngOnDestroy() {\n    this.datepickerRangeSubscribe.forEach(subscribe => subscribe.unsubscribe());\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  writeValue(value: IDatepickerRange): void {\n    this.datepickerRangeStartControl\n      .setValue(value && value.startDate ? moment(value.startDate, this.inputFormat) : null);\n    this.datepickerRangeEndControl\n      .setValue(value && value.endDate ? moment(value.endDate, this.inputFormat) : null);\n  }\n\n  get datepickerRangeStartControl() {\n    return this.datepickerRangeGroup.get('startDate') as FormControl;\n  }\n\n\n  get datepickerRangeEndControl() {\n    return this.datepickerRangeGroup.get('endDate') as FormControl;\n  }\n\n\n  changeDatepickerRangeValue() {\n    const datepickerRangeSubscribe = this.datepickerRangeGroup.valueChanges\n      .subscribe((value) => {\n        this.datepickerRangeValue.startDate = value && value.startDate ?\n          moment(value.startDate, this.inputFormat).format(this.outputFormat) : null;\n        this.datepickerRangeValue.endDate = value && value.endDate ?\n          moment(value.endDate, this.inputFormat).format(this.outputFormat) : null;\n        this.onChange(this.datepickerRangeValue);\n      });\n    this.datepickerRangeSubscribe.push(datepickerRangeSubscribe);\n  }\n\n}\n",
            "properties": [
                {
                    "name": "endDate",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "startDate",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IDayBlockedRequest",
            "id": "interface-IDayBlockedRequest-3902643a0451058b13dfaa6ff19c913b",
            "file": "src/app/shared/models/calendar/calendar.model.ts",
            "type": "interface",
            "sourceCode": "import { isArray, isObject } from '@helpers/objects-equal.helper';\n\nexport interface ICalendarRequestParams {\n  fulfillmentCenterCode: string; // D88\n  serviceTypeCode: string; // RAD, RED\n  segmentType: string; // EXPRESS\n  channel: string; // DIGITAL, CALL\n}\n\nexport interface ICalendar {\n  year: string;\n  month: string;\n  daysList: Array<IDayList>;\n  monthNumber?: number;\n  startDay?: number;\n}\n\nexport class Week {\n  monday: IDayList;\n  tuesday: IDayList;\n  wednesday: IDayList;\n  thursday: IDayList;\n  friday: IDayList;\n  saturday: IDayList;\n  sunday: IDayList;\n  constructor(monday: IDayList,\n              tuesday: IDayList,\n              wednesday: IDayList,\n              thursday: IDayList,\n              friday: IDayList,\n              saturday: IDayList,\n              sunday: IDayList) {\n    this.monday = monday;\n    this.tuesday = tuesday;\n    this.wednesday = wednesday;\n    this.thursday = thursday;\n    this.friday = friday;\n    this.saturday = saturday;\n    this.sunday = sunday;\n  }\n}\n\nexport class SelectedDay {\n  isSelected: boolean;\n  dayList: IDayList;\n}\n\nexport interface IDayList {\n  id: number;\n  capacity: number;\n  orders: number;\n  dayNumber: number;\n  day: string;\n  dayToShow: boolean;\n  check: boolean;\n  restrictedDay: boolean;\n  today: boolean;\n  pastDay: boolean;\n  dayType?: 'empty' | 'only_number' | 'active';\n}\n\n\nexport class Calendar {\n  public year: string;\n  public month: string;\n  public daysList: Array<IDayList>;\n  public monthNumber: number;\n  public startDay: number;\n\n  constructor(store: ICalendar) {\n    const currentValue = isObject(store) ? store : {} as ICalendar;\n    this.year = currentValue.year || '';\n    this.month = currentValue.month || '';\n    this.daysList = currentValue.daysList || [];\n    this.monthNumber = currentValue.monthNumber || 0;\n    this.startDay = currentValue.startDay || 0;\n  }\n\n}\n\n// CALENDAR RESPONSE\nexport interface ICalendarResponse {\n  elements: ICalendar[];\n}\n\nexport class CalendarResponse {\n  public elements: Calendar[];\n\n  constructor(response: ICalendarResponse) {\n    const current = isObject(response) ? response : {} as ICalendarResponse;\n    this.elements = isArray(current.elements) ? current.elements.map(e => new Calendar(e)) : [];\n  }\n}\n\n\n// blocked day\n\nexport interface IDayBlockedRequest {\n  fulfillmentCenterCode: string; // D88\n  pathVariable?: string;\n}\n\nexport interface IBlocked {\n  day: string;\n  check: boolean;\n}\n\n\nexport interface IBlockedResponse {\n  elements: IBlocked[];\n}\n\n\nexport class BlockedDayResponse {\n  public elements: IBlocked[];\n\n  constructor(response: IBlockedResponse) {\n    const current = isObject(response) ? response : {} as IBlockedResponse;\n    this.elements = isArray(current.elements) ? current.elements.map(e => new Blocked(e)) : [];\n  }\n}\n\n\nexport class Blocked {\n  public day: string;\n  public check: boolean;\n\n  constructor(store: IBlocked) {\n    const currentValue = isObject(store) ? store : {} as IBlocked;\n    this.day = currentValue.day || '';\n    this.check = currentValue.check || false;\n  }\n\n}\n",
            "properties": [
                {
                    "name": "fulfillmentCenterCode",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 99
                },
                {
                    "name": "pathVariable",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 100
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IDayList",
            "id": "interface-IDayList-3902643a0451058b13dfaa6ff19c913b",
            "file": "src/app/shared/models/calendar/calendar.model.ts",
            "type": "interface",
            "sourceCode": "import { isArray, isObject } from '@helpers/objects-equal.helper';\n\nexport interface ICalendarRequestParams {\n  fulfillmentCenterCode: string; // D88\n  serviceTypeCode: string; // RAD, RED\n  segmentType: string; // EXPRESS\n  channel: string; // DIGITAL, CALL\n}\n\nexport interface ICalendar {\n  year: string;\n  month: string;\n  daysList: Array<IDayList>;\n  monthNumber?: number;\n  startDay?: number;\n}\n\nexport class Week {\n  monday: IDayList;\n  tuesday: IDayList;\n  wednesday: IDayList;\n  thursday: IDayList;\n  friday: IDayList;\n  saturday: IDayList;\n  sunday: IDayList;\n  constructor(monday: IDayList,\n              tuesday: IDayList,\n              wednesday: IDayList,\n              thursday: IDayList,\n              friday: IDayList,\n              saturday: IDayList,\n              sunday: IDayList) {\n    this.monday = monday;\n    this.tuesday = tuesday;\n    this.wednesday = wednesday;\n    this.thursday = thursday;\n    this.friday = friday;\n    this.saturday = saturday;\n    this.sunday = sunday;\n  }\n}\n\nexport class SelectedDay {\n  isSelected: boolean;\n  dayList: IDayList;\n}\n\nexport interface IDayList {\n  id: number;\n  capacity: number;\n  orders: number;\n  dayNumber: number;\n  day: string;\n  dayToShow: boolean;\n  check: boolean;\n  restrictedDay: boolean;\n  today: boolean;\n  pastDay: boolean;\n  dayType?: 'empty' | 'only_number' | 'active';\n}\n\n\nexport class Calendar {\n  public year: string;\n  public month: string;\n  public daysList: Array<IDayList>;\n  public monthNumber: number;\n  public startDay: number;\n\n  constructor(store: ICalendar) {\n    const currentValue = isObject(store) ? store : {} as ICalendar;\n    this.year = currentValue.year || '';\n    this.month = currentValue.month || '';\n    this.daysList = currentValue.daysList || [];\n    this.monthNumber = currentValue.monthNumber || 0;\n    this.startDay = currentValue.startDay || 0;\n  }\n\n}\n\n// CALENDAR RESPONSE\nexport interface ICalendarResponse {\n  elements: ICalendar[];\n}\n\nexport class CalendarResponse {\n  public elements: Calendar[];\n\n  constructor(response: ICalendarResponse) {\n    const current = isObject(response) ? response : {} as ICalendarResponse;\n    this.elements = isArray(current.elements) ? current.elements.map(e => new Calendar(e)) : [];\n  }\n}\n\n\n// blocked day\n\nexport interface IDayBlockedRequest {\n  fulfillmentCenterCode: string; // D88\n  pathVariable?: string;\n}\n\nexport interface IBlocked {\n  day: string;\n  check: boolean;\n}\n\n\nexport interface IBlockedResponse {\n  elements: IBlocked[];\n}\n\n\nexport class BlockedDayResponse {\n  public elements: IBlocked[];\n\n  constructor(response: IBlockedResponse) {\n    const current = isObject(response) ? response : {} as IBlockedResponse;\n    this.elements = isArray(current.elements) ? current.elements.map(e => new Blocked(e)) : [];\n  }\n}\n\n\nexport class Blocked {\n  public day: string;\n  public check: boolean;\n\n  constructor(store: IBlocked) {\n    const currentValue = isObject(store) ? store : {} as IBlocked;\n    this.day = currentValue.day || '';\n    this.check = currentValue.check || false;\n  }\n\n}\n",
            "properties": [
                {
                    "name": "capacity",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "check",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "day",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "dayNumber",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "dayToShow",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "dayType",
                    "type": "\"empty\" | \"only_number\" | \"active\"",
                    "optional": true,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "id",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "orders",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "pastDay",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "restrictedDay",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "today",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 57
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ILocal",
            "id": "interface-ILocal-ae2d2ddee243078d33d64a407c4dbde9",
            "file": "src/app/shared/models/local/local.model.ts",
            "type": "interface",
            "sourceCode": "export interface ILocal {\n    localCode: string;\n    name: string;\n    description: string;\n    position: number;\n    address: string;\n    wmsEnabled: boolean;\n    companies: Array<ILocalCompany>;\n    legacyId: number;\n    latitude: number;\n    longitude: number;\n    inkaVentaId: string;\n    startHour: string;\n    endHour: string;\n    drugstoreWareHouseId: number;\n    localType: string;\n    services: Array<ILocalService>;\n}\n\nexport interface ILocalService {\n    code: string;\n    service: string;\n    shortName: string;\n    enabled: boolean;\n}\n\nexport interface ILocalCompany {\n    company: string;\n    code: string;\n}\n\nexport class Local {\n    localCode: string;\n    name: string;\n    description: string;\n    position: number;\n    address: string;\n    wmsEnabled: boolean;\n    companies: Array<ILocalCompany>;\n    legacyId: number;\n    latitude: number;\n    longitude: number;\n    inkaVentaId: string;\n    startHour: string;\n    endHour: string;\n    drugstoreWareHouseId: number;\n    localType: string;\n    services: Array<ILocalService>;\n}\n",
            "properties": [
                {
                    "name": "address",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "companies",
                    "type": "Array<ILocalCompany>",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "description",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "drugstoreWareHouseId",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "endHour",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "inkaVentaId",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "latitude",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "legacyId",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "localCode",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "localType",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "longitude",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "position",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "services",
                    "type": "Array<ILocalService>",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "startHour",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "wmsEnabled",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ILocalCompany",
            "id": "interface-ILocalCompany-ae2d2ddee243078d33d64a407c4dbde9",
            "file": "src/app/shared/models/local/local.model.ts",
            "type": "interface",
            "sourceCode": "export interface ILocal {\n    localCode: string;\n    name: string;\n    description: string;\n    position: number;\n    address: string;\n    wmsEnabled: boolean;\n    companies: Array<ILocalCompany>;\n    legacyId: number;\n    latitude: number;\n    longitude: number;\n    inkaVentaId: string;\n    startHour: string;\n    endHour: string;\n    drugstoreWareHouseId: number;\n    localType: string;\n    services: Array<ILocalService>;\n}\n\nexport interface ILocalService {\n    code: string;\n    service: string;\n    shortName: string;\n    enabled: boolean;\n}\n\nexport interface ILocalCompany {\n    company: string;\n    code: string;\n}\n\nexport class Local {\n    localCode: string;\n    name: string;\n    description: string;\n    position: number;\n    address: string;\n    wmsEnabled: boolean;\n    companies: Array<ILocalCompany>;\n    legacyId: number;\n    latitude: number;\n    longitude: number;\n    inkaVentaId: string;\n    startHour: string;\n    endHour: string;\n    drugstoreWareHouseId: number;\n    localType: string;\n    services: Array<ILocalService>;\n}\n",
            "properties": [
                {
                    "name": "code",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "company",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ILocalGroup",
            "id": "interface-ILocalGroup-851a379d4a59571eee1549debc87c90d",
            "file": "src/app/shared/models/local/local-group.model.ts",
            "type": "interface",
            "sourceCode": "import { isObject } from '@helpers/objects-equal.helper';\n\nexport interface ILocalGroup {\n    description: string;\n    localCode: string;\n    position: number;\n    wmsEnabled: boolean;\n}\n\nexport class LocalGroup {\n    description: string;\n    localCode: string;\n    position: number;\n    wmsEnabled: boolean;\n\n    constructor(iLocalGroup: ILocalGroup) {\n        const localGroup = isObject(iLocalGroup) ? iLocalGroup : {} as ILocalGroup;\n        this.description = localGroup.description || '';\n        this.localCode = localGroup.localCode || '';\n        this.position = localGroup.position || 0;\n        this.wmsEnabled = localGroup.wmsEnabled || false;\n    }\n}\n",
            "properties": [
                {
                    "name": "description",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "localCode",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "position",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "wmsEnabled",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ILocalParams",
            "id": "interface-ILocalParams-93f3c57056708c1c0c441d40c85abc10",
            "file": "src/app/shared/models/local/local-params.model.ts",
            "type": "interface",
            "sourceCode": "import { ECapacitiesServiceType } from '../capacities/capacities-service-type.model';\n\nexport interface ILocalParams {\n    detailType: string;\n    fulfillmentCenter: string;\n    serviceType: ECapacitiesServiceType;\n}\n",
            "properties": [
                {
                    "name": "detailType",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "fulfillmentCenter",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "serviceType",
                    "type": "ECapacitiesServiceType",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ILocalService",
            "id": "interface-ILocalService-ae2d2ddee243078d33d64a407c4dbde9",
            "file": "src/app/shared/models/local/local.model.ts",
            "type": "interface",
            "sourceCode": "export interface ILocal {\n    localCode: string;\n    name: string;\n    description: string;\n    position: number;\n    address: string;\n    wmsEnabled: boolean;\n    companies: Array<ILocalCompany>;\n    legacyId: number;\n    latitude: number;\n    longitude: number;\n    inkaVentaId: string;\n    startHour: string;\n    endHour: string;\n    drugstoreWareHouseId: number;\n    localType: string;\n    services: Array<ILocalService>;\n}\n\nexport interface ILocalService {\n    code: string;\n    service: string;\n    shortName: string;\n    enabled: boolean;\n}\n\nexport interface ILocalCompany {\n    company: string;\n    code: string;\n}\n\nexport class Local {\n    localCode: string;\n    name: string;\n    description: string;\n    position: number;\n    address: string;\n    wmsEnabled: boolean;\n    companies: Array<ILocalCompany>;\n    legacyId: number;\n    latitude: number;\n    longitude: number;\n    inkaVentaId: string;\n    startHour: string;\n    endHour: string;\n    drugstoreWareHouseId: number;\n    localType: string;\n    services: Array<ILocalService>;\n}\n",
            "properties": [
                {
                    "name": "code",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "enabled",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "service",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "shortName",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IOpCapacitiesServiceTypeQueryParams",
            "id": "interface-IOpCapacitiesServiceTypeQueryParams-76f0dc7fff2b120b2e6e6b5a4e310875",
            "file": "src/app/business/operations/views/operations-capacities/models/operations-capacities-service-type-query-params.model.ts",
            "type": "interface",
            "sourceCode": "import { ECapacityStepGroupOrLocal } from '../components/op-capacities-step-group-or-local/op-capacities-step-group-or-local.service';\nimport { ECapacitiesStepEditionMode } from '../components/op-capacities-step-edition-mode/op-capacities-step-edition-mode.service';\n\nexport interface IOpCapacitiesServiceTypeQueryParams {\n    groupOrLocal: ECapacityStepGroupOrLocal;\n    localCode: string;\n    editionMode: ECapacitiesStepEditionMode;\n}\n",
            "properties": [
                {
                    "name": "editionMode",
                    "type": "ECapacitiesStepEditionMode",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "groupOrLocal",
                    "type": "ECapacityStepGroupOrLocal",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "localCode",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ISegment",
            "id": "interface-ISegment-123572efbfaeaf2a4ad3ac1c76b959a1",
            "file": "src/app/shared/models/calendar/capacity.model.ts",
            "type": "interface",
            "sourceCode": "import { isObject } from '@helpers/objects-equal.helper';\n\nexport interface ICapacityRequestParams {\n  fulfillmentCenterCode: string; // B88\n  serviceTypeCode: string; // RAD o RET\n  segmentType: string; // PROGRAMMED\n  day: string; // '2020-04-27'\n  channel: string; // DIGITAL, CALL\n  hours: string;\n  quantities: string;\n}\n\n\nexport interface ICalendarUpdateRequestParams {\n  fulfillmentCenterCode: string;\n  serviceTypeCode: string;\n  days: string;\n  channel: string;\n  hours: string;\n  quantities: string;\n  filter: string;\n}\n\nexport interface ICapacity {\n  serviceTypeCode: string;\n  capacitiesQuantity: number;\n  ordersQuantity: number;\n  segments: Array<ISegment>;\n}\n\nexport interface ISegment {\n  id: number;\n  group: null;\n  capacity: number;\n  orders: number;\n  hour: string;\n  scheduleSegment: string;\n  enabled: boolean;\n  dayType?: 'empty' | 'only_number' | 'active';\n}\n\n\nexport class Capacity {\n  public serviceTypeCode: string;\n  public capacitiesQuantity: number;\n  public ordersQuantity: number;\n  public segments: Array<ISegment>;\n\n  constructor(schedules: ICapacity) {\n    const currentValue = isObject(schedules) ? schedules : {} as ICapacity;\n    this.serviceTypeCode = currentValue.serviceTypeCode || '';\n    this.capacitiesQuantity = currentValue.capacitiesQuantity || 0;\n    this.ordersQuantity = currentValue.ordersQuantity || 0;\n    this.segments = currentValue.segments || [];\n  }\n\n}\n\nexport class ResponseDetailCapacity {\n  public serviceTypeCode: string;\n  public capacitiesQuantity: number;\n  public ordersQuantity: number;\n  public segments: Array<ISegment>;\n\n  constructor(schedules: ICapacity) {\n    const currentValue = isObject(schedules) ? schedules : {} as ICapacity;\n    this.serviceTypeCode = currentValue.serviceTypeCode || '';\n    this.capacitiesQuantity = currentValue.capacitiesQuantity || 0;\n    this.ordersQuantity = currentValue.ordersQuantity || 0;\n    this.segments = currentValue.segments || [];\n  }\n}\n",
            "properties": [
                {
                    "name": "capacity",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "dayType",
                    "type": "\"empty\" | \"only_number\" | \"active\"",
                    "optional": true,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "enabled",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "group",
                    "type": "null",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "hour",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "id",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "orders",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "scheduleSegment",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IServiceType",
            "id": "interface-IServiceType-ffd73da5f8867039db32b61e833ca622",
            "file": "src/app/shared/models/local/service-type.model.ts",
            "type": "interface",
            "sourceCode": "export interface IServiceType {\n    capacitiesQuantity: number;\n    endDay: string;\n    ordersQuantity: number;\n    segments: Array<IServiceTypeSegment>;\n    selectDaysQuantity?: number;\n    serviceTypeCode: string;\n    startDay: string;\n}\n\nexport interface IServiceTypeSegment {\n    capacity: number;\n    orders: number;\n    enabled: boolean;\n    hour?: string;\n    value?: string;\n}\n\nexport class ServiceTypeSegment {\n    segmentCapacity: number;\n    segmentHour: string;\n    segmentValue: string;\n    segmentEnabled?: boolean;\n    segmentOrders?: number;\n}\n\nexport class ServiceType {\n    serviceTypeCode: string;\n    capacitiesQuantity: number;\n    ordersQuantity: number;\n    selectDaysQuantity: number;\n    startDay: string;\n    endDay: string;\n    segmentList: Array<ServiceTypeSegment>;\n}\n",
            "properties": [
                {
                    "name": "capacitiesQuantity",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "endDay",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "ordersQuantity",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "segments",
                    "type": "Array<IServiceTypeSegment>",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "selectDaysQuantity",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "serviceTypeCode",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "startDay",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IServiceTypeSegment",
            "id": "interface-IServiceTypeSegment-ffd73da5f8867039db32b61e833ca622",
            "file": "src/app/shared/models/local/service-type.model.ts",
            "type": "interface",
            "sourceCode": "export interface IServiceType {\n    capacitiesQuantity: number;\n    endDay: string;\n    ordersQuantity: number;\n    segments: Array<IServiceTypeSegment>;\n    selectDaysQuantity?: number;\n    serviceTypeCode: string;\n    startDay: string;\n}\n\nexport interface IServiceTypeSegment {\n    capacity: number;\n    orders: number;\n    enabled: boolean;\n    hour?: string;\n    value?: string;\n}\n\nexport class ServiceTypeSegment {\n    segmentCapacity: number;\n    segmentHour: string;\n    segmentValue: string;\n    segmentEnabled?: boolean;\n    segmentOrders?: number;\n}\n\nexport class ServiceType {\n    serviceTypeCode: string;\n    capacitiesQuantity: number;\n    ordersQuantity: number;\n    selectDaysQuantity: number;\n    startDay: string;\n    endDay: string;\n    segmentList: Array<ServiceTypeSegment>;\n}\n",
            "properties": [
                {
                    "name": "capacity",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "enabled",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "hour",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "orders",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "value",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IUser",
            "id": "interface-IUser-4266a36d04694dd3a95e7fd96e49ae51",
            "file": "src/app/shared/interfaces/user.interface.ts",
            "type": "interface",
            "sourceCode": "import { Role } from '@models/auth/role.model';\n\nexport interface IUser {\n    client_id: string;\n    exp: number;\n    jti: string;\n    scope: Array<'read' | 'write'>;\n    authorities: Role[];\n    email: string;\n    user_name: string;\n    name: string;\n    first_last_name: string;\n    second_last_name: string;\n}\n",
            "properties": [
                {
                    "name": "authorities",
                    "type": "Role[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "client_id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "email",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "exp",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "first_last_name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "jti",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "scope",
                    "type": "Array<\"read\" | \"write\">",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "second_last_name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "user_name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AlertService",
            "id": "injectable-AlertService-607002efbec34d28174556c3c876018b",
            "file": "src/app/core/molecules/alert/alert.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "alert",
                    "args": [
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "status",
                            "type": "EAlertStatus"
                        },
                        {
                            "name": "config",
                            "type": "MatSnackBarConfig",
                            "defaultValue": "{}"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 15,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "message",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "status",
                            "type": "EAlertStatus",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "config",
                            "type": "MatSnackBarConfig",
                            "defaultValue": "{}",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "alertError",
                    "args": [
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "config",
                            "type": "MatSnackBarConfig",
                            "defaultValue": "{}"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 31,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "message",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "config",
                            "type": "MatSnackBarConfig",
                            "defaultValue": "{}",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "alertSuccess",
                    "args": [
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "config",
                            "type": "MatSnackBarConfig",
                            "defaultValue": "{}"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 23,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "message",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "config",
                            "type": "MatSnackBarConfig",
                            "defaultValue": "{}",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "alertWarning",
                    "args": [
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "config",
                            "type": "MatSnackBarConfig",
                            "defaultValue": "{}"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 27,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "message",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "config",
                            "type": "MatSnackBarConfig",
                            "defaultValue": "{}",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { AlertComponent, EAlertStatus } from './alert.component';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\n@Injectable()\nexport class AlertService {\n\n    constructor(private _matSnackBar: MatSnackBar) {\n    }\n\n    public get matSnackbar() {\n        return this._matSnackBar;\n    }\n\n    public alert(message: string, status: EAlertStatus, config: MatSnackBarConfig = {}) {\n        config.duration = 5000;\n        config.verticalPosition = 'bottom';\n        config.panelClass = 'alert';\n        config.data = {message, status};\n        return this.matSnackbar.openFromComponent(AlertComponent, config);\n    }\n\n    public alertSuccess(message: string, config: MatSnackBarConfig = {}) {\n        return this.alert(message, EAlertStatus.success, config);\n    }\n\n    public alertWarning(message: string, config: MatSnackBarConfig = {}) {\n        return this.alert(message, EAlertStatus.warning, config);\n    }\n\n    public alertError(message: string, config: MatSnackBarConfig = {}) {\n        return this.alert(message, EAlertStatus.error, config);\n    }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_matSnackBar",
                        "type": "MatSnackBar"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "_matSnackBar",
                        "type": "MatSnackBar",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "matSnackbar": {
                    "name": "matSnackbar",
                    "getSignature": {
                        "name": "matSnackbar",
                        "type": "",
                        "returnType": "",
                        "line": 11
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "AuthClientService",
            "id": "injectable-AuthClientService-5618678f4015e4e615c44b838cb0526f",
            "file": "src/app/shared/clients/auth/auth-client.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resetPassword",
                    "args": [
                        {
                            "name": "iAuthRestorePasswordRequest",
                            "type": "IAuthRestorePasswordRequest"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 49,
                    "jsdoctags": [
                        {
                            "name": "iAuthRestorePasswordRequest",
                            "type": "IAuthRestorePasswordRequest",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sendPasswordCode",
                    "args": [
                        {
                            "name": "username",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 35,
                    "jsdoctags": [
                        {
                            "name": "username",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "signIn",
                    "args": [
                        {
                            "name": "iAuthRequest",
                            "type": "IAuthRequest"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<IAuthResponse>",
                    "typeParameters": [],
                    "line": 20,
                    "jsdoctags": [
                        {
                            "name": "iAuthRequest",
                            "type": "IAuthRequest",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validPasswordCode",
                    "args": [
                        {
                            "name": "iAuthCodeRequest",
                            "type": "IAuthCodeRequest"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 43,
                    "jsdoctags": [
                        {
                            "name": "iAuthCodeRequest",
                            "type": "IAuthCodeRequest",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { EndpointsParameter } from '@parameters/endpoints.parameter';\nimport { GenericService } from '@clients/generic/generic.service';\nimport { take } from 'rxjs/operators';\nimport { IAuthCodeRequest, IAuthRequest, IAuthResponse, IAuthRestorePasswordRequest } from '@interfaces/auth.interface';\nimport { Observable } from 'rxjs';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { EAuthCredentials } from '@parameters/auth.parameters';\nimport { EHttpHeaderContentTypes, EHttpHeaders } from '@parameters/http-header.parameter';\n\n\n@Injectable()\nexport class AuthClientService {\n\n    constructor(\n        private genericService: GenericService,\n    ) {\n    }\n\n    signIn(iAuthRequest: IAuthRequest): Observable<IAuthResponse> {\n        const endpoint = `${EndpointsParameter.AUTH_TOKEN}`;\n\n        iAuthRequest.grant_type = EAuthCredentials.grant_type;\n        const body = new HttpParams({fromObject: {...iAuthRequest}}).toString();\n\n        const header = new HttpHeaders({\n            [EHttpHeaders.contentType]: EHttpHeaderContentTypes.xWwwFormUrlencoded,\n            [EHttpHeaders.authorization]: `Basic ${btoa(EAuthCredentials.username + ':' + EAuthCredentials.password)}`\n        });\n\n        return this.genericService.genericPost<IAuthResponse>(endpoint, body, null, header)\n            .pipe(take(1));\n    }\n\n    sendPasswordCode(username: string): Observable<boolean> {\n        const endpoint = `${EndpointsParameter.AUTH_SEND_CODE}`;\n        const httpParams = new HttpParams()\n            .set('email', String(username));\n        return this.genericService.genericGet<boolean>(endpoint, httpParams)\n            .pipe(take(1));\n    }\n\n    validPasswordCode(iAuthCodeRequest: IAuthCodeRequest): Observable<boolean> {\n        const endpoint = `${EndpointsParameter.AUTH_VALID_CODE}`;\n        return this.genericService.genericPost<boolean>(endpoint, iAuthCodeRequest)\n            .pipe(take(1));\n    }\n\n    resetPassword(iAuthRestorePasswordRequest: IAuthRestorePasswordRequest): Observable<boolean> {\n        const endpoint = `${EndpointsParameter.AUTH_RESTORE_PASSWORD}`;\n        return this.genericService.genericPost<boolean>(endpoint, iAuthRestorePasswordRequest)\n            .pipe(take(1));\n    }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "genericService",
                        "type": "GenericService"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "genericService",
                        "type": "GenericService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "AuthImplementService",
            "id": "injectable-AuthImplementService-d75d46a2d1fcdbc7c22cca1bcad35e2b",
            "file": "src/app/shared/implements/auth/auth-implement.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resetPassword",
                    "args": [
                        {
                            "name": "iAuthRestorePasswordRequest",
                            "type": "IAuthRestorePasswordRequest"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 38,
                    "jsdoctags": [
                        {
                            "name": "iAuthRestorePasswordRequest",
                            "type": "IAuthRestorePasswordRequest",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sendPasswordCode",
                    "args": [
                        {
                            "name": "username",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 30,
                    "jsdoctags": [
                        {
                            "name": "username",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "signIn",
                    "args": [
                        {
                            "name": "username",
                            "type": "string"
                        },
                        {
                            "name": "password",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<IAuthResponse>",
                    "typeParameters": [],
                    "line": 20,
                    "jsdoctags": [
                        {
                            "name": "username",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validPasswordCode",
                    "args": [
                        {
                            "name": "email",
                            "type": "string"
                        },
                        {
                            "name": "code",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 34,
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "code",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { AuthClientService } from '@clients/auth/auth-client.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IAuthResponse, IAuthRestorePasswordRequest } from '@interfaces/auth.interface';\nimport { TokenStoreService } from '@stores/token-store.service';\n\n\n@Injectable()\nexport class AuthImplementService {\n\n\n    constructor(\n        private authClient: AuthClientService,\n        private tokenStore: TokenStoreService\n    ) {\n    }\n\n\n    signIn(username: string, password: string): Observable<IAuthResponse> {\n        return this.authClient.signIn({username, password})\n            .pipe(\n                map((iAuthResponse: IAuthResponse) => {\n                    this.tokenStore.accessToken = iAuthResponse.access_token;\n                    return iAuthResponse;\n                })\n            );\n    }\n\n    sendPasswordCode(username: string): Observable<boolean> {\n        return this.authClient.sendPasswordCode(username);\n    }\n\n    validPasswordCode(email: string, code: string): Observable<boolean> {\n        return this.authClient.validPasswordCode({email, code});\n    }\n\n    resetPassword(iAuthRestorePasswordRequest: IAuthRestorePasswordRequest) {\n        return this.authClient.resetPassword(iAuthRestorePasswordRequest);\n    }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "authClient",
                        "type": "AuthClientService"
                    },
                    {
                        "name": "tokenStore",
                        "type": "TokenStoreService"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "authClient",
                        "type": "AuthClientService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "tokenStore",
                        "type": "TokenStoreService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CalendarClientService",
            "id": "injectable-CalendarClientService-75b46bc6b6e799428183743247e4b52a",
            "file": "src/app/shared/clients/calendar/calendar-client.service.ts",
            "properties": [
                {
                    "name": "CALENDAR_CAPACITIES",
                    "defaultValue": "EndpointsParameter.GET_CALENDAR_CAPACITIES",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "CALENDAR_UPDATE_ENDPOINT",
                    "defaultValue": "EndpointsParameter.PATCH_CALENDAR_UPDATE",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "CALENDAR_UPDATE_RANGE_ENDPOINT",
                    "defaultValue": "EndpointsParameter.PATCH_CALENDAR_RANGE_UPDATE",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        112,
                        132
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getCalendarDefaultCapacities$",
                    "args": [
                        {
                            "name": "params",
                            "type": "ICalendarParams"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ICalendarServiceDefaultCapacities[]>",
                    "typeParameters": [],
                    "line": 44,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "ICalendarParams",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "patchCalendarRangeUpdateClient$",
                    "args": [
                        {
                            "name": "request",
                            "type": "ICalendarUpdateRequestParams"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 36,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "ICalendarUpdateRequestParams",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "patchCalendarUpdateClient$",
                    "args": [
                        {
                            "name": "request",
                            "type": "ICalendarUpdateRequestParams"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 28,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "ICalendarUpdateRequestParams",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpParams } from '@angular/common/http';\n\nimport { map, take } from 'rxjs/operators';\n\nimport { EndpointsParameter } from '@parameters/endpoints.parameter';\nimport { GenericService } from '../generic/generic.service';\nimport { Blocked, IBlocked } from '@models/calendar/calendar.model';\nimport { isArray } from '@helpers/objects-equal.helper';\nimport { Capacity, ICalendarUpdateRequestParams, ICapacity } from '@models/calendar/capacity.model';\nimport { EChannel } from '@models/channel/channel.model';\nimport { ICalendarParams } from '@models/calendar/calendar-params.model';\nimport { Observable } from 'rxjs';\nimport { ICalendarServiceDefaultCapacities } from '@models/calendar/calendar-response.model';\n\n\n@Injectable()\nexport class CalendarClientService {\n\n  private readonly CALENDAR_UPDATE_ENDPOINT = EndpointsParameter.PATCH_CALENDAR_UPDATE;\n  private readonly CALENDAR_UPDATE_RANGE_ENDPOINT = EndpointsParameter.PATCH_CALENDAR_RANGE_UPDATE;\n  private readonly CALENDAR_CAPACITIES = EndpointsParameter.GET_CALENDAR_CAPACITIES;\n\n  constructor(\n    private genericService: GenericService,\n  ) { }\n\n  public patchCalendarUpdateClient$(request: ICalendarUpdateRequestParams) {\n    return this.genericService.genericPatch<IBlocked[]>(this.CALENDAR_UPDATE_ENDPOINT, request)\n      .pipe(map(response => {\n        const current = isArray(response) ? response : [];\n        return current.map(e => new Blocked(e));\n      }));\n  }\n\n  public patchCalendarRangeUpdateClient$(request: ICalendarUpdateRequestParams) {\n    return this.genericService.genericPatch<ICapacity[]>(this.CALENDAR_UPDATE_RANGE_ENDPOINT, request)\n      .pipe(map(response => {\n        const current = isArray(response) ? response : [];\n        return current.map(e => new Capacity(e));\n      }));\n  }\n\n  public getCalendarDefaultCapacities$(params: ICalendarParams): Observable<ICalendarServiceDefaultCapacities[]> {\n    const httpParams = new HttpParams()\n      .set('fulfillmentCenterCode', String(params.fulfillmentCenter))\n      .set('channel', String(EChannel.digital));\n    return this.genericService.genericGet<ICalendarServiceDefaultCapacities[]>(this.CALENDAR_CAPACITIES, httpParams)\n      .pipe(\n        take(1),\n        map(response => {\n        return  isArray(response) ? response : [];\n      }));\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "genericService",
                        "type": "GenericService"
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "genericService",
                        "type": "GenericService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "GenericService",
            "id": "injectable-GenericService-2a1c15c9aee1ae94911cb9448aabea1c",
            "file": "src/app/shared/clients/generic/generic.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "genericDelete",
                    "args": [
                        {
                            "name": "endpoint",
                            "type": "string"
                        },
                        {
                            "name": "headers",
                            "type": "HttpHeaders",
                            "defaultValue": "new HttpHeaders()"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 49,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "endpoint",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "headers",
                            "type": "HttpHeaders",
                            "defaultValue": "new HttpHeaders()",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "genericGet",
                    "args": [
                        {
                            "name": "endpoint",
                            "type": "string"
                        },
                        {
                            "name": "params",
                            "type": "HttpParams",
                            "defaultValue": "null"
                        },
                        {
                            "name": "headers",
                            "type": "HttpHeaders",
                            "defaultValue": "new HttpHeaders()"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 12,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "endpoint",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "HttpParams",
                            "defaultValue": "null",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "headers",
                            "type": "HttpHeaders",
                            "defaultValue": "new HttpHeaders()",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "genericPatch",
                    "args": [
                        {
                            "name": "endpoint",
                            "type": "string"
                        },
                        {
                            "name": "body",
                            "type": "Object",
                            "defaultValue": "{}"
                        },
                        {
                            "name": "params",
                            "type": "HttpParams",
                            "defaultValue": "null"
                        },
                        {
                            "name": "headers",
                            "type": "HttpHeaders",
                            "defaultValue": "new HttpHeaders()"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 57,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "endpoint",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "body",
                            "type": "Object",
                            "defaultValue": "{}",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "HttpParams",
                            "defaultValue": "null",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "headers",
                            "type": "HttpHeaders",
                            "defaultValue": "new HttpHeaders()",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "genericPatchWithoutBody",
                    "args": [
                        {
                            "name": "endpoint",
                            "type": "string"
                        },
                        {
                            "name": "params",
                            "type": "HttpParams",
                            "defaultValue": "null"
                        },
                        {
                            "name": "headers",
                            "type": "HttpHeaders",
                            "defaultValue": "new HttpHeaders()"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 71,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "endpoint",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "HttpParams",
                            "defaultValue": "null",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "headers",
                            "type": "HttpHeaders",
                            "defaultValue": "new HttpHeaders()",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "genericPost",
                    "args": [
                        {
                            "name": "endpoint",
                            "type": "string"
                        },
                        {
                            "name": "body",
                            "type": "Object"
                        },
                        {
                            "name": "params",
                            "type": "HttpParams",
                            "defaultValue": "null"
                        },
                        {
                            "name": "headers",
                            "type": "HttpHeaders",
                            "defaultValue": "new HttpHeaders()"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 24,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "endpoint",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "body",
                            "type": "Object",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "HttpParams",
                            "defaultValue": "null",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "headers",
                            "type": "HttpHeaders",
                            "defaultValue": "new HttpHeaders()",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "genericPut",
                    "args": [
                        {
                            "name": "endpoint",
                            "type": "string"
                        },
                        {
                            "name": "body",
                            "type": "Object"
                        },
                        {
                            "name": "headers",
                            "type": "HttpHeaders",
                            "defaultValue": "new HttpHeaders()"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 39,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "endpoint",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "body",
                            "type": "Object",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "headers",
                            "type": "HttpHeaders",
                            "defaultValue": "new HttpHeaders()",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "log",
                    "args": [
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "showLogs",
                            "type": "",
                            "defaultValue": "environment.show_logs"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 85,
                    "description": "<p>Log a HeroService message with the MessageService </p>\n",
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "message",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "showLogs",
                            "type": "",
                            "defaultValue": "environment.show_logs",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport { environment } from '@environments/environment';\n\n@Injectable()\nexport class GenericService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public genericGet<T>(\n    endpoint: string,\n    params: HttpParams = null,\n    headers: HttpHeaders = new HttpHeaders()\n  ) {\n    const options = {headers};\n    // tslint:disable-next-line:no-string-literal\n    if (params) { options['params'] = params; }\n    return this.http.get<T>(endpoint, options)\n      .pipe(tap(() => this.log(`Get ` + endpoint)));\n  }\n\n  public genericPost<T>(\n    endpoint: string,\n    // tslint:disable-next-line:ban-types\n    body: Object,\n    params: HttpParams = null,\n    headers: HttpHeaders = new HttpHeaders()\n  ) {\n    const options = {headers};\n    // tslint:disable-next-line:no-string-literal\n    if (params) { options['params'] = params; }\n    return this.http.post<T>(endpoint, body, options)\n      .pipe(tap(() => this.log(`Post ` + endpoint)));\n  }\n\n\n  public genericPut<T>(\n    endpoint: string,\n    // tslint:disable-next-line:ban-types\n    body: Object,\n    headers: HttpHeaders = new HttpHeaders()\n  ) {\n    return this.http.put<T>(endpoint, body, {headers})\n      .pipe(tap(() => this.log(`Put ` + endpoint)));\n  }\n\n  public genericDelete<T>(\n    endpoint: string,\n    headers: HttpHeaders = new HttpHeaders()\n  ) {\n    return this.http.delete<T>(endpoint, {headers})\n      .pipe(tap(() => this.log(`Delete ` + endpoint)));\n  }\n\n  public genericPatch<T>(\n    endpoint: string,\n    // tslint:disable-next-line:ban-types\n    body: Object = {},\n    params: HttpParams = null,\n    headers: HttpHeaders = new HttpHeaders()\n  ) {\n    const options = {headers};\n    // tslint:disable-next-line:no-string-literal\n    if (params) { options['params'] = params; }\n    return this.http.patch<T>(endpoint, body, options)\n      .pipe(tap(() => this.log(`Patch ` + endpoint)));\n  }\n\n  public genericPatchWithoutBody<T>(\n    endpoint: string,\n    params: HttpParams = null,\n    headers: HttpHeaders = new HttpHeaders()\n  ) {\n    const options = {headers};\n    // tslint:disable-next-line:no-string-literal\n    if (params) { options['params'] = params; }\n    return this.http.patch<T>(endpoint, {}, options)\n      .pipe(tap(() => this.log(`Patch without body ` + endpoint)));\n\n  }\n\n  /** Log a HeroService message with the MessageService */\n  public log(message: string, showLogs = environment.show_logs) {\n    if (!showLogs) {\n      return true;\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient"
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "LocalClientService",
            "id": "injectable-LocalClientService-469c473790ad43a951c67fef5fbc6fcb",
            "file": "src/app/shared/clients/calendar/local-client.service.ts",
            "properties": [
                {
                    "name": "LOCAL",
                    "defaultValue": "EndpointsParameter.GET_DRUGSTORE",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "LOCAL_BY_SERVICE_TYPE_ENDPOINT",
                    "defaultValue": "EndpointsParameter.GET_DRUGSTORE_BY_SERVICE_TYPE",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "TYPE_SERVICE_ENDPOINT",
                    "defaultValue": "EndpointsParameter.GET_CALENDAR_SERVICE_TYPE",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        112,
                        132
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getLocalByServiceTypeClient$",
                    "args": [
                        {
                            "name": "serviceType",
                            "type": "ECapacitiesServiceType"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ILocal[]>",
                    "typeParameters": [],
                    "line": 39,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "serviceType",
                            "type": "ECapacitiesServiceType",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getLocalClient$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<ILocal[]>",
                    "typeParameters": [],
                    "line": 29,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "getLocalGroupByServiceTypeClient$",
                    "args": [
                        {
                            "name": "serviceType",
                            "type": "ECapacitiesServiceType"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ILocalGroup[]>",
                    "typeParameters": [],
                    "line": 49,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "serviceType",
                            "type": "ECapacitiesServiceType",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTypeOperationClient$",
                    "args": [
                        {
                            "name": "iLocalParams",
                            "type": "ILocalParams"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<IServiceType>",
                    "typeParameters": [],
                    "line": 62,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "iLocalParams",
                            "type": "ILocalParams",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTypeOperationGroupClient$",
                    "args": [
                        {
                            "name": "iLocalParams",
                            "type": "ILocalParams"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<IServiceType>",
                    "typeParameters": [],
                    "line": 78,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "iLocalParams",
                            "type": "ILocalParams",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpParams } from '@angular/common/http';\nimport { map, take } from 'rxjs/operators';\n\nimport { EndpointsParameter } from '@parameters/endpoints.parameter';\nimport { isArray, isObject } from '@helpers/objects-equal.helper';\nimport { GenericService } from '../generic/generic.service';\nimport { ILocal } from '@models/local/local.model';\nimport { IServiceType } from '@models/local/service-type.model';\nimport { ILocalParams } from '@models/local/local-params.model';\nimport { ILocalGroup } from '@models/local/local-group.model';\nimport { Observable } from 'rxjs';\nimport { EChannel } from '@models/channel/channel.model';\nimport { ECapacitiesServiceType } from '@models/capacities/capacities-service-type.model';\n\n\n@Injectable()\nexport class LocalClientService {\n\n    private readonly LOCAL = EndpointsParameter.GET_DRUGSTORE;\n    private readonly LOCAL_BY_SERVICE_TYPE_ENDPOINT = EndpointsParameter.GET_DRUGSTORE_BY_SERVICE_TYPE;\n    private readonly TYPE_SERVICE_ENDPOINT = EndpointsParameter.GET_CALENDAR_SERVICE_TYPE;\n\n    constructor(\n        private genericService: GenericService,\n    ) {\n    }\n\n    public getLocalClient$(): Observable<ILocal[]> {\n        const endpoint = `${this.LOCAL}`;\n        return this.genericService.genericGet<ILocal[]>(endpoint)\n            .pipe(\n                take(1),\n                map((response) => {\n                    return isArray(response) ? response : [];\n                }));\n    }\n\n    public getLocalByServiceTypeClient$(serviceType: ECapacitiesServiceType): Observable<ILocal[]> {\n        const endpoint = `${this.LOCAL_BY_SERVICE_TYPE_ENDPOINT}${serviceType}`;\n        return this.genericService.genericGet<ILocal[]>(endpoint)\n            .pipe(\n                take(1),\n                map((response) => {\n                    return isArray(response) ? response : [];\n                }));\n    }\n\n    public getLocalGroupByServiceTypeClient$(serviceType: ECapacitiesServiceType): Observable<ILocalGroup[]> {\n        const httpParams = new HttpParams()\n            .set('filter', String('GROUP'));\n\n        const endpoint = `${this.LOCAL_BY_SERVICE_TYPE_ENDPOINT}${serviceType}`;\n        return this.genericService.genericGet<ILocalGroup[]>(endpoint, httpParams)\n            .pipe(\n                take(1),\n                map((response) => {\n                    return isArray(response) ? response : [];\n                }));\n    }\n\n    public getTypeOperationClient$(iLocalParams: ILocalParams): Observable<IServiceType> {\n        const httpParams = new HttpParams()\n            .set('fulfillmentCenterCode', String(iLocalParams.fulfillmentCenter))\n            .set('serviceTypeCode', String(iLocalParams.serviceType))\n            .set('detailType', String(iLocalParams.detailType))\n            .set('channel', String(EChannel.digital));\n\n        const endpoint = `${this.TYPE_SERVICE_ENDPOINT}`;\n        return this.genericService.genericGet<IServiceType>(endpoint, httpParams)\n            .pipe(\n                take(1),\n                map(response => {\n                    return isObject(response) ? response : response;\n                }));\n    }\n\n    public getTypeOperationGroupClient$(iLocalParams: ILocalParams): Observable<IServiceType> {\n        const httpParams = new HttpParams()\n            .set('fulfillmentCenterCode', String(iLocalParams.fulfillmentCenter))\n            .set('serviceTypeCode', String(iLocalParams.serviceType))\n            .set('detailType', String(iLocalParams.detailType))\n            .set('channel', String(EChannel.digital))\n            .set('filter', String('GROUP'));\n\n        const endpoint = `${this.TYPE_SERVICE_ENDPOINT}`;\n        return this.genericService.genericGet<IServiceType>(endpoint, httpParams)\n            .pipe(\n                take(1),\n                map(response => {\n                    return isObject(response) ? response : response;\n                }));\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "genericService",
                        "type": "GenericService"
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "genericService",
                        "type": "GenericService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "LoginForm",
            "id": "injectable-LoginForm-f03bcf790ec4821926cad42bfe035a5a",
            "file": "src/app/business/account/form/login.form.ts",
            "properties": [
                {
                    "name": "_passwordControl",
                    "defaultValue": "new LoginPasswordControl()",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_usernameControl",
                    "defaultValue": "new EmailControl()",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "form",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        112,
                        132
                    ]
                }
            ],
            "methods": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44
                },
                {
                    "name": "resetForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39
                },
                {
                    "name": "resetFormValidators",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { EmailControl } from '../controls/email.control';\nimport { LoginPasswordControl } from '../controls/login-password.control';\n\n@Injectable()\nexport class LoginForm implements OnDestroy {\n    private readonly form: FormGroup;\n\n    private _usernameControl: FormControl = new EmailControl();\n    private _passwordControl: FormControl = new LoginPasswordControl();\n\n    constructor(\n        private _formBuilder: FormBuilder\n    ) {\n        this.form = this._formBuilder.group({\n            username: this._usernameControl,\n            password: this._passwordControl,\n        });\n    }\n\n    get form$(): FormGroup {\n        return this.form;\n    }\n\n    public get usernameControl(): EmailControl {\n        return this.form$.get('username') as EmailControl;\n    }\n\n    get passwordControl(): LoginPasswordControl {\n        return this.form$.get('password') as LoginPasswordControl;\n    }\n\n    resetFormValidators() {\n        this.passwordControl.settingValidators();\n        this.usernameControl.settingValidators();\n    }\n\n    resetForm(): void {\n        this.usernameControl.patchValue(null);\n        this.passwordControl.patchValue(null);\n    }\n\n    ngOnDestroy(): void {\n        this.resetForm();\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder"
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "form$": {
                    "name": "form$",
                    "getSignature": {
                        "name": "form$",
                        "type": "",
                        "returnType": "FormGroup",
                        "line": 22
                    }
                },
                "usernameControl": {
                    "name": "usernameControl",
                    "getSignature": {
                        "name": "usernameControl",
                        "type": "",
                        "returnType": "EmailControl",
                        "line": 26
                    }
                },
                "passwordControl": {
                    "name": "passwordControl",
                    "getSignature": {
                        "name": "passwordControl",
                        "type": "",
                        "returnType": "LoginPasswordControl",
                        "line": 30
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "MainLoaderService",
            "id": "injectable-MainLoaderService-221d3ae4c71c95d264e2bd001501f8ce",
            "file": "src/app/core/pages/main-loader/main-loader.service.ts",
            "properties": [
                {
                    "name": "isLoaded$",
                    "defaultValue": "this.isLoadedSubject.asObservable()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isLoadedSubject",
                    "defaultValue": "new BehaviorSubject<boolean>(true)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MainLoaderService {\n\n  private isLoadedSubject = new BehaviorSubject<boolean>(true);\n  public isLoaded$ = this.isLoadedSubject.asObservable();\n\n  constructor() { }\n\n  public set isLoaded(status: boolean) {\n    this.isLoadedSubject.next(status);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            },
            "accessors": {
                "isLoaded": {
                    "name": "isLoaded",
                    "setSignature": {
                        "name": "isLoaded",
                        "type": "void",
                        "args": [
                            {
                                "name": "status",
                                "type": "boolean"
                            }
                        ],
                        "returnType": "void",
                        "line": 14,
                        "jsdoctags": [
                            {
                                "name": "status",
                                "type": "boolean",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "OpCapacitiesLocalDefaultCapacityDialogService",
            "id": "injectable-OpCapacitiesLocalDefaultCapacityDialogService-889435e32010db16813015d200592237",
            "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-local-default-capacity-dialog/op-capacities-local-default-capacity-dialog.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "openServiceDefaultCapacityDialog",
                    "args": [
                        {
                            "name": "capacitiesLocal",
                            "type": "CapacitiesLocal"
                        },
                        {
                            "name": "localService",
                            "type": "CapacitiesLocalServiceDefaultCapacity"
                        },
                        {
                            "name": "serviceType",
                            "type": "CapacitiesServiceType"
                        }
                    ],
                    "optional": false,
                    "returnType": "MatDialogRef<OpCapacitiesLocalDefaultCapacityDialogComponent>",
                    "typeParameters": [],
                    "line": 12,
                    "jsdoctags": [
                        {
                            "name": "capacitiesLocal",
                            "type": "CapacitiesLocal",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localService",
                            "type": "CapacitiesLocalServiceDefaultCapacity",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "serviceType",
                            "type": "CapacitiesServiceType",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { OpCapacitiesLocalDefaultCapacityDialogComponent } from './op-capacities-local-default-capacity-dialog.component';\nimport { CapacitiesLocal, CapacitiesLocalServiceDefaultCapacity, CapacitiesServiceType } from '../../models/operations-capacities-responses.model';\n\n@Injectable()\nexport class OpCapacitiesLocalDefaultCapacityDialogService {\n\n    constructor(private dialog: MatDialog) {\n    }\n\n    openServiceDefaultCapacityDialog(\n        capacitiesLocal: CapacitiesLocal,\n        localService: CapacitiesLocalServiceDefaultCapacity,\n        serviceType: CapacitiesServiceType\n    ): MatDialogRef<OpCapacitiesLocalDefaultCapacityDialogComponent> {\n        const dialogRef = this.dialog.open(OpCapacitiesLocalDefaultCapacityDialogComponent, {\n            width: '526px',\n            minHeight: '399px'\n        });\n\n        dialogRef.componentInstance.capacitiesLocal = capacitiesLocal;\n        dialogRef.componentInstance.localServiceTypeTable = localService;\n        dialogRef.componentInstance.defaultCapacityTableDataSource = serviceType.segmentList;\n\n        return dialogRef;\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "MatDialog"
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "OpCapacitiesLocalDefaultCapacityService",
            "id": "injectable-OpCapacitiesLocalDefaultCapacityService-00d845b59c0e021a76e84dfa83f2f803",
            "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-local-default-capacity/op-capacities-local-default-capacity.service.ts",
            "properties": [
                {
                    "name": "localDefaultCapacityListSubject",
                    "defaultValue": "new BehaviorSubject<CapacitiesServiceType>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "localDefaultCapacityLocalListSubject",
                    "defaultValue": "new BehaviorSubject<CapacitiesLocal[]>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "localDefaultCapacityLocalSelectionSubject",
                    "defaultValue": "new BehaviorSubject<CapacitiesLocal>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "localDefaultCapacityLocalServiceTypeListSubject",
                    "defaultValue": "new BehaviorSubject<CapacitiesLocalServiceDefaultCapacity[]>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "localDefaultCapacityLocalServiceTypeSelectionSubject",
                    "defaultValue": "new BehaviorSubject<CapacitiesLocalServiceDefaultCapacity>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { CapacitiesLocal, CapacitiesLocalServiceDefaultCapacity, CapacitiesServiceType } from '../../models/operations-capacities-responses.model';\n\n\n@Injectable()\nexport class OpCapacitiesLocalDefaultCapacityService {\n\n    private localDefaultCapacityLocalListSubject = new BehaviorSubject<CapacitiesLocal[]>(null);\n    private localDefaultCapacityLocalSelectionSubject = new BehaviorSubject<CapacitiesLocal>(null);\n    private localDefaultCapacityLocalServiceTypeListSubject = new BehaviorSubject<CapacitiesLocalServiceDefaultCapacity[]>(null);\n    private localDefaultCapacityLocalServiceTypeSelectionSubject = new BehaviorSubject<CapacitiesLocalServiceDefaultCapacity>(null);\n    private localDefaultCapacityListSubject = new BehaviorSubject<CapacitiesServiceType>(null);\n\n    constructor() {\n    }\n\n    get localDefaultCapacityLocalList$(): Observable<CapacitiesLocal[]> {\n        return this.localDefaultCapacityLocalListSubject.asObservable()\n            .pipe(filter((value) => !!value));\n    }\n\n    set localDefaultCapacityLocalList(capacitiesLocalList: CapacitiesLocal[]) {\n        this.localDefaultCapacityLocalListSubject.next(capacitiesLocalList);\n    }\n\n    get localDefaultCapacityLocalSelection$(): Observable<CapacitiesLocal> {\n        return this.localDefaultCapacityLocalSelectionSubject.asObservable()\n            .pipe(filter((value) => !!value));\n    }\n\n    set localDefaultCapacityLocalSelection(capacitiesLocal: CapacitiesLocal) {\n        this.localDefaultCapacityLocalSelectionSubject.next(capacitiesLocal);\n    }\n\n    get localDefaultCapacityLocalServiceList$(): Observable<CapacitiesLocalServiceDefaultCapacity[]> {\n        return this.localDefaultCapacityLocalServiceTypeListSubject.asObservable()\n            .pipe(filter((value) => !!value));\n    }\n\n    set localDefaultCapacityLocalServiceList(serviceDefaultCapacityList: CapacitiesLocalServiceDefaultCapacity[]) {\n        this.localDefaultCapacityLocalServiceTypeListSubject.next(serviceDefaultCapacityList);\n    }\n\n    get localDefaultCapacityLocalServiceTypeSelection$(): Observable<CapacitiesLocalServiceDefaultCapacity> {\n        return this.localDefaultCapacityLocalServiceTypeSelectionSubject.asObservable()\n            .pipe(filter((value) => !!value));\n    }\n\n    set localDefaultCapacityLocalServiceTypeSelection(serviceDefaultCapacity: CapacitiesLocalServiceDefaultCapacity) {\n        this.localDefaultCapacityLocalServiceTypeSelectionSubject.next(serviceDefaultCapacity);\n    }\n\n    get localDefaultCapacityList$(): Observable<CapacitiesServiceType> {\n        return this.localDefaultCapacityListSubject.asObservable()\n            .pipe(filter((value) => !!value));\n    }\n\n    set localDefaultCapacityList(capacitiesServiceType: CapacitiesServiceType) {\n        this.localDefaultCapacityListSubject.next(capacitiesServiceType);\n    }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 14
            },
            "accessors": {
                "localDefaultCapacityLocalList$": {
                    "name": "localDefaultCapacityLocalList$",
                    "getSignature": {
                        "name": "localDefaultCapacityLocalList$",
                        "type": "",
                        "returnType": "Observable<CapacitiesLocal[]>",
                        "line": 19
                    }
                },
                "localDefaultCapacityLocalList": {
                    "name": "localDefaultCapacityLocalList",
                    "setSignature": {
                        "name": "localDefaultCapacityLocalList",
                        "type": "void",
                        "args": [
                            {
                                "name": "capacitiesLocalList",
                                "type": "[]"
                            }
                        ],
                        "returnType": "void",
                        "line": 24,
                        "jsdoctags": [
                            {
                                "name": "capacitiesLocalList",
                                "type": "[]",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "localDefaultCapacityLocalSelection$": {
                    "name": "localDefaultCapacityLocalSelection$",
                    "getSignature": {
                        "name": "localDefaultCapacityLocalSelection$",
                        "type": "",
                        "returnType": "Observable<CapacitiesLocal>",
                        "line": 28
                    }
                },
                "localDefaultCapacityLocalSelection": {
                    "name": "localDefaultCapacityLocalSelection",
                    "setSignature": {
                        "name": "localDefaultCapacityLocalSelection",
                        "type": "void",
                        "args": [
                            {
                                "name": "capacitiesLocal",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 33,
                        "jsdoctags": [
                            {
                                "name": "capacitiesLocal",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "localDefaultCapacityLocalServiceList$": {
                    "name": "localDefaultCapacityLocalServiceList$",
                    "getSignature": {
                        "name": "localDefaultCapacityLocalServiceList$",
                        "type": "",
                        "returnType": "Observable<CapacitiesLocalServiceDefaultCapacity[]>",
                        "line": 37
                    }
                },
                "localDefaultCapacityLocalServiceList": {
                    "name": "localDefaultCapacityLocalServiceList",
                    "setSignature": {
                        "name": "localDefaultCapacityLocalServiceList",
                        "type": "void",
                        "args": [
                            {
                                "name": "serviceDefaultCapacityList",
                                "type": "[]"
                            }
                        ],
                        "returnType": "void",
                        "line": 42,
                        "jsdoctags": [
                            {
                                "name": "serviceDefaultCapacityList",
                                "type": "[]",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "localDefaultCapacityLocalServiceTypeSelection$": {
                    "name": "localDefaultCapacityLocalServiceTypeSelection$",
                    "getSignature": {
                        "name": "localDefaultCapacityLocalServiceTypeSelection$",
                        "type": "",
                        "returnType": "Observable<CapacitiesLocalServiceDefaultCapacity>",
                        "line": 46
                    }
                },
                "localDefaultCapacityLocalServiceTypeSelection": {
                    "name": "localDefaultCapacityLocalServiceTypeSelection",
                    "setSignature": {
                        "name": "localDefaultCapacityLocalServiceTypeSelection",
                        "type": "void",
                        "args": [
                            {
                                "name": "serviceDefaultCapacity",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 51,
                        "jsdoctags": [
                            {
                                "name": "serviceDefaultCapacity",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "localDefaultCapacityList$": {
                    "name": "localDefaultCapacityList$",
                    "getSignature": {
                        "name": "localDefaultCapacityList$",
                        "type": "",
                        "returnType": "Observable<CapacitiesServiceType>",
                        "line": 55
                    }
                },
                "localDefaultCapacityList": {
                    "name": "localDefaultCapacityList",
                    "setSignature": {
                        "name": "localDefaultCapacityList",
                        "type": "void",
                        "args": [
                            {
                                "name": "capacitiesServiceType",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 60,
                        "jsdoctags": [
                            {
                                "name": "capacitiesServiceType",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "OpCapacitiesStepCapacityTableFormService",
            "id": "injectable-OpCapacitiesStepCapacityTableFormService-ec36988ab8b5d5ee786b51b5d237b57b",
            "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-capacity-table-form/form/op-capacities-step-capacity-table-form.service.ts",
            "properties": [
                {
                    "name": "_capacityForSelectionControl",
                    "defaultValue": "new CapacityQuantityForSelectionControl()",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_capacityRangeControl",
                    "defaultValue": "new CapacityRangeControl()",
                    "type": "CapacityRangeControl",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_capacitySegmentListArray",
                    "defaultValue": "new FormArray([])",
                    "type": "FormArray",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "capacityTableForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        112,
                        132
                    ]
                }
            ],
            "methods": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69
                },
                {
                    "name": "resetForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63
                },
                {
                    "name": "segmentCapacityByGroup",
                    "args": [
                        {
                            "name": "formGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 50,
                    "jsdoctags": [
                        {
                            "name": "formGroup",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "segmentHourByGroup",
                    "args": [
                        {
                            "name": "formGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 54,
                    "jsdoctags": [
                        {
                            "name": "formGroup",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "segmentValueByGroup",
                    "args": [
                        {
                            "name": "formGroup",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 58,
                    "jsdoctags": [
                        {
                            "name": "formGroup",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable, OnDestroy } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { CapacityRangeControl } from '../../../controls/capacity-range.control';\nimport { CapacityQuantityControl } from '../../op-capacities-step-capacity-table/controls/capacity-quantity.control';\nimport { CapacityQuantityForSelectionControl } from '../../op-capacities-step-capacity-table/controls/capacity-quantity-for-selection.control';\n\n@Injectable()\nexport class OpCapacitiesStepCapacityTableFormService implements OnDestroy {\n    private readonly capacityTableForm: FormGroup;\n\n    private _capacityRangeControl: CapacityRangeControl = new CapacityRangeControl();\n    private _capacityForSelectionControl: FormControl = new CapacityQuantityForSelectionControl();\n    private _capacitySegmentListArray: FormArray = new FormArray([]);\n\n    constructor(\n        private _formBuilder: FormBuilder\n    ) {\n        this.capacityTableForm = this._formBuilder.group({\n            capacityRange: this._capacityRangeControl,\n            capacityForSelection: this._capacityForSelectionControl,\n            capacitySegmentList: this._capacitySegmentListArray\n        });\n    }\n\n    get capacityTableForm$() {\n        return this.capacityTableForm;\n    }\n\n    get capacityRange(): FormControl {\n        return this.capacityTableForm$.get('capacityRange') as CapacityRangeControl;\n    }\n\n    get capacityForSelection(): FormControl {\n        return this.capacityTableForm$.get('capacityForSelection') as FormControl;\n    }\n\n    get capacitySegmentList(): FormArray {\n        return this.capacityTableForm$.get('capacitySegmentList') as FormArray;\n    }\n\n\n    get capacitySegmentListGroup(): FormGroup {\n        return new FormGroup({\n            segmentCapacity: new CapacityQuantityControl(),\n            segmentHour: new FormControl(''),\n            segmentValue: new FormControl(''),\n        });\n    }\n\n    segmentCapacityByGroup(formGroup: FormGroup) {\n        return formGroup.get('segmentCapacity');\n    }\n\n    segmentHourByGroup(formGroup: FormGroup) {\n        return formGroup.get('segmentHour');\n    }\n\n    segmentValueByGroup(formGroup: FormGroup) {\n        return formGroup.get('segmentValue');\n    }\n\n\n    resetForm() {\n        this.capacityRange.patchValue(null);\n        this.capacityForSelection.patchValue(null);\n        this.capacitySegmentList.patchValue([]);\n    }\n\n    ngOnDestroy() {\n        this.resetForm();\n    }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "capacityTableForm$": {
                    "name": "capacityTableForm$",
                    "getSignature": {
                        "name": "capacityTableForm$",
                        "type": "",
                        "returnType": "",
                        "line": 25
                    }
                },
                "capacityRange": {
                    "name": "capacityRange",
                    "getSignature": {
                        "name": "capacityRange",
                        "type": "",
                        "returnType": "FormControl",
                        "line": 29
                    }
                },
                "capacityForSelection": {
                    "name": "capacityForSelection",
                    "getSignature": {
                        "name": "capacityForSelection",
                        "type": "",
                        "returnType": "FormControl",
                        "line": 33
                    }
                },
                "capacitySegmentList": {
                    "name": "capacitySegmentList",
                    "getSignature": {
                        "name": "capacitySegmentList",
                        "type": "",
                        "returnType": "FormArray",
                        "line": 37
                    }
                },
                "capacitySegmentListGroup": {
                    "name": "capacitySegmentListGroup",
                    "getSignature": {
                        "name": "capacitySegmentListGroup",
                        "type": "",
                        "returnType": "FormGroup",
                        "line": 42
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "OpCapacitiesStepCapacityTableService",
            "id": "injectable-OpCapacitiesStepCapacityTableService-18c1ec30c32ebfdd765f55a1255f9e2d",
            "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-capacity-table/op-capacities-step-capacity-table.service.ts",
            "properties": [
                {
                    "name": "capacityTableCancelSubject",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "capacityTableFormViewSubject",
                    "defaultValue": "new BehaviorSubject<ECapacitiesStepCapacityTable>(ECapacitiesStepCapacityTable.daysRange)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "capacityTableRangeLimitSubject",
                    "defaultValue": "new BehaviorSubject<CapacityRangeLimit>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "capacityTableResetStepStatusSubject",
                    "defaultValue": "new BehaviorSubject<boolean>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "capacityTableSaveSubject",
                    "defaultValue": "new BehaviorSubject<ICapacityStepCapacityTableSegments>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "capacityTableSegmentsSubject",
                    "defaultValue": "new BehaviorSubject<ICapacityStepCapacityTableSegments>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "capacityTableStepStatusSubject",
                    "defaultValue": "new BehaviorSubject<ECapacityStepStatus>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { ECapacityStepStatus } from '../../models/operations-capacity-step-status.model';\nimport { ICapacityStepCapacityTableSegments } from './models/op-capacities-step-capacity-table.model';\nimport { CapacityRangeLimit } from '../../models/operations-capacity-converter.model';\n\n\nexport enum ECapacitiesStepCapacityTable {\n  daysRange = 'daysRange',\n  hourlyCapacity = 'hourlyCapacity'\n}\n\n@Injectable()\nexport class OpCapacitiesStepCapacityTableService {\n\n  private capacityTableFormViewSubject = new BehaviorSubject<ECapacitiesStepCapacityTable>(ECapacitiesStepCapacityTable.daysRange);\n  private capacityTableSegmentsSubject = new BehaviorSubject<ICapacityStepCapacityTableSegments>(null);\n  private capacityTableRangeLimitSubject = new BehaviorSubject<CapacityRangeLimit>(null);\n\n  private capacityTableStepStatusSubject = new BehaviorSubject<ECapacityStepStatus>(null);\n  private capacityTableResetStepStatusSubject = new BehaviorSubject<boolean>(null);\n  private capacityTableSaveSubject = new BehaviorSubject<ICapacityStepCapacityTableSegments>(null);\n  private capacityTableCancelSubject = new BehaviorSubject<boolean>(false);\n\n  constructor() {\n  }\n\n  get capacityTableStepStatus$(): Observable<ECapacityStepStatus> {\n    return this.capacityTableStepStatusSubject.asObservable()\n      .pipe(filter((value) => !!value));\n  }\n\n  set capacityTableStepStatus(capacityTableDisabled: ECapacityStepStatus) {\n    this.capacityTableStepStatusSubject.next(capacityTableDisabled);\n  }\n\n\n  get capacityTableResetStepStatus$(): Observable<boolean> {\n    return this.capacityTableResetStepStatusSubject.asObservable()\n      .pipe(filter((value) => !!value));\n  }\n\n  set capacityTableResetStepStatus(capacityTableResetStep: boolean) {\n    this.capacityTableResetStepStatusSubject.next(capacityTableResetStep);\n  }\n\n\n  get capacityTableFormView$(): Observable<ECapacitiesStepCapacityTable> {\n    return this.capacityTableFormViewSubject.asObservable();\n  }\n\n  set capacityTableFormView(capacityTableFormView: ECapacitiesStepCapacityTable) {\n    this.capacityTableFormViewSubject.next(capacityTableFormView);\n  }\n\n  get capacityTableSegments$(): Observable<ICapacityStepCapacityTableSegments> {\n    return this.capacityTableSegmentsSubject.asObservable()\n      .pipe(filter((value) => !!value));\n  }\n\n  set capacityTableSegments(capacitySegments: ICapacityStepCapacityTableSegments) {\n    this.capacityTableSegmentsSubject.next(capacitySegments);\n  }\n\n  get capacityTableRangeLimit$(): Observable<CapacityRangeLimit> {\n    return this.capacityTableRangeLimitSubject.asObservable()\n      .pipe(filter((value) => !!value));\n  }\n\n  set capacityTableRangeLimit(capacityRangeLimit: CapacityRangeLimit) {\n    this.capacityTableRangeLimitSubject.next(capacityRangeLimit);\n  }\n\n  get capacityTableCancel$(): Observable<boolean> {\n    return this.capacityTableCancelSubject.asObservable()\n      .pipe(filter((value) => !!value));\n  }\n\n  set capacityTableCancel(capacityTableCancel: boolean) {\n    this.capacityTableCancelSubject.next(capacityTableCancel);\n  }\n\n  get capacityTableSave$(): Observable<ICapacityStepCapacityTableSegments> {\n    return this.capacityTableSaveSubject.asObservable()\n      .pipe(filter((value) => !!value));\n  }\n\n  set capacityTableSave(capacityTableFormValue: ICapacityStepCapacityTableSegments) {\n    this.capacityTableSaveSubject.next(capacityTableFormValue);\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 24
            },
            "accessors": {
                "capacityTableStepStatus$": {
                    "name": "capacityTableStepStatus$",
                    "getSignature": {
                        "name": "capacityTableStepStatus$",
                        "type": "",
                        "returnType": "Observable<ECapacityStepStatus>",
                        "line": 29
                    }
                },
                "capacityTableStepStatus": {
                    "name": "capacityTableStepStatus",
                    "setSignature": {
                        "name": "capacityTableStepStatus",
                        "type": "void",
                        "args": [
                            {
                                "name": "capacityTableDisabled",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 34,
                        "jsdoctags": [
                            {
                                "name": "capacityTableDisabled",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "capacityTableResetStepStatus$": {
                    "name": "capacityTableResetStepStatus$",
                    "getSignature": {
                        "name": "capacityTableResetStepStatus$",
                        "type": "",
                        "returnType": "Observable<boolean>",
                        "line": 39
                    }
                },
                "capacityTableResetStepStatus": {
                    "name": "capacityTableResetStepStatus",
                    "setSignature": {
                        "name": "capacityTableResetStepStatus",
                        "type": "void",
                        "args": [
                            {
                                "name": "capacityTableResetStep",
                                "type": "boolean"
                            }
                        ],
                        "returnType": "void",
                        "line": 44,
                        "jsdoctags": [
                            {
                                "name": "capacityTableResetStep",
                                "type": "boolean",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "capacityTableFormView$": {
                    "name": "capacityTableFormView$",
                    "getSignature": {
                        "name": "capacityTableFormView$",
                        "type": "",
                        "returnType": "Observable<ECapacitiesStepCapacityTable>",
                        "line": 49
                    }
                },
                "capacityTableFormView": {
                    "name": "capacityTableFormView",
                    "setSignature": {
                        "name": "capacityTableFormView",
                        "type": "void",
                        "args": [
                            {
                                "name": "capacityTableFormView",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 53,
                        "jsdoctags": [
                            {
                                "name": "capacityTableFormView",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "capacityTableSegments$": {
                    "name": "capacityTableSegments$",
                    "getSignature": {
                        "name": "capacityTableSegments$",
                        "type": "",
                        "returnType": "Observable<ICapacityStepCapacityTableSegments>",
                        "line": 57
                    }
                },
                "capacityTableSegments": {
                    "name": "capacityTableSegments",
                    "setSignature": {
                        "name": "capacityTableSegments",
                        "type": "void",
                        "args": [
                            {
                                "name": "capacitySegments",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 62,
                        "jsdoctags": [
                            {
                                "name": "capacitySegments",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "capacityTableRangeLimit$": {
                    "name": "capacityTableRangeLimit$",
                    "getSignature": {
                        "name": "capacityTableRangeLimit$",
                        "type": "",
                        "returnType": "Observable<CapacityRangeLimit>",
                        "line": 66
                    }
                },
                "capacityTableRangeLimit": {
                    "name": "capacityTableRangeLimit",
                    "setSignature": {
                        "name": "capacityTableRangeLimit",
                        "type": "void",
                        "args": [
                            {
                                "name": "capacityRangeLimit",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 71,
                        "jsdoctags": [
                            {
                                "name": "capacityRangeLimit",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "capacityTableCancel$": {
                    "name": "capacityTableCancel$",
                    "getSignature": {
                        "name": "capacityTableCancel$",
                        "type": "",
                        "returnType": "Observable<boolean>",
                        "line": 75
                    }
                },
                "capacityTableCancel": {
                    "name": "capacityTableCancel",
                    "setSignature": {
                        "name": "capacityTableCancel",
                        "type": "void",
                        "args": [
                            {
                                "name": "capacityTableCancel",
                                "type": "boolean"
                            }
                        ],
                        "returnType": "void",
                        "line": 80,
                        "jsdoctags": [
                            {
                                "name": "capacityTableCancel",
                                "type": "boolean",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "capacityTableSave$": {
                    "name": "capacityTableSave$",
                    "getSignature": {
                        "name": "capacityTableSave$",
                        "type": "",
                        "returnType": "Observable<ICapacityStepCapacityTableSegments>",
                        "line": 84
                    }
                },
                "capacityTableSave": {
                    "name": "capacityTableSave",
                    "setSignature": {
                        "name": "capacityTableSave",
                        "type": "void",
                        "args": [
                            {
                                "name": "capacityTableFormValue",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 89,
                        "jsdoctags": [
                            {
                                "name": "capacityTableFormValue",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "OpCapacitiesStepEditionModeService",
            "id": "injectable-OpCapacitiesStepEditionModeService-29bbfb815ad4dc40b6dac2e7490cfdcd",
            "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-edition-mode/op-capacities-step-edition-mode.service.ts",
            "properties": [
                {
                    "name": "defaultEditionModeSelection",
                    "defaultValue": "ECapacitiesStepEditionMode.calendar",
                    "type": "ECapacitiesStepEditionMode",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "defaultEditionModeSelectionSaved",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "editionModeCancelSubject",
                    "defaultValue": "new BehaviorSubject<boolean>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "editionModeResetStepStatusSubject",
                    "defaultValue": "new BehaviorSubject<boolean>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "editionModeSaveSubject",
                    "defaultValue": "new BehaviorSubject<ECapacitiesStepEditionMode>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "editionModeStepStatusSubject",
                    "defaultValue": "new BehaviorSubject<ECapacityStepStatus>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { ECapacityStepStatus } from '../../models/operations-capacity-step-status.model';\n\nexport enum ECapacitiesStepEditionMode {\n  calendar = 'CALENDAR',\n  default = 'DEFAULT'\n}\n\n\n@Injectable()\nexport class OpCapacitiesStepEditionModeService {\n\n  private editionModeCancelSubject = new BehaviorSubject<boolean>(null);\n  private editionModeSaveSubject = new BehaviorSubject<ECapacitiesStepEditionMode>(null);\n\n  private editionModeStepStatusSubject = new BehaviorSubject<ECapacityStepStatus>(null);\n  private editionModeResetStepStatusSubject = new BehaviorSubject<boolean>(null);\n\n  public defaultEditionModeSelection: ECapacitiesStepEditionMode = ECapacitiesStepEditionMode.calendar;\n  public defaultEditionModeSelectionSaved: boolean;\n\n  constructor() {\n  }\n\n  get editionModeStepStatus$(): Observable<ECapacityStepStatus> {\n    return this.editionModeStepStatusSubject.asObservable()\n      .pipe(filter((value) => !!value));\n  }\n\n  set editionModeStepStatus(editionModeDisabled: ECapacityStepStatus) {\n    this.editionModeStepStatusSubject.next(editionModeDisabled);\n  }\n\n  get editionModeResetStepStatus$(): Observable<boolean> {\n    return this.editionModeResetStepStatusSubject.asObservable()\n      .pipe(filter((value) => !!value));\n  }\n\n  set editionModeResetStepStatus(editionModeResetStep: boolean) {\n    this.editionModeResetStepStatusSubject.next(editionModeResetStep);\n  }\n\n\n  get editionModeCancel$(): Observable<boolean> {\n    return this.editionModeCancelSubject.asObservable()\n      .pipe(filter((value) => !!value));\n  }\n\n  set editionModeCancel(groupOrLocalCancel: boolean) {\n    this.editionModeCancelSubject.next(groupOrLocalCancel);\n  }\n\n  get editionModeSave$(): Observable<ECapacitiesStepEditionMode> {\n    return this.editionModeSaveSubject.asObservable()\n      .pipe(filter((value) => !!value));\n  }\n\n  set editionModeSave(editionModeSelection: ECapacitiesStepEditionMode) {\n    this.editionModeSaveSubject.next(editionModeSelection);\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 22
            },
            "accessors": {
                "editionModeStepStatus$": {
                    "name": "editionModeStepStatus$",
                    "getSignature": {
                        "name": "editionModeStepStatus$",
                        "type": "",
                        "returnType": "Observable<ECapacityStepStatus>",
                        "line": 27
                    }
                },
                "editionModeStepStatus": {
                    "name": "editionModeStepStatus",
                    "setSignature": {
                        "name": "editionModeStepStatus",
                        "type": "void",
                        "args": [
                            {
                                "name": "editionModeDisabled",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 32,
                        "jsdoctags": [
                            {
                                "name": "editionModeDisabled",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "editionModeResetStepStatus$": {
                    "name": "editionModeResetStepStatus$",
                    "getSignature": {
                        "name": "editionModeResetStepStatus$",
                        "type": "",
                        "returnType": "Observable<boolean>",
                        "line": 36
                    }
                },
                "editionModeResetStepStatus": {
                    "name": "editionModeResetStepStatus",
                    "setSignature": {
                        "name": "editionModeResetStepStatus",
                        "type": "void",
                        "args": [
                            {
                                "name": "editionModeResetStep",
                                "type": "boolean"
                            }
                        ],
                        "returnType": "void",
                        "line": 41,
                        "jsdoctags": [
                            {
                                "name": "editionModeResetStep",
                                "type": "boolean",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "editionModeCancel$": {
                    "name": "editionModeCancel$",
                    "getSignature": {
                        "name": "editionModeCancel$",
                        "type": "",
                        "returnType": "Observable<boolean>",
                        "line": 46
                    }
                },
                "editionModeCancel": {
                    "name": "editionModeCancel",
                    "setSignature": {
                        "name": "editionModeCancel",
                        "type": "void",
                        "args": [
                            {
                                "name": "groupOrLocalCancel",
                                "type": "boolean"
                            }
                        ],
                        "returnType": "void",
                        "line": 51,
                        "jsdoctags": [
                            {
                                "name": "groupOrLocalCancel",
                                "type": "boolean",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "editionModeSave$": {
                    "name": "editionModeSave$",
                    "getSignature": {
                        "name": "editionModeSave$",
                        "type": "",
                        "returnType": "Observable<ECapacitiesStepEditionMode>",
                        "line": 55
                    }
                },
                "editionModeSave": {
                    "name": "editionModeSave",
                    "setSignature": {
                        "name": "editionModeSave",
                        "type": "void",
                        "args": [
                            {
                                "name": "editionModeSelection",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 60,
                        "jsdoctags": [
                            {
                                "name": "editionModeSelection",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "OpCapacitiesStepExpressResourceFormService",
            "id": "injectable-OpCapacitiesStepExpressResourceFormService-4efd09a1001f0d5ea0cf7a7c89de40f3",
            "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-express-resource/form/op-capacities-step-express-resource-form.service.ts",
            "properties": [
                {
                    "name": "_capacityRangeControl",
                    "defaultValue": "new CapacityRangeControl()",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_expressResourceControl",
                    "defaultValue": "new ExpressResourceControl()",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "expressResourceForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        112,
                        132
                    ]
                }
            ],
            "methods": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40
                },
                {
                    "name": "resetForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { CapacityRangeControl } from '../../../controls/capacity-range.control';\nimport { ExpressResourceControl } from '../controls/express-resource.control';\n\n@Injectable()\nexport class OpCapacitiesStepExpressResourceFormService implements OnDestroy {\n    private readonly expressResourceForm: FormGroup;\n\n    private _capacityRangeControl: FormControl = new CapacityRangeControl();\n    private _expressResourceControl: FormControl = new ExpressResourceControl();\n\n    constructor(\n        private _formBuilder: FormBuilder\n    ) {\n        this.expressResourceForm = this._formBuilder.group({\n            capacityRange: this._capacityRangeControl,\n            expressResource: this._expressResourceControl,\n        });\n    }\n\n    get expressResourceForm$() {\n        return this.expressResourceForm;\n    }\n\n    get capacityRange() {\n        return this.expressResourceForm$.get('capacityRange');\n    }\n\n    get expressResource() {\n        return this.expressResourceForm$.get('expressResource');\n    }\n\n\n    resetForm() {\n        this.capacityRange.setValue(null);\n        this.expressResource.setValue(null);\n    }\n\n    ngOnDestroy() {\n        this.resetForm();\n    }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder"
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "expressResourceForm$": {
                    "name": "expressResourceForm$",
                    "getSignature": {
                        "name": "expressResourceForm$",
                        "type": "",
                        "returnType": "",
                        "line": 22
                    }
                },
                "capacityRange": {
                    "name": "capacityRange",
                    "getSignature": {
                        "name": "capacityRange",
                        "type": "",
                        "returnType": "",
                        "line": 26
                    }
                },
                "expressResource": {
                    "name": "expressResource",
                    "getSignature": {
                        "name": "expressResource",
                        "type": "",
                        "returnType": "",
                        "line": 30
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "OpCapacitiesStepExpressResourceService",
            "id": "injectable-OpCapacitiesStepExpressResourceService-af26e86290eb4b041ff13d0936186138",
            "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-express-resource/op-capacities-step-express-resource.service.ts",
            "properties": [
                {
                    "name": "expressResourceCancelSubject",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "expressResourceFormViewSubject",
                    "defaultValue": "new BehaviorSubject<ECapacitiesStepExpressResource>(ECapacitiesStepExpressResource.daysRange)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "expressResourceRangeLimitSubject",
                    "defaultValue": "new BehaviorSubject<CapacityRangeLimit>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "expressResourceResetStepStatusSubject",
                    "defaultValue": "new BehaviorSubject<boolean>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "expressResourceSaveSubject",
                    "defaultValue": "new BehaviorSubject<ICapacityStepExpressResourceSegments>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "expressResourceSegmentsSubject",
                    "defaultValue": "new BehaviorSubject<ICapacityStepExpressResourceSegments>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "expressResourceStepStatusSubject",
                    "defaultValue": "new BehaviorSubject<ECapacityStepStatus>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { ECapacityStepStatus } from '../../models/operations-capacity-step-status.model';\nimport { ICapacityStepExpressResourceSegments } from './models/op-capacities-step-express-resource.model';\nimport { CapacityRangeLimit } from '../../models/operations-capacity-converter.model';\n\n\nexport enum ECapacitiesStepExpressResource {\n  daysRange = 'daysRange',\n  hourlyCapacity = 'hourlyCapacity'\n}\n\n@Injectable()\nexport class OpCapacitiesStepExpressResourceService {\n\n  private expressResourceFormViewSubject = new BehaviorSubject<ECapacitiesStepExpressResource>(ECapacitiesStepExpressResource.daysRange);\n  private expressResourceSegmentsSubject = new BehaviorSubject<ICapacityStepExpressResourceSegments>(null);\n  private expressResourceRangeLimitSubject = new BehaviorSubject<CapacityRangeLimit>(null);\n\n  private expressResourceStepStatusSubject = new BehaviorSubject<ECapacityStepStatus>(null);\n  private expressResourceResetStepStatusSubject = new BehaviorSubject<boolean>(null);\n  private expressResourceSaveSubject = new BehaviorSubject<ICapacityStepExpressResourceSegments>(null);\n  private expressResourceCancelSubject = new BehaviorSubject<boolean>(false);\n\n  constructor() {\n  }\n\n  get expressResourceStepStatus$(): Observable<ECapacityStepStatus> {\n    return this.expressResourceStepStatusSubject.asObservable()\n      .pipe(filter((value) => !!value));\n  }\n\n  set expressResourceStepStatus(expressResourceDisabled: ECapacityStepStatus) {\n    this.expressResourceStepStatusSubject.next(expressResourceDisabled);\n  }\n\n\n  get expressResourceResetStepStatus$(): Observable<boolean> {\n    return this.expressResourceResetStepStatusSubject.asObservable()\n      .pipe(filter((value) => !!value));\n  }\n\n  set expressResourceResetStepStatus(expressResourceResetStep: boolean) {\n    this.expressResourceResetStepStatusSubject.next(expressResourceResetStep);\n  }\n\n\n  get expressResourceFormView$(): Observable<ECapacitiesStepExpressResource> {\n    return this.expressResourceFormViewSubject.asObservable();\n  }\n\n  set expressResourceFormView(expressResourceFormView: ECapacitiesStepExpressResource) {\n    this.expressResourceFormViewSubject.next(expressResourceFormView);\n  }\n\n  get expressResourceSegments$(): Observable<ICapacityStepExpressResourceSegments> {\n    return this.expressResourceSegmentsSubject.asObservable()\n      .pipe(filter((value) => !!value));\n  }\n\n  set expressResourceSegments(capacitySegments: ICapacityStepExpressResourceSegments) {\n    this.expressResourceSegmentsSubject.next(capacitySegments);\n  }\n\n  get expressResourceRangeLimit$(): Observable<CapacityRangeLimit> {\n    return this.expressResourceRangeLimitSubject.asObservable()\n      .pipe(filter((value) => !!value));\n  }\n\n  set expressResourceRangeLimit(capacityRangeLimit: CapacityRangeLimit) {\n    this.expressResourceRangeLimitSubject.next(capacityRangeLimit);\n  }\n\n  get expressResourceCancel$(): Observable<boolean> {\n    return this.expressResourceCancelSubject.asObservable()\n      .pipe(filter((value) => !!value));\n  }\n\n  set expressResourceCancel(expressResourceCancel: boolean) {\n    this.expressResourceCancelSubject.next(expressResourceCancel);\n  }\n\n  get expressResourceSave$(): Observable<ICapacityStepExpressResourceSegments> {\n    return this.expressResourceSaveSubject.asObservable()\n      .pipe(filter((value) => !!value));\n  }\n\n  set expressResourceSave(expressResourceFormValue: ICapacityStepExpressResourceSegments) {\n    this.expressResourceSaveSubject.next(expressResourceFormValue);\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 24
            },
            "accessors": {
                "expressResourceStepStatus$": {
                    "name": "expressResourceStepStatus$",
                    "getSignature": {
                        "name": "expressResourceStepStatus$",
                        "type": "",
                        "returnType": "Observable<ECapacityStepStatus>",
                        "line": 29
                    }
                },
                "expressResourceStepStatus": {
                    "name": "expressResourceStepStatus",
                    "setSignature": {
                        "name": "expressResourceStepStatus",
                        "type": "void",
                        "args": [
                            {
                                "name": "expressResourceDisabled",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 34,
                        "jsdoctags": [
                            {
                                "name": "expressResourceDisabled",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "expressResourceResetStepStatus$": {
                    "name": "expressResourceResetStepStatus$",
                    "getSignature": {
                        "name": "expressResourceResetStepStatus$",
                        "type": "",
                        "returnType": "Observable<boolean>",
                        "line": 39
                    }
                },
                "expressResourceResetStepStatus": {
                    "name": "expressResourceResetStepStatus",
                    "setSignature": {
                        "name": "expressResourceResetStepStatus",
                        "type": "void",
                        "args": [
                            {
                                "name": "expressResourceResetStep",
                                "type": "boolean"
                            }
                        ],
                        "returnType": "void",
                        "line": 44,
                        "jsdoctags": [
                            {
                                "name": "expressResourceResetStep",
                                "type": "boolean",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "expressResourceFormView$": {
                    "name": "expressResourceFormView$",
                    "getSignature": {
                        "name": "expressResourceFormView$",
                        "type": "",
                        "returnType": "Observable<ECapacitiesStepExpressResource>",
                        "line": 49
                    }
                },
                "expressResourceFormView": {
                    "name": "expressResourceFormView",
                    "setSignature": {
                        "name": "expressResourceFormView",
                        "type": "void",
                        "args": [
                            {
                                "name": "expressResourceFormView",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 53,
                        "jsdoctags": [
                            {
                                "name": "expressResourceFormView",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "expressResourceSegments$": {
                    "name": "expressResourceSegments$",
                    "getSignature": {
                        "name": "expressResourceSegments$",
                        "type": "",
                        "returnType": "Observable<ICapacityStepExpressResourceSegments>",
                        "line": 57
                    }
                },
                "expressResourceSegments": {
                    "name": "expressResourceSegments",
                    "setSignature": {
                        "name": "expressResourceSegments",
                        "type": "void",
                        "args": [
                            {
                                "name": "capacitySegments",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 62,
                        "jsdoctags": [
                            {
                                "name": "capacitySegments",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "expressResourceRangeLimit$": {
                    "name": "expressResourceRangeLimit$",
                    "getSignature": {
                        "name": "expressResourceRangeLimit$",
                        "type": "",
                        "returnType": "Observable<CapacityRangeLimit>",
                        "line": 66
                    }
                },
                "expressResourceRangeLimit": {
                    "name": "expressResourceRangeLimit",
                    "setSignature": {
                        "name": "expressResourceRangeLimit",
                        "type": "void",
                        "args": [
                            {
                                "name": "capacityRangeLimit",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 71,
                        "jsdoctags": [
                            {
                                "name": "capacityRangeLimit",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "expressResourceCancel$": {
                    "name": "expressResourceCancel$",
                    "getSignature": {
                        "name": "expressResourceCancel$",
                        "type": "",
                        "returnType": "Observable<boolean>",
                        "line": 75
                    }
                },
                "expressResourceCancel": {
                    "name": "expressResourceCancel",
                    "setSignature": {
                        "name": "expressResourceCancel",
                        "type": "void",
                        "args": [
                            {
                                "name": "expressResourceCancel",
                                "type": "boolean"
                            }
                        ],
                        "returnType": "void",
                        "line": 80,
                        "jsdoctags": [
                            {
                                "name": "expressResourceCancel",
                                "type": "boolean",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "expressResourceSave$": {
                    "name": "expressResourceSave$",
                    "getSignature": {
                        "name": "expressResourceSave$",
                        "type": "",
                        "returnType": "Observable<ICapacityStepExpressResourceSegments>",
                        "line": 84
                    }
                },
                "expressResourceSave": {
                    "name": "expressResourceSave",
                    "setSignature": {
                        "name": "expressResourceSave",
                        "type": "void",
                        "args": [
                            {
                                "name": "expressResourceFormValue",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 89,
                        "jsdoctags": [
                            {
                                "name": "expressResourceFormValue",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "OpCapacitiesStepGroupOrLocalService",
            "id": "injectable-OpCapacitiesStepGroupOrLocalService-2bdc6782d0f03b459359c2cd3564077a",
            "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-group-or-local/op-capacities-step-group-or-local.service.ts",
            "properties": [
                {
                    "name": "defaultGroupOrLocalSelection",
                    "type": "ICustomSelectOption",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "defaultGroupOrLocalSelectionSaved",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "defaultGroupOrLocalTabSelection",
                    "defaultValue": "ECapacityStepGroupOrLocal.group",
                    "type": "ECapacityStepGroupOrLocal",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "getGroupOrLocalTabSubject",
                    "defaultValue": "new BehaviorSubject<ECapacityStepGroupOrLocal>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "groupOrLocalCancelSubject",
                    "defaultValue": "new BehaviorSubject<boolean>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "groupOrLocalListSubject",
                    "defaultValue": "new BehaviorSubject<Array<ICustomSelectOption>>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "groupOrLocalSaveSubject",
                    "defaultValue": "new BehaviorSubject<ICustomSelectOption>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "groupOrLocalStepStatusSubject",
                    "defaultValue": "new BehaviorSubject<ECapacityStepStatus>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { ICustomSelectOption } from '@interfaces/custom-controls.interface';\nimport { ECapacityStepStatus } from '../../models/operations-capacity-step-status.model';\n\nexport enum ECapacityStepGroupOrLocal {\n  group = 'GROUP',\n  local = 'LOCAL'\n}\n\nexport const CCapacityStepGroupOrLocalName = {\n  [ECapacityStepGroupOrLocal.group]: 'Grupo',\n  [ECapacityStepGroupOrLocal.local]: 'Local',\n};\n\n@Injectable()\nexport class OpCapacitiesStepGroupOrLocalService {\n\n  private groupOrLocalListSubject = new BehaviorSubject<Array<ICustomSelectOption>>(null);\n  private getGroupOrLocalTabSubject = new BehaviorSubject<ECapacityStepGroupOrLocal>(null);\n  private groupOrLocalCancelSubject = new BehaviorSubject<boolean>(null);\n  private groupOrLocalSaveSubject = new BehaviorSubject<ICustomSelectOption>(null);\n  private groupOrLocalStepStatusSubject = new BehaviorSubject<ECapacityStepStatus>(null);\n\n  public defaultGroupOrLocalTabSelection: ECapacityStepGroupOrLocal = ECapacityStepGroupOrLocal.group;\n  public defaultGroupOrLocalSelection: ICustomSelectOption;\n  public defaultGroupOrLocalSelectionSaved: boolean;\n\n\n  constructor() {\n  }\n\n  get groupOrLocalStepStatus$(): Observable<ECapacityStepStatus> {\n    return this.groupOrLocalStepStatusSubject.asObservable()\n      .pipe(filter((value) => !!value));\n  }\n\n  set groupOrLocalStepStatus(groupOrLocalDisabled: ECapacityStepStatus) {\n    this.groupOrLocalStepStatusSubject.next(groupOrLocalDisabled);\n  }\n\n  get groupOrLocalTab$(): Observable<ECapacityStepGroupOrLocal> {\n    return this.getGroupOrLocalTabSubject.asObservable();\n  }\n\n  set groupOrLocalTab(groupList: ECapacityStepGroupOrLocal) {\n    this.getGroupOrLocalTabSubject.next(groupList);\n  }\n\n  get groupOrLocalList$(): Observable<Array<ICustomSelectOption>> {\n    return this.groupOrLocalListSubject.asObservable();\n  }\n\n  set groupOrLocalList(groupOrLocalList: Array<ICustomSelectOption>) {\n    this.groupOrLocalListSubject.next(groupOrLocalList);\n  }\n\n  get groupOrLocalCancel$(): Observable<boolean> {\n    return this.groupOrLocalCancelSubject.asObservable()\n      .pipe(filter((value) => !!value));\n  }\n\n  set groupOrLocalCancel(groupOrLocalCancel: boolean) {\n    this.groupOrLocalCancelSubject.next(groupOrLocalCancel);\n  }\n\n  get groupOrLocalSave$(): Observable<ICustomSelectOption> {\n    return this.groupOrLocalSaveSubject.asObservable()\n      .pipe(filter((value) => !!value));\n  }\n\n  set groupOrLocalSave(groupOrLocalSelected: ICustomSelectOption) {\n    this.groupOrLocalSaveSubject.next(groupOrLocalSelected);\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 28
            },
            "accessors": {
                "groupOrLocalStepStatus$": {
                    "name": "groupOrLocalStepStatus$",
                    "getSignature": {
                        "name": "groupOrLocalStepStatus$",
                        "type": "",
                        "returnType": "Observable<ECapacityStepStatus>",
                        "line": 34
                    }
                },
                "groupOrLocalStepStatus": {
                    "name": "groupOrLocalStepStatus",
                    "setSignature": {
                        "name": "groupOrLocalStepStatus",
                        "type": "void",
                        "args": [
                            {
                                "name": "groupOrLocalDisabled",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 39,
                        "jsdoctags": [
                            {
                                "name": "groupOrLocalDisabled",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "groupOrLocalTab$": {
                    "name": "groupOrLocalTab$",
                    "getSignature": {
                        "name": "groupOrLocalTab$",
                        "type": "",
                        "returnType": "Observable<ECapacityStepGroupOrLocal>",
                        "line": 43
                    }
                },
                "groupOrLocalTab": {
                    "name": "groupOrLocalTab",
                    "setSignature": {
                        "name": "groupOrLocalTab",
                        "type": "void",
                        "args": [
                            {
                                "name": "groupList",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 47,
                        "jsdoctags": [
                            {
                                "name": "groupList",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "groupOrLocalList$": {
                    "name": "groupOrLocalList$",
                    "getSignature": {
                        "name": "groupOrLocalList$",
                        "type": "",
                        "returnType": "Observable<Array<ICustomSelectOption>>",
                        "line": 51
                    }
                },
                "groupOrLocalList": {
                    "name": "groupOrLocalList",
                    "setSignature": {
                        "name": "groupOrLocalList",
                        "type": "void",
                        "args": [
                            {
                                "name": "groupOrLocalList",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 55,
                        "jsdoctags": [
                            {
                                "name": "groupOrLocalList",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "groupOrLocalCancel$": {
                    "name": "groupOrLocalCancel$",
                    "getSignature": {
                        "name": "groupOrLocalCancel$",
                        "type": "",
                        "returnType": "Observable<boolean>",
                        "line": 59
                    }
                },
                "groupOrLocalCancel": {
                    "name": "groupOrLocalCancel",
                    "setSignature": {
                        "name": "groupOrLocalCancel",
                        "type": "void",
                        "args": [
                            {
                                "name": "groupOrLocalCancel",
                                "type": "boolean"
                            }
                        ],
                        "returnType": "void",
                        "line": 64,
                        "jsdoctags": [
                            {
                                "name": "groupOrLocalCancel",
                                "type": "boolean",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "groupOrLocalSave$": {
                    "name": "groupOrLocalSave$",
                    "getSignature": {
                        "name": "groupOrLocalSave$",
                        "type": "",
                        "returnType": "Observable<ICustomSelectOption>",
                        "line": 68
                    }
                },
                "groupOrLocalSave": {
                    "name": "groupOrLocalSave",
                    "setSignature": {
                        "name": "groupOrLocalSave",
                        "type": "void",
                        "args": [
                            {
                                "name": "groupOrLocalSelected",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 73,
                        "jsdoctags": [
                            {
                                "name": "groupOrLocalSelected",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "OperationsCapacitiesImplementService",
            "id": "injectable-OperationsCapacitiesImplementService-b817455439113f749243cf0a94602414",
            "file": "src/app/business/operations/views/operations-capacities/services/operations-capacities-implement.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getCalendarDefaultCapacitiesImplement$",
                    "args": [
                        {
                            "name": "capacitiesLocal",
                            "type": "CapacitiesLocal"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<CapacitiesLocalServiceDefaultCapacity[]>",
                    "typeParameters": [],
                    "line": 94,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "capacitiesLocal",
                            "type": "CapacitiesLocal",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getLocalByServiceTypeImplement$",
                    "args": [
                        {
                            "name": "serviceType",
                            "type": "ECapacitiesServiceType"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 30,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "serviceType",
                            "type": "ECapacitiesServiceType",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getLocalGroupImplements$",
                    "args": [
                        {
                            "name": "serviceType",
                            "type": "ECapacitiesServiceType"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 45,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "serviceType",
                            "type": "ECapacitiesServiceType",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getLocalImplement$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<CapacitiesLocal[]>",
                    "typeParameters": [],
                    "line": 22,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "getTypeOperationGroupImplements$",
                    "args": [
                        {
                            "name": "detailType",
                            "type": "string"
                        },
                        {
                            "name": "selectedLocal",
                            "type": "ICustomSelectOption"
                        },
                        {
                            "name": "serviceType",
                            "type": "ECapacitiesServiceType"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<CapacitiesServiceType>",
                    "typeParameters": [],
                    "line": 77,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "detailType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "selectedLocal",
                            "type": "ICustomSelectOption",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "serviceType",
                            "type": "ECapacitiesServiceType",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTypeOperationImplements$",
                    "args": [
                        {
                            "name": "detailType",
                            "type": "string"
                        },
                        {
                            "name": "selectedLocal",
                            "type": "ICustomSelectOption"
                        },
                        {
                            "name": "serviceType",
                            "type": "ECapacitiesServiceType"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<CapacitiesServiceType>",
                    "typeParameters": [],
                    "line": 60,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "detailType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "selectedLocal",
                            "type": "ICustomSelectOption",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "serviceType",
                            "type": "ECapacitiesServiceType",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "patchCalendarRangeUpdateClient$",
                    "args": [
                        {
                            "name": "request",
                            "type": "ICalendarUpdateRequestParams"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 113,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "ICalendarUpdateRequestParams",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "patchCalendarUpdateClient$",
                    "args": [
                        {
                            "name": "request",
                            "type": "ICalendarUpdateRequestParams"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 109,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "ICalendarUpdateRequestParams",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { ICustomSelectOption } from '@interfaces/custom-controls.interface';\nimport { LocalClientService } from '@clients/calendar/local-client.service';\nimport { CalendarClientService } from '@clients/calendar/calendar-client.service';\nimport { ICalendarUpdateRequestParams } from '@models/calendar/capacity.model';\nimport { map } from 'rxjs/operators';\nimport { ILocalParams } from '@models/local/local-params.model';\nimport { CapacitiesLocal, CapacitiesLocalServiceDefaultCapacity, CapacitiesServiceType } from '../models/operations-capacities-responses.model';\nimport { Observable } from 'rxjs';\nimport { ECapacitiesServiceType } from '@models/capacities/capacities-service-type.model';\nimport { ICalendarParams } from '@models/calendar/calendar-params.model';\n\n@Injectable()\nexport class OperationsCapacitiesImplementService {\n\n    constructor(\n        private localClient: LocalClientService,\n        private calendarClient: CalendarClientService,\n    ) {\n    }\n\n    public getLocalImplement$(): Observable<CapacitiesLocal[]> {\n        return this.localClient.getLocalClient$()\n            .pipe(\n                map((locals) => {\n                    return locals ? locals.map(store => new CapacitiesLocal(store)) : [];\n                }));\n    }\n\n    public getLocalByServiceTypeImplement$(serviceType: ECapacitiesServiceType) {\n        return this.localClient.getLocalByServiceTypeClient$(serviceType)\n            .pipe(\n                map((locals) => {\n                    return locals ? locals.map(store => {\n                        return {\n                            text: store.description,\n                            value: store.localCode,\n                            code: store.localCode,\n                            fulfillmentCenterCode: store.localCode,\n                        } as ICustomSelectOption;\n                    }) : [];\n                }));\n    }\n\n    public getLocalGroupImplements$(serviceType: ECapacitiesServiceType) {\n        return this.localClient.getLocalGroupByServiceTypeClient$(serviceType)\n            .pipe(\n                map((locals) => {\n                    return locals ? locals.map(store => {\n                        return {\n                            text: store.description,\n                            value: store.localCode,\n                            code: store.localCode,\n                            fulfillmentCenterCode: store.localCode,\n                        } as ICustomSelectOption;\n                    }) : [];\n                }));\n    }\n\n    public getTypeOperationImplements$(\n        detailType: string,\n        selectedLocal: ICustomSelectOption,\n        serviceType: ECapacitiesServiceType\n    ): Observable<CapacitiesServiceType> {\n        const params = {\n            fulfillmentCenter: selectedLocal.fulfillmentCenterCode,\n            detailType,\n            serviceType\n        } as ILocalParams;\n        return this.localClient.getTypeOperationClient$(params)\n            .pipe(\n                map((iServiceType) => {\n                    return iServiceType ? new CapacitiesServiceType(iServiceType) : null;\n                }));\n    }\n\n    public getTypeOperationGroupImplements$(\n        detailType: string,\n        selectedLocal: ICustomSelectOption,\n        serviceType: ECapacitiesServiceType\n    ): Observable<CapacitiesServiceType> {\n        const params = {\n            fulfillmentCenter: selectedLocal.fulfillmentCenterCode,\n            detailType,\n            serviceType\n        } as ILocalParams;\n        return this.localClient.getTypeOperationGroupClient$(params)\n            .pipe(\n                map((iServiceType) => {\n                    return iServiceType ? new CapacitiesServiceType(iServiceType) : null;\n                }));\n    }\n\n    public getCalendarDefaultCapacitiesImplement$(\n        capacitiesLocal: CapacitiesLocal\n    ): Observable<CapacitiesLocalServiceDefaultCapacity[]> {\n        const params = {\n            fulfillmentCenter: capacitiesLocal.localCode\n        } as ICalendarParams;\n        return this.calendarClient.getCalendarDefaultCapacities$(params)\n            .pipe(\n                map((serviceDefaultCapacities) => {\n                    return serviceDefaultCapacities ? serviceDefaultCapacities\n                        .map(store => new CapacitiesLocalServiceDefaultCapacity(store)) : [];\n                })\n            );\n    }\n\n    public patchCalendarUpdateClient$(request: ICalendarUpdateRequestParams) {\n        return this.calendarClient.patchCalendarUpdateClient$(request);\n    }\n\n    public patchCalendarRangeUpdateClient$(request: ICalendarUpdateRequestParams) {\n        return this.calendarClient.patchCalendarRangeUpdateClient$(request);\n    }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "localClient",
                        "type": "LocalClientService"
                    },
                    {
                        "name": "calendarClient",
                        "type": "CalendarClientService"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "localClient",
                        "type": "LocalClientService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "calendarClient",
                        "type": "CalendarClientService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "OperationsCapacityAmPmService",
            "id": "injectable-OperationsCapacityAmPmService-3a6327dd0b9df112dbb31465bf2185a3",
            "file": "src/app/business/operations/views/operations-capacities/views/operations-capacity-am-pm/operations-capacity-am-pm.service.ts",
            "properties": [
                {
                    "name": "subscriptions",
                    "defaultValue": "[]",
                    "type": "Subscription[]",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38
                },
                {
                    "name": "updateWhenSaveOrCancelService",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable, OnDestroy } from '@angular/core';\nimport { OperationsCapacityAmPmStoreService } from './store/operations-capacity-am-pm-store.service';\nimport { combineLatest, Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { IOpCapacitiesServiceTypeQueryParams } from '../../models/operations-capacities-service-type-query-params.model';\nimport { OpCapacitiesStepGroupOrLocalService } from '../../components/op-capacities-step-group-or-local/op-capacities-step-group-or-local.service';\nimport { ICustomSelectOption } from '@interfaces/custom-controls.interface';\nimport { OpCapacitiesStepEditionModeService } from '../../components/op-capacities-step-edition-mode/op-capacities-step-edition-mode.service';\nimport { CONCAT_PATH } from '@parameters/concat-router-path.parameter';\n\n@Injectable()\nexport class OperationsCapacityAmPmService implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private _operationsCapacityAmPmStore: OperationsCapacityAmPmStoreService,\n    private _opCapacitiesStepGroupOrLocal: OpCapacitiesStepGroupOrLocalService,\n    private _opCapacitiesStepEditionMode: OpCapacitiesStepEditionModeService,\n    private _router: Router,\n  ) {\n    this.updateWhenSaveOrCancelService();\n  }\n\n  updateWhenSaveOrCancelService() {\n    const subscription = combineLatest([\n      this._operationsCapacityAmPmStore.operationsCapacityAmPmCancel$,\n      this._operationsCapacityAmPmStore.operationsCapacityAmPmSave$\n    ])\n      .subscribe(([save, cancel]) => {\n        if (save || cancel) {\n          this._router.navigate([CONCAT_PATH.operationCapacities]);\n        }\n      });\n\n    this.subscriptions.push(subscription);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n  set serviceQueryParams(serviceQueryParams: IOpCapacitiesServiceTypeQueryParams) {\n    if (serviceQueryParams.groupOrLocal) {\n      this._opCapacitiesStepGroupOrLocal.defaultGroupOrLocalTabSelection = serviceQueryParams.groupOrLocal;\n    }\n    if (serviceQueryParams.groupOrLocal && serviceQueryParams.localCode) {\n      this._opCapacitiesStepGroupOrLocal.defaultGroupOrLocalSelection = {fulfillmentCenterCode: serviceQueryParams.localCode} as ICustomSelectOption;\n      this._opCapacitiesStepGroupOrLocal.defaultGroupOrLocalSelectionSaved = true;\n    }\n    if (serviceQueryParams.groupOrLocal && serviceQueryParams.localCode && serviceQueryParams.editionMode) {\n      this._opCapacitiesStepEditionMode.defaultEditionModeSelection = serviceQueryParams.editionMode;\n      this._opCapacitiesStepEditionMode.defaultEditionModeSelectionSaved = true;\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_operationsCapacityAmPmStore",
                        "type": "OperationsCapacityAmPmStoreService"
                    },
                    {
                        "name": "_opCapacitiesStepGroupOrLocal",
                        "type": "OpCapacitiesStepGroupOrLocalService"
                    },
                    {
                        "name": "_opCapacitiesStepEditionMode",
                        "type": "OpCapacitiesStepEditionModeService"
                    },
                    {
                        "name": "_router",
                        "type": "Router"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "_operationsCapacityAmPmStore",
                        "type": "OperationsCapacityAmPmStoreService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_opCapacitiesStepGroupOrLocal",
                        "type": "OpCapacitiesStepGroupOrLocalService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_opCapacitiesStepEditionMode",
                        "type": "OpCapacitiesStepEditionModeService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "serviceQueryParams": {
                    "name": "serviceQueryParams",
                    "setSignature": {
                        "name": "serviceQueryParams",
                        "type": "void",
                        "args": [
                            {
                                "name": "serviceQueryParams",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 42,
                        "jsdoctags": [
                            {
                                "name": "serviceQueryParams",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "OperationsCapacityAmPmStoreService",
            "id": "injectable-OperationsCapacityAmPmStoreService-f4888fdcdcd200e0d5dec75eeb33fc83",
            "file": "src/app/business/operations/views/operations-capacities/views/operations-capacity-am-pm/store/operations-capacity-am-pm-store.service.ts",
            "properties": [
                {
                    "name": "amPmCapacityId",
                    "defaultValue": "ECapacitiesServiceType.amPm",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "amPmCapacitySelection",
                    "type": "ICapacityStepCapacityTableSegments",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "amPmChannel",
                    "defaultValue": "EChannel.digital",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "editionModeSelection",
                    "type": "ECapacitiesStepEditionMode",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "groupOrLocalSelection",
                    "type": "ICustomSelectOption",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "groupOrLocalTabSelection",
                    "type": "ECapacityStepGroupOrLocal",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "operationsCapacityAmPmCancelSubject",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "operationsCapacityAmPmSaveSubject",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "subscriptions",
                    "defaultValue": "[]",
                    "type": "Subscription[]",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "amPmCapacityActions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 178
                },
                {
                    "name": "amPmCapacityFormView",
                    "args": [
                        {
                            "name": "eCapacitiesStepAmPmCapacity",
                            "type": "ECapacitiesStepCapacityTable"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 173,
                    "description": "<p>Step 3: Am Pm Capacity</p>\n",
                    "jsdoctags": [
                        {
                            "name": "eCapacitiesStepAmPmCapacity",
                            "type": "ECapacitiesStepCapacityTable",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "capacityAmPmSaveError",
                    "args": [
                        {
                            "name": "error",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 247,
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "capacityAmPmSaveSuccess",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 239
                },
                {
                    "name": "editionModeActions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "description": "<p>Step 2: Edition Mode</p>\n"
                },
                {
                    "name": "editionModeAndCapacity",
                    "args": [
                        {
                            "name": "capacitiesServiceType",
                            "type": "CapacitiesServiceType"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 148,
                    "jsdoctags": [
                        {
                            "name": "capacitiesServiceType",
                            "type": "CapacitiesServiceType",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "editionModeAndCapacityError",
                    "args": [
                        {
                            "name": "error",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 163,
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "editionModeAndGroupOrLocal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 131
                },
                {
                    "name": "getLocalGroupList",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71
                },
                {
                    "name": "getLocalList",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79
                },
                {
                    "name": "groupOrLocalActions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87
                },
                {
                    "name": "groupOrLocalTab",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "description": "<p>Step 1: Local Group or Local</p>\n"
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47
                },
                {
                    "name": "saveCapacityAmPm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 220
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { OperationsCapacitiesImplementService } from '../../../services/operations-capacities-implement.service';\nimport { ECapacityStepGroupOrLocal, OpCapacitiesStepGroupOrLocalService } from '../../../components/op-capacities-step-group-or-local/op-capacities-step-group-or-local.service';\nimport { ECapacitiesStepEditionMode, OpCapacitiesStepEditionModeService } from '../../../components/op-capacities-step-edition-mode/op-capacities-step-edition-mode.service';\nimport { ECapacitiesStepCapacityTable, OpCapacitiesStepCapacityTableService } from '../../../components/op-capacities-step-capacity-table/op-capacities-step-capacity-table.service';\nimport { ECapacityStepStatus } from '../../../models/operations-capacity-step-status.model';\nimport { ICustomSelectOption } from '@interfaces/custom-controls.interface';\nimport { AlertService } from '@molecules/alert/alert.service';\nimport { ICapacityStepCapacityTableSegments } from '../../../components/op-capacities-step-capacity-table/models/op-capacities-step-capacity-table.model';\nimport { CapacityRangeLimit, ToCapacityStepAmPmCapacitySegments } from '../../../models/operations-capacity-converter.model';\nimport { ICalendarUpdateRequestParams } from '@models/calendar/capacity.model';\nimport { getDaysRangeBetweenDates } from '@helpers/dates.helper';\nimport { capacityAlertSuccessMessage } from '../../../parameters/operations-capacities-alert-message.parameter';\nimport { ECapacitiesServiceType } from '@models/capacities/capacities-service-type.model';\nimport { EChannel } from '@models/channel/channel.model';\nimport { CapacitiesServiceType } from '../../../models/operations-capacities-responses.model';\n\n\n@Injectable()\nexport class OperationsCapacityAmPmStoreService implements OnDestroy {\n  private readonly amPmCapacityId = ECapacitiesServiceType.amPm;\n  private readonly amPmChannel = EChannel.digital;\n\n  private subscriptions: Subscription[] = [];\n  private operationsCapacityAmPmCancelSubject = new BehaviorSubject<boolean>(false);\n  private operationsCapacityAmPmSaveSubject = new BehaviorSubject<boolean>(false);\n\n  private groupOrLocalTabSelection: ECapacityStepGroupOrLocal;\n  private groupOrLocalSelection: ICustomSelectOption;\n  private editionModeSelection: ECapacitiesStepEditionMode;\n  private amPmCapacitySelection: ICapacityStepCapacityTableSegments;\n\n  constructor(\n    private _operationsCapacityImplement: OperationsCapacitiesImplementService,\n    private _opCapacitiesStepGroupOrLocal: OpCapacitiesStepGroupOrLocalService,\n    private _opCapacitiesStepEditionMode: OpCapacitiesStepEditionModeService,\n    private _opCapacitiesStepAmPmCapacity: OpCapacitiesStepCapacityTableService,\n    private  _alertService: AlertService,\n  ) {\n    this.groupOrLocalTab();\n    this.groupOrLocalActions();\n    this.editionModeActions();\n    this.amPmCapacityActions();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n  /**\n   * Step 1: Local Group or Local\n   */\n\n  groupOrLocalTab() {\n    const subscription = this._opCapacitiesStepGroupOrLocal.groupOrLocalTab$\n      .subscribe((groupOrLocal: ECapacityStepGroupOrLocal) => {\n        this.groupOrLocalTabSelection = groupOrLocal;\n        switch (groupOrLocal) {\n          case ECapacityStepGroupOrLocal.local:\n            this.getLocalList();\n            break;\n          case ECapacityStepGroupOrLocal.group:\n            this.getLocalGroupList();\n            break;\n        }\n      });\n    this.subscriptions.push(subscription);\n  }\n\n  getLocalGroupList() {\n    const subscription = this._operationsCapacityImplement.getLocalGroupImplements$(this.amPmCapacityId)\n      .subscribe((stores: ICustomSelectOption[]) => {\n        this._opCapacitiesStepGroupOrLocal.groupOrLocalList = stores;\n      });\n    this.subscriptions.push(subscription);\n  }\n\n  getLocalList() {\n    const subscription = this._operationsCapacityImplement.getLocalByServiceTypeImplement$(this.amPmCapacityId)\n      .subscribe((stores: ICustomSelectOption[]) => {\n        this._opCapacitiesStepGroupOrLocal.groupOrLocalList = stores;\n      });\n    this.subscriptions.push(subscription);\n  }\n\n  groupOrLocalActions() {\n    const subscriptionSave = this._opCapacitiesStepGroupOrLocal.groupOrLocalSave$\n      .subscribe((local: ICustomSelectOption) => {\n        this.groupOrLocalSelection = local;\n        this._opCapacitiesStepEditionMode.editionModeResetStepStatus = true;\n        this._opCapacitiesStepAmPmCapacity.capacityTableResetStepStatus = true;\n        this._opCapacitiesStepEditionMode.editionModeStepStatus = ECapacityStepStatus.open;\n        this._opCapacitiesStepAmPmCapacity.capacityTableStepStatus = ECapacityStepStatus.disabled;\n      });\n\n    const subscriptionCancel = this._opCapacitiesStepGroupOrLocal.groupOrLocalCancel$\n      .subscribe(() => {\n        this.operationsCapacityAmPmCancel = true;\n      });\n    this.subscriptions.push(subscriptionSave, subscriptionCancel);\n  }\n\n\n  /**\n   * Step 2: Edition Mode\n   */\n\n  editionModeActions() {\n    const subscriptionSave = this._opCapacitiesStepEditionMode.editionModeSave$\n      .subscribe((editionMode: ECapacitiesStepEditionMode) => {\n        this.editionModeSelection = editionMode;\n        this._opCapacitiesStepAmPmCapacity.capacityTableResetStepStatus = true;\n        switch (editionMode) {\n          case ECapacitiesStepEditionMode.calendar:\n            this.editionModeAndGroupOrLocal();\n            break;\n          case ECapacitiesStepEditionMode.default:\n            this.editionModeAndGroupOrLocal();\n            break;\n        }\n      });\n\n    const subscriptionCancel = this._opCapacitiesStepEditionMode.editionModeCancel$\n      .subscribe(() => {\n        this.operationsCapacityAmPmCancel = true;\n      });\n    this.subscriptions.push(subscriptionSave, subscriptionCancel);\n  }\n\n  editionModeAndGroupOrLocal() {\n    switch (this.groupOrLocalTabSelection) {\n      case ECapacityStepGroupOrLocal.local:\n        this._operationsCapacityImplement.getTypeOperationImplements$(this.editionModeSelection, this.groupOrLocalSelection, this.amPmCapacityId)\n          .subscribe(\n            (capacitiesServiceType: CapacitiesServiceType) => this.editionModeAndCapacity(capacitiesServiceType),\n            (error) => this.editionModeAndCapacityError(error));\n        break;\n      case ECapacityStepGroupOrLocal.group:\n        this._operationsCapacityImplement.getTypeOperationGroupImplements$(this.editionModeSelection, this.groupOrLocalSelection, this.amPmCapacityId)\n          .subscribe(\n            (capacitiesServiceType: CapacitiesServiceType) => this.editionModeAndCapacity(capacitiesServiceType),\n            (error) => this.editionModeAndCapacityError(error));\n        break;\n    }\n  }\n\n  editionModeAndCapacity(capacitiesServiceType: CapacitiesServiceType) {\n    this._opCapacitiesStepAmPmCapacity.capacityTableRangeLimit = new CapacityRangeLimit(capacitiesServiceType);\n    this._opCapacitiesStepAmPmCapacity.capacityTableSegments = new ToCapacityStepAmPmCapacitySegments(capacitiesServiceType);\n    this._opCapacitiesStepAmPmCapacity.capacityTableStepStatus = ECapacityStepStatus.open;\n\n    switch (this.editionModeSelection) {\n      case ECapacitiesStepEditionMode.calendar:\n        this.amPmCapacityFormView(ECapacitiesStepCapacityTable.daysRange);\n        break;\n      case ECapacitiesStepEditionMode.default:\n        this.amPmCapacityFormView(ECapacitiesStepCapacityTable.hourlyCapacity);\n        break;\n    }\n  }\n\n  editionModeAndCapacityError(error) {\n    const message = error ? error.message || 'Error' : 'Error';\n    this._alertService.alertError(message);\n    this._opCapacitiesStepEditionMode.editionModeResetStepStatus = true;\n  }\n\n  /**\n   * Step 3: Am Pm Capacity\n   */\n\n  amPmCapacityFormView(eCapacitiesStepAmPmCapacity: ECapacitiesStepCapacityTable) {\n    this._opCapacitiesStepAmPmCapacity.capacityTableFormView = eCapacitiesStepAmPmCapacity;\n  }\n\n\n  amPmCapacityActions() {\n    const subscriptionSave = this._opCapacitiesStepAmPmCapacity.capacityTableSave$\n      .subscribe((amPmCapacitySegments: ICapacityStepCapacityTableSegments) => {\n        this.amPmCapacitySelection = amPmCapacitySegments;\n        this._opCapacitiesStepGroupOrLocal.groupOrLocalStepStatus = ECapacityStepStatus.disabled;\n        this._opCapacitiesStepEditionMode.editionModeStepStatus = ECapacityStepStatus.disabled;\n        this.saveCapacityAmPm();\n      });\n\n    const subscriptionCancel = this._opCapacitiesStepAmPmCapacity.capacityTableCancel$\n      .subscribe(() => {\n        this.operationsCapacityAmPmCancel = true;\n      });\n    this.subscriptions.push(subscriptionSave, subscriptionCancel);\n  }\n\n\n  /**\n   * Save Capacity Am - pm\n   */\n  get capacityAmPmRequest() {\n    const request = {} as ICalendarUpdateRequestParams;\n    request.serviceTypeCode = this.amPmCapacityId;\n    request.channel = this.amPmChannel;\n    request.fulfillmentCenterCode = this.groupOrLocalSelection.fulfillmentCenterCode;\n    request.quantities = this.amPmCapacitySelection?.capacitySegmentList ?\n      this.amPmCapacitySelection.capacitySegmentList\n        .map(segment => segment.segmentCapacity || 0).join(',') : '';\n    request.hours = this.amPmCapacitySelection?.capacitySegmentList ?\n      this.amPmCapacitySelection.capacitySegmentList\n        .map(segment => segment.segmentValue || '').join(',') : '';\n    if (this.editionModeSelection === ECapacitiesStepEditionMode.calendar && this.amPmCapacitySelection?.capacityRange) {\n      request.days = getDaysRangeBetweenDates(\n        this.amPmCapacitySelection.capacityRange.endDate,\n        this.amPmCapacitySelection.capacityRange.startDate);\n    }\n    if (this.groupOrLocalTabSelection === ECapacityStepGroupOrLocal.group) {\n      request.filter = ECapacityStepGroupOrLocal.group;\n    }\n    return request;\n  }\n\n  saveCapacityAmPm() {\n    const capacityAmPmRequest = this.capacityAmPmRequest;\n\n    switch (this.editionModeSelection) {\n      case ECapacitiesStepEditionMode.default:\n        this._operationsCapacityImplement.patchCalendarUpdateClient$(capacityAmPmRequest)\n          .subscribe(\n            () => this.capacityAmPmSaveSuccess(),\n            (error) => this.capacityAmPmSaveError(error));\n        break;\n      case ECapacitiesStepEditionMode.calendar:\n        this._operationsCapacityImplement.patchCalendarRangeUpdateClient$(capacityAmPmRequest)\n          .subscribe(\n            () => this.capacityAmPmSaveSuccess(),\n            (error) => this.capacityAmPmSaveError(error));\n        break;\n    }\n  }\n\n  capacityAmPmSaveSuccess() {\n    const message = capacityAlertSuccessMessage(\n      'AM/PM',\n      `${this.groupOrLocalSelection.fulfillmentCenterCode} ${this.groupOrLocalSelection.text}`);\n    this._alertService.alertSuccess(message);\n    this.operationsCapacityAmPmSave = true;\n  }\n\n  capacityAmPmSaveError(error) {\n    const message = error && error.message ? error.message : 'Hubo un error';\n    this._alertService.alertError(message);\n\n    this._opCapacitiesStepAmPmCapacity.capacityTableStepStatus = ECapacityStepStatus.disabled;\n    this._opCapacitiesStepEditionMode.editionModeStepStatus = ECapacityStepStatus.disabled;\n    this._opCapacitiesStepGroupOrLocal.groupOrLocalStepStatus = ECapacityStepStatus.open;\n  }\n\n\n  /**\n   * Store Actions\n   */\n\n\n  get operationsCapacityAmPmSave$(): Observable<boolean> {\n    return this.operationsCapacityAmPmSaveSubject.asObservable();\n  }\n\n  set operationsCapacityAmPmSave(amPmSave: boolean) {\n    this.operationsCapacityAmPmSaveSubject.next(amPmSave);\n  }\n\n  get operationsCapacityAmPmCancel$(): Observable<boolean> {\n    return this.operationsCapacityAmPmCancelSubject.asObservable();\n  }\n\n  set operationsCapacityAmPmCancel(amPmSave: boolean) {\n    this.operationsCapacityAmPmCancelSubject.next(amPmSave);\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_operationsCapacityImplement",
                        "type": "OperationsCapacitiesImplementService"
                    },
                    {
                        "name": "_opCapacitiesStepGroupOrLocal",
                        "type": "OpCapacitiesStepGroupOrLocalService"
                    },
                    {
                        "name": "_opCapacitiesStepEditionMode",
                        "type": "OpCapacitiesStepEditionModeService"
                    },
                    {
                        "name": "_opCapacitiesStepAmPmCapacity",
                        "type": "OpCapacitiesStepCapacityTableService"
                    },
                    {
                        "name": "_alertService",
                        "type": "AlertService"
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "_operationsCapacityImplement",
                        "type": "OperationsCapacitiesImplementService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_opCapacitiesStepGroupOrLocal",
                        "type": "OpCapacitiesStepGroupOrLocalService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_opCapacitiesStepEditionMode",
                        "type": "OpCapacitiesStepEditionModeService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_opCapacitiesStepAmPmCapacity",
                        "type": "OpCapacitiesStepCapacityTableService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_alertService",
                        "type": "AlertService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "capacityAmPmRequest": {
                    "name": "capacityAmPmRequest",
                    "getSignature": {
                        "name": "capacityAmPmRequest",
                        "type": "",
                        "returnType": "",
                        "line": 198,
                        "description": "<p>Save Capacity Am - pm</p>\n"
                    }
                },
                "operationsCapacityAmPmSave$": {
                    "name": "operationsCapacityAmPmSave$",
                    "getSignature": {
                        "name": "operationsCapacityAmPmSave$",
                        "type": "",
                        "returnType": "Observable<boolean>",
                        "line": 262,
                        "description": "<p>Store Actions</p>\n"
                    }
                },
                "operationsCapacityAmPmSave": {
                    "name": "operationsCapacityAmPmSave",
                    "setSignature": {
                        "name": "operationsCapacityAmPmSave",
                        "type": "void",
                        "args": [
                            {
                                "name": "amPmSave",
                                "type": "boolean"
                            }
                        ],
                        "returnType": "void",
                        "line": 266,
                        "jsdoctags": [
                            {
                                "name": "amPmSave",
                                "type": "boolean",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "operationsCapacityAmPmCancel$": {
                    "name": "operationsCapacityAmPmCancel$",
                    "getSignature": {
                        "name": "operationsCapacityAmPmCancel$",
                        "type": "",
                        "returnType": "Observable<boolean>",
                        "line": 270
                    }
                },
                "operationsCapacityAmPmCancel": {
                    "name": "operationsCapacityAmPmCancel",
                    "setSignature": {
                        "name": "operationsCapacityAmPmCancel",
                        "type": "void",
                        "args": [
                            {
                                "name": "amPmSave",
                                "type": "boolean"
                            }
                        ],
                        "returnType": "void",
                        "line": 274,
                        "jsdoctags": [
                            {
                                "name": "amPmSave",
                                "type": "boolean",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "OperationsCapacityExpressService",
            "id": "injectable-OperationsCapacityExpressService-a0d19fc216396825b7bab96a4c498e7d",
            "file": "src/app/business/operations/views/operations-capacities/views/operations-capacity-express/operations-capacity-express.service.ts",
            "properties": [
                {
                    "name": "subscriptions",
                    "defaultValue": "[]",
                    "type": "Subscription[]",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38
                },
                {
                    "name": "updateWhenSaveOrCancelService",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable, OnDestroy } from '@angular/core';\nimport { combineLatest, Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { IOpCapacitiesServiceTypeQueryParams } from '../../models/operations-capacities-service-type-query-params.model';\nimport { OpCapacitiesStepGroupOrLocalService } from '../../components/op-capacities-step-group-or-local/op-capacities-step-group-or-local.service';\nimport { ICustomSelectOption } from '@interfaces/custom-controls.interface';\nimport { OpCapacitiesStepEditionModeService } from '../../components/op-capacities-step-edition-mode/op-capacities-step-edition-mode.service';\nimport { OperationsCapacityExpressStoreService } from './store/operations-capacity-express-store.service';\nimport { CONCAT_PATH } from '@parameters/concat-router-path.parameter';\n\n@Injectable()\nexport class OperationsCapacityExpressService implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private _operationsCapacityExpressStore: OperationsCapacityExpressStoreService,\n    private _opCapacitiesStepGroupOrLocal: OpCapacitiesStepGroupOrLocalService,\n    private _opCapacitiesStepEditionMode: OpCapacitiesStepEditionModeService,\n    private _router: Router,\n  ) {\n    this.updateWhenSaveOrCancelService();\n  }\n\n  updateWhenSaveOrCancelService() {\n    const subscription = combineLatest([\n      this._operationsCapacityExpressStore.operationsCapacityExpressCancel$,\n      this._operationsCapacityExpressStore.operationsCapacityExpressSave$\n    ])\n      .subscribe(([save, cancel]) => {\n        if (save || cancel) {\n          this._router.navigate([CONCAT_PATH.operationCapacities]);\n        }\n      });\n\n    this.subscriptions.push(subscription);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n  set serviceQueryParams(serviceQueryParams: IOpCapacitiesServiceTypeQueryParams) {\n    if (serviceQueryParams.groupOrLocal) {\n      this._opCapacitiesStepGroupOrLocal.defaultGroupOrLocalTabSelection = serviceQueryParams.groupOrLocal;\n    }\n    if (serviceQueryParams.groupOrLocal && serviceQueryParams.localCode) {\n      this._opCapacitiesStepGroupOrLocal.defaultGroupOrLocalSelection = {fulfillmentCenterCode: serviceQueryParams.localCode} as ICustomSelectOption;\n      this._opCapacitiesStepGroupOrLocal.defaultGroupOrLocalSelectionSaved = true;\n    }\n    if (serviceQueryParams.groupOrLocal && serviceQueryParams.localCode && serviceQueryParams.editionMode) {\n      this._opCapacitiesStepEditionMode.defaultEditionModeSelection = serviceQueryParams.editionMode;\n      this._opCapacitiesStepEditionMode.defaultEditionModeSelectionSaved = true;\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_operationsCapacityExpressStore",
                        "type": "OperationsCapacityExpressStoreService"
                    },
                    {
                        "name": "_opCapacitiesStepGroupOrLocal",
                        "type": "OpCapacitiesStepGroupOrLocalService"
                    },
                    {
                        "name": "_opCapacitiesStepEditionMode",
                        "type": "OpCapacitiesStepEditionModeService"
                    },
                    {
                        "name": "_router",
                        "type": "Router"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "_operationsCapacityExpressStore",
                        "type": "OperationsCapacityExpressStoreService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_opCapacitiesStepGroupOrLocal",
                        "type": "OpCapacitiesStepGroupOrLocalService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_opCapacitiesStepEditionMode",
                        "type": "OpCapacitiesStepEditionModeService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "serviceQueryParams": {
                    "name": "serviceQueryParams",
                    "setSignature": {
                        "name": "serviceQueryParams",
                        "type": "void",
                        "args": [
                            {
                                "name": "serviceQueryParams",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 42,
                        "jsdoctags": [
                            {
                                "name": "serviceQueryParams",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "OperationsCapacityExpressStoreService",
            "id": "injectable-OperationsCapacityExpressStoreService-86826064dde7d2783a03b2c79ec00494",
            "file": "src/app/business/operations/views/operations-capacities/views/operations-capacity-express/store/operations-capacity-express-store.service.ts",
            "properties": [
                {
                    "name": "editionModeSelection",
                    "type": "ECapacitiesStepEditionMode",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "expressCapacityId",
                    "defaultValue": "ECapacitiesServiceType.express",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "expressChannel",
                    "defaultValue": "EChannel.digital",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "expressResourceSelection",
                    "type": "ICapacityStepExpressResourceSegments",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "groupOrLocalSelection",
                    "type": "ICustomSelectOption",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "groupOrLocalTabSelection",
                    "type": "ECapacityStepGroupOrLocal",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "operationsCapacityExpressCancelSubject",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "operationsCapacityExpressSaveSubject",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "subscriptions",
                    "defaultValue": "[]",
                    "type": "Subscription[]",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "capacityExpressSaveError",
                    "args": [
                        {
                            "name": "error",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 254,
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "capacityExpressSaveSuccess",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 246
                },
                {
                    "name": "editionModeActions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "description": "<p>Step 2: Edition Mode</p>\n"
                },
                {
                    "name": "editionModeAndCapacity",
                    "args": [
                        {
                            "name": "capacitiesServiceType",
                            "type": "CapacitiesServiceType"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 160,
                    "jsdoctags": [
                        {
                            "name": "capacitiesServiceType",
                            "type": "CapacitiesServiceType",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "editionModeAndCapacityError",
                    "args": [
                        {
                            "name": "error",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 175,
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "editionModeAndGroupOrLocal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 135
                },
                {
                    "name": "expressResourceActions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 190
                },
                {
                    "name": "expressResourceFormView",
                    "args": [
                        {
                            "name": "eCapacitiesStepExpressResource",
                            "type": "ECapacitiesStepExpressResource"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 185,
                    "description": "<p>Step 3: Express Resource</p>\n",
                    "jsdoctags": [
                        {
                            "name": "eCapacitiesStepExpressResource",
                            "type": "ECapacitiesStepExpressResource",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getLocalGroupList",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75
                },
                {
                    "name": "getLocalList",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83
                },
                {
                    "name": "groupOrLocalActions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91
                },
                {
                    "name": "groupOrLocalTab",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "description": "<p>Step 1: Local Group or Local</p>\n"
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51
                },
                {
                    "name": "saveCapacityExpress",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 227
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { ECapacityStepGroupOrLocal, OpCapacitiesStepGroupOrLocalService } from '../../../components/op-capacities-step-group-or-local/op-capacities-step-group-or-local.service';\nimport { ECapacitiesStepEditionMode, OpCapacitiesStepEditionModeService } from '../../../components/op-capacities-step-edition-mode/op-capacities-step-edition-mode.service';\nimport { ECapacityStepStatus } from '../../../models/operations-capacity-step-status.model';\nimport { ICustomSelectOption } from '@interfaces/custom-controls.interface';\nimport { AlertService } from '@molecules/alert/alert.service';\nimport { CapacityRangeLimit, ToCapacityStepExpressResourceSegments } from '../../../models/operations-capacity-converter.model';\nimport { ICalendarUpdateRequestParams } from '@models/calendar/capacity.model';\nimport { getDaysRangeBetweenDates } from '@helpers/dates.helper';\n\nimport {\n  ECapacitiesStepExpressResource,\n  OpCapacitiesStepExpressResourceService\n} from '../../../components/op-capacities-step-express-resource/op-capacities-step-express-resource.service';\nimport { ICapacityStepExpressResourceSegments } from '../../../components/op-capacities-step-express-resource/models/op-capacities-step-express-resource.model';\nimport { OperationsCapacitiesImplementService } from '../../../services/operations-capacities-implement.service';\nimport { capacityAlertSuccessMessage } from '../../../parameters/operations-capacities-alert-message.parameter';\nimport { ECapacitiesServiceType } from '@models/capacities/capacities-service-type.model';\nimport { EChannel } from '@models/channel/channel.model';\nimport { CapacitiesServiceType } from '../../../models/operations-capacities-responses.model';\n\n\n@Injectable()\nexport class OperationsCapacityExpressStoreService implements OnDestroy {\n  private readonly expressCapacityId = ECapacitiesServiceType.express;\n  private readonly expressChannel = EChannel.digital;\n\n  private subscriptions: Subscription[] = [];\n  private operationsCapacityExpressCancelSubject = new BehaviorSubject<boolean>(false);\n  private operationsCapacityExpressSaveSubject = new BehaviorSubject<boolean>(false);\n\n  private groupOrLocalTabSelection: ECapacityStepGroupOrLocal;\n  private groupOrLocalSelection: ICustomSelectOption;\n  private editionModeSelection: ECapacitiesStepEditionMode;\n  private expressResourceSelection: ICapacityStepExpressResourceSegments;\n\n  constructor(\n    private _operationsCapacityImplement: OperationsCapacitiesImplementService,\n    private _opCapacitiesStepGroupOrLocal: OpCapacitiesStepGroupOrLocalService,\n    private _opCapacitiesStepEditionMode: OpCapacitiesStepEditionModeService,\n    private _opCapacitiesStepExpressResource: OpCapacitiesStepExpressResourceService,\n    private  _alertService: AlertService,\n  ) {\n    this.groupOrLocalTab();\n    this.groupOrLocalActions();\n    this.editionModeActions();\n    this.expressResourceActions();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n  /**\n   * Step 1: Local Group or Local\n   */\n\n  groupOrLocalTab() {\n    const subscription = this._opCapacitiesStepGroupOrLocal.groupOrLocalTab$\n      .subscribe((groupOrLocal: ECapacityStepGroupOrLocal) => {\n        this.groupOrLocalTabSelection = groupOrLocal;\n        switch (groupOrLocal) {\n          case ECapacityStepGroupOrLocal.local:\n            this.getLocalList();\n            break;\n          case ECapacityStepGroupOrLocal.group:\n            this.getLocalGroupList();\n            break;\n        }\n      });\n    this.subscriptions.push(subscription);\n  }\n\n  getLocalGroupList() {\n    const subscription = this._operationsCapacityImplement.getLocalGroupImplements$(this.expressCapacityId)\n      .subscribe((stores: ICustomSelectOption[]) => {\n        this._opCapacitiesStepGroupOrLocal.groupOrLocalList = stores;\n      });\n    this.subscriptions.push(subscription);\n  }\n\n  getLocalList() {\n    const subscription = this._operationsCapacityImplement.getLocalByServiceTypeImplement$(this.expressCapacityId)\n      .subscribe((stores: ICustomSelectOption[]) => {\n        this._opCapacitiesStepGroupOrLocal.groupOrLocalList = stores;\n      });\n    this.subscriptions.push(subscription);\n  }\n\n  groupOrLocalActions() {\n    const subscriptionSave = this._opCapacitiesStepGroupOrLocal.groupOrLocalSave$\n      .subscribe((local: ICustomSelectOption) => {\n        this.groupOrLocalSelection = local;\n        this._opCapacitiesStepEditionMode.editionModeResetStepStatus = true;\n        this._opCapacitiesStepExpressResource.expressResourceResetStepStatus = true;\n        this._opCapacitiesStepEditionMode.editionModeStepStatus = ECapacityStepStatus.open;\n        this._opCapacitiesStepExpressResource.expressResourceStepStatus = ECapacityStepStatus.disabled;\n      });\n\n    const subscriptionCancel = this._opCapacitiesStepGroupOrLocal.groupOrLocalCancel$\n      .subscribe(() => {\n        this.operationsCapacityExpressCancel = true;\n      });\n    this.subscriptions.push(subscriptionSave, subscriptionCancel);\n  }\n\n\n  /**\n   * Step 2: Edition Mode\n   */\n\n  editionModeActions() {\n    const subscriptionSave = this._opCapacitiesStepEditionMode.editionModeSave$\n      .subscribe((editionMode: ECapacitiesStepEditionMode) => {\n        this.editionModeSelection = editionMode;\n        this._opCapacitiesStepExpressResource.expressResourceResetStepStatus = true;\n        switch (editionMode) {\n          case ECapacitiesStepEditionMode.calendar:\n            this.editionModeAndGroupOrLocal();\n            break;\n          case ECapacitiesStepEditionMode.default:\n            this.editionModeAndGroupOrLocal();\n            break;\n        }\n      });\n\n    const subscriptionCancel = this._opCapacitiesStepEditionMode.editionModeCancel$\n      .subscribe(() => {\n        this.operationsCapacityExpressCancel = true;\n      });\n    this.subscriptions.push(subscriptionSave, subscriptionCancel);\n  }\n\n  editionModeAndGroupOrLocal() {\n    switch (this.groupOrLocalTabSelection) {\n      case ECapacityStepGroupOrLocal.local:\n        this._operationsCapacityImplement.getTypeOperationImplements$(\n          this.editionModeSelection,\n          this.groupOrLocalSelection,\n          this.expressCapacityId\n        )\n          .subscribe(\n            (data) => this.editionModeAndCapacity(data),\n            (error) => this.editionModeAndCapacityError(error));\n        break;\n      case ECapacityStepGroupOrLocal.group:\n        this._operationsCapacityImplement.getTypeOperationGroupImplements$(\n          this.editionModeSelection,\n          this.groupOrLocalSelection,\n          this.expressCapacityId\n        )\n          .subscribe(\n            (data) => this.editionModeAndCapacity(data),\n            (error) => this.editionModeAndCapacityError(error));\n        break;\n    }\n  }\n\n  editionModeAndCapacity(capacitiesServiceType: CapacitiesServiceType) {\n    this._opCapacitiesStepExpressResource.expressResourceRangeLimit = new CapacityRangeLimit(capacitiesServiceType);\n    this._opCapacitiesStepExpressResource.expressResourceSegments = new ToCapacityStepExpressResourceSegments(capacitiesServiceType);\n    this._opCapacitiesStepExpressResource.expressResourceStepStatus = ECapacityStepStatus.open;\n\n    switch (this.editionModeSelection) {\n      case ECapacitiesStepEditionMode.calendar:\n        this.expressResourceFormView(ECapacitiesStepExpressResource.daysRange);\n        break;\n      case ECapacitiesStepEditionMode.default:\n        this.expressResourceFormView(ECapacitiesStepExpressResource.hourlyCapacity);\n        break;\n    }\n  }\n\n  editionModeAndCapacityError(error) {\n    const message = error ? error.message || 'Error' : 'Error';\n    this._alertService.alertError(message);\n    this._opCapacitiesStepEditionMode.editionModeResetStepStatus = true;\n  }\n\n  /**\n   * Step 3: Express Resource\n   */\n\n  expressResourceFormView(eCapacitiesStepExpressResource: ECapacitiesStepExpressResource) {\n    this._opCapacitiesStepExpressResource.expressResourceFormView = eCapacitiesStepExpressResource;\n  }\n\n\n  expressResourceActions() {\n    const subscriptionSave = this._opCapacitiesStepExpressResource.expressResourceSave$\n      .subscribe((expressResourceSegments: ICapacityStepExpressResourceSegments) => {\n        this.expressResourceSelection = expressResourceSegments;\n        this._opCapacitiesStepGroupOrLocal.groupOrLocalStepStatus = ECapacityStepStatus.disabled;\n        this._opCapacitiesStepEditionMode.editionModeStepStatus = ECapacityStepStatus.disabled;\n        this.saveCapacityExpress();\n      });\n\n    const subscriptionCancel = this._opCapacitiesStepExpressResource.expressResourceCancel$\n      .subscribe(() => {\n        this.operationsCapacityExpressCancel = true;\n      });\n    this.subscriptions.push(subscriptionSave, subscriptionCancel);\n  }\n\n\n  /**\n   * Save Capacity Express\n   */\n  get capacityExpressRequest() {\n    const request = {} as ICalendarUpdateRequestParams;\n    request.serviceTypeCode = this.expressCapacityId;\n    request.channel = this.expressChannel;\n    request.fulfillmentCenterCode = this.groupOrLocalSelection.fulfillmentCenterCode;\n    request.quantities = `${this.expressResourceSelection.expressResource}`;\n    if (this.editionModeSelection === ECapacitiesStepEditionMode.calendar && this.expressResourceSelection?.capacityRange) {\n      request.days = getDaysRangeBetweenDates(\n        this.expressResourceSelection.capacityRange.endDate,\n        this.expressResourceSelection.capacityRange.startDate);\n    }\n    if (this.groupOrLocalTabSelection === ECapacityStepGroupOrLocal.group) {\n      request.filter = ECapacityStepGroupOrLocal.group;\n    }\n    return request;\n  }\n\n  saveCapacityExpress() {\n    const capacityExpressRequest = this.capacityExpressRequest;\n\n    switch (this.editionModeSelection) {\n      case ECapacitiesStepEditionMode.default:\n        this._operationsCapacityImplement.patchCalendarUpdateClient$(capacityExpressRequest)\n          .subscribe(\n            () => this.capacityExpressSaveSuccess(),\n            (error) => this.capacityExpressSaveError(error));\n        break;\n      case ECapacitiesStepEditionMode.calendar:\n        this._operationsCapacityImplement.patchCalendarRangeUpdateClient$(capacityExpressRequest)\n          .subscribe(\n            () => this.capacityExpressSaveSuccess(),\n            (error) => this.capacityExpressSaveError(error));\n        break;\n    }\n  }\n\n  capacityExpressSaveSuccess() {\n    const message = capacityAlertSuccessMessage(\n      'Express',\n      `${this.groupOrLocalSelection.fulfillmentCenterCode} ${this.groupOrLocalSelection.text}`);\n    this._alertService.alertSuccess(message);\n    this.operationsCapacityExpressSave = true;\n  }\n\n  capacityExpressSaveError(error) {\n    const message = error && error.message ? error.message : 'Hubo un error';\n    this._alertService.alertError(message);\n\n    this._opCapacitiesStepExpressResource.expressResourceStepStatus = ECapacityStepStatus.disabled;\n    this._opCapacitiesStepEditionMode.editionModeStepStatus = ECapacityStepStatus.disabled;\n    this._opCapacitiesStepGroupOrLocal.groupOrLocalStepStatus = ECapacityStepStatus.open;\n  }\n\n\n  /**\n   * Store Actions\n   */\n\n\n  get operationsCapacityExpressSave$(): Observable<boolean> {\n    return this.operationsCapacityExpressSaveSubject.asObservable();\n  }\n\n  set operationsCapacityExpressSave(expressSave: boolean) {\n    this.operationsCapacityExpressSaveSubject.next(expressSave);\n  }\n\n  get operationsCapacityExpressCancel$(): Observable<boolean> {\n    return this.operationsCapacityExpressCancelSubject.asObservable();\n  }\n\n  set operationsCapacityExpressCancel(expressSave: boolean) {\n    this.operationsCapacityExpressCancelSubject.next(expressSave);\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_operationsCapacityImplement",
                        "type": "OperationsCapacitiesImplementService"
                    },
                    {
                        "name": "_opCapacitiesStepGroupOrLocal",
                        "type": "OpCapacitiesStepGroupOrLocalService"
                    },
                    {
                        "name": "_opCapacitiesStepEditionMode",
                        "type": "OpCapacitiesStepEditionModeService"
                    },
                    {
                        "name": "_opCapacitiesStepExpressResource",
                        "type": "OpCapacitiesStepExpressResourceService"
                    },
                    {
                        "name": "_alertService",
                        "type": "AlertService"
                    }
                ],
                "line": 36,
                "jsdoctags": [
                    {
                        "name": "_operationsCapacityImplement",
                        "type": "OperationsCapacitiesImplementService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_opCapacitiesStepGroupOrLocal",
                        "type": "OpCapacitiesStepGroupOrLocalService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_opCapacitiesStepEditionMode",
                        "type": "OpCapacitiesStepEditionModeService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_opCapacitiesStepExpressResource",
                        "type": "OpCapacitiesStepExpressResourceService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_alertService",
                        "type": "AlertService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "capacityExpressRequest": {
                    "name": "capacityExpressRequest",
                    "getSignature": {
                        "name": "capacityExpressRequest",
                        "type": "",
                        "returnType": "",
                        "line": 210,
                        "description": "<p>Save Capacity Express</p>\n"
                    }
                },
                "operationsCapacityExpressSave$": {
                    "name": "operationsCapacityExpressSave$",
                    "getSignature": {
                        "name": "operationsCapacityExpressSave$",
                        "type": "",
                        "returnType": "Observable<boolean>",
                        "line": 269,
                        "description": "<p>Store Actions</p>\n"
                    }
                },
                "operationsCapacityExpressSave": {
                    "name": "operationsCapacityExpressSave",
                    "setSignature": {
                        "name": "operationsCapacityExpressSave",
                        "type": "void",
                        "args": [
                            {
                                "name": "expressSave",
                                "type": "boolean"
                            }
                        ],
                        "returnType": "void",
                        "line": 273,
                        "jsdoctags": [
                            {
                                "name": "expressSave",
                                "type": "boolean",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "operationsCapacityExpressCancel$": {
                    "name": "operationsCapacityExpressCancel$",
                    "getSignature": {
                        "name": "operationsCapacityExpressCancel$",
                        "type": "",
                        "returnType": "Observable<boolean>",
                        "line": 277
                    }
                },
                "operationsCapacityExpressCancel": {
                    "name": "operationsCapacityExpressCancel",
                    "setSignature": {
                        "name": "operationsCapacityExpressCancel",
                        "type": "void",
                        "args": [
                            {
                                "name": "expressSave",
                                "type": "boolean"
                            }
                        ],
                        "returnType": "void",
                        "line": 281,
                        "jsdoctags": [
                            {
                                "name": "expressSave",
                                "type": "boolean",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "OperationsCapacityHomeStoreService",
            "id": "injectable-OperationsCapacityHomeStoreService-ae3e703f1d26b4185aacf4d240ddd321",
            "file": "src/app/business/operations/views/operations-capacities/views/operations-capacity-home/store/operations-capacity-home-store.service.ts",
            "properties": [
                {
                    "name": "capacitiesLocalSelection",
                    "type": "CapacitiesLocal",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "subscriptions",
                    "defaultValue": "[]",
                    "type": "Subscription[]",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getLocalAvailableServices",
                    "args": [
                        {
                            "name": "capacityLocal",
                            "type": "CapacitiesLocal"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "jsdoctags": [
                        {
                            "name": "capacityLocal",
                            "type": "CapacitiesLocal",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getLocalList",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32
                },
                {
                    "name": "getLocalSelection",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39
                },
                {
                    "name": "getLocalServiceTypeSelection",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AlertService } from '@molecules/alert/alert.service';\nimport { OperationsCapacitiesImplementService } from '../../../services/operations-capacities-implement.service';\nimport { CapacitiesLocal, CapacitiesLocalServiceDefaultCapacity } from '../../../models/operations-capacities-responses.model';\nimport { OpCapacitiesLocalDefaultCapacityService } from '../../../components/op-capacities-local-default-capacity/op-capacities-local-default-capacity.service';\nimport { ECapacitiesStepEditionMode } from '../../../components/op-capacities-step-edition-mode/op-capacities-step-edition-mode.service';\nimport { ICustomSelectOption } from '@interfaces/custom-controls.interface';\n\n\n@Injectable()\nexport class OperationsCapacityHomeStoreService implements OnDestroy {\n\n  private subscriptions: Subscription[] = [];\n\n  private capacitiesLocalSelection: CapacitiesLocal;\n\n  constructor(\n    private _operationsCapacityImplement: OperationsCapacitiesImplementService,\n    private _opCapacitiesLocalDefaultCapacity: OpCapacitiesLocalDefaultCapacityService,\n    private  _alertService: AlertService,\n  ) {\n    this.getLocalList();\n    this.getLocalSelection();\n    this.getLocalServiceTypeSelection();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n  getLocalList() {\n    this._operationsCapacityImplement.getLocalImplement$()\n      .subscribe((capacitiesLocalList: CapacitiesLocal[]) => {\n        this._opCapacitiesLocalDefaultCapacity.localDefaultCapacityLocalList = capacitiesLocalList;\n      });\n  }\n\n  getLocalSelection() {\n    const subscription = this._opCapacitiesLocalDefaultCapacity.localDefaultCapacityLocalSelection$\n      .subscribe((capacityLocalSelection: CapacitiesLocal) => {\n        this.capacitiesLocalSelection = capacityLocalSelection;\n        this.getLocalAvailableServices(capacityLocalSelection);\n      });\n    this.subscriptions.push(subscription);\n  }\n\n\n  getLocalAvailableServices(capacityLocal: CapacitiesLocal) {\n    this._operationsCapacityImplement.getCalendarDefaultCapacitiesImplement$(capacityLocal)\n      .subscribe((serviceDefaultCapacityList: CapacitiesLocalServiceDefaultCapacity[]) => {\n        this._opCapacitiesLocalDefaultCapacity.localDefaultCapacityLocalServiceList = serviceDefaultCapacityList;\n      });\n\n  }\n\n  getLocalServiceTypeSelection() {\n    const subscription = this._opCapacitiesLocalDefaultCapacity.localDefaultCapacityLocalServiceTypeSelection$\n      .subscribe((localService: CapacitiesLocalServiceDefaultCapacity) => {\n        const localSelection = {fulfillmentCenterCode: this.capacitiesLocalSelection.localCode} as ICustomSelectOption;\n\n        this._operationsCapacityImplement.getTypeOperationImplements$(\n          ECapacitiesStepEditionMode.default, localSelection, localService.serviceType)\n          .subscribe((capacitiesServiceType) => {\n            this._opCapacitiesLocalDefaultCapacity.localDefaultCapacityList = capacitiesServiceType;\n          });\n      });\n    this.subscriptions.push(subscription);\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_operationsCapacityImplement",
                        "type": "OperationsCapacitiesImplementService"
                    },
                    {
                        "name": "_opCapacitiesLocalDefaultCapacity",
                        "type": "OpCapacitiesLocalDefaultCapacityService"
                    },
                    {
                        "name": "_alertService",
                        "type": "AlertService"
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "_operationsCapacityImplement",
                        "type": "OperationsCapacitiesImplementService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_opCapacitiesLocalDefaultCapacity",
                        "type": "OpCapacitiesLocalDefaultCapacityService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_alertService",
                        "type": "AlertService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "OperationsCapacityRetService",
            "id": "injectable-OperationsCapacityRetService-33ff22ab30b94ed4d23922d401a2bb3d",
            "file": "src/app/business/operations/views/operations-capacities/views/operations-capacity-ret/operations-capacity-ret.service.ts",
            "properties": [
                {
                    "name": "subscriptions",
                    "defaultValue": "[]",
                    "type": "Subscription[]",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38
                },
                {
                    "name": "updateWhenSaveOrCancelService",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable, OnDestroy } from '@angular/core';\nimport { combineLatest, Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { IOpCapacitiesServiceTypeQueryParams } from '../../models/operations-capacities-service-type-query-params.model';\nimport { OpCapacitiesStepGroupOrLocalService } from '../../components/op-capacities-step-group-or-local/op-capacities-step-group-or-local.service';\nimport { ICustomSelectOption } from '@interfaces/custom-controls.interface';\nimport { OpCapacitiesStepEditionModeService } from '../../components/op-capacities-step-edition-mode/op-capacities-step-edition-mode.service';\nimport { OperationsCapacityRetStoreService } from './store/operations-capacity-ret-store.service';\nimport { CONCAT_PATH } from '@parameters/concat-router-path.parameter';\n\n@Injectable()\nexport class OperationsCapacityRetService implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private _operationsCapacityRetStore: OperationsCapacityRetStoreService,\n    private _opCapacitiesStepGroupOrLocal: OpCapacitiesStepGroupOrLocalService,\n    private _opCapacitiesStepEditionMode: OpCapacitiesStepEditionModeService,\n    private _router: Router,\n  ) {\n    this.updateWhenSaveOrCancelService();\n  }\n\n  updateWhenSaveOrCancelService() {\n    const subscription = combineLatest([\n      this._operationsCapacityRetStore.operationsCapacityRetCancel$,\n      this._operationsCapacityRetStore.operationsCapacityRetSave$\n    ])\n      .subscribe(([save, cancel]) => {\n        if (save || cancel) {\n          this._router.navigate([CONCAT_PATH.operationCapacities]);\n        }\n      });\n\n    this.subscriptions.push(subscription);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n  set serviceQueryParams(serviceQueryParams: IOpCapacitiesServiceTypeQueryParams) {\n    if (serviceQueryParams.groupOrLocal) {\n      this._opCapacitiesStepGroupOrLocal.defaultGroupOrLocalTabSelection = serviceQueryParams.groupOrLocal;\n    }\n    if (serviceQueryParams.groupOrLocal && serviceQueryParams.localCode) {\n      this._opCapacitiesStepGroupOrLocal.defaultGroupOrLocalSelection = {fulfillmentCenterCode: serviceQueryParams.localCode} as ICustomSelectOption;\n      this._opCapacitiesStepGroupOrLocal.defaultGroupOrLocalSelectionSaved = true;\n    }\n    if (serviceQueryParams.groupOrLocal && serviceQueryParams.localCode && serviceQueryParams.editionMode) {\n      this._opCapacitiesStepEditionMode.defaultEditionModeSelection = serviceQueryParams.editionMode;\n      this._opCapacitiesStepEditionMode.defaultEditionModeSelectionSaved = true;\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_operationsCapacityRetStore",
                        "type": "OperationsCapacityRetStoreService"
                    },
                    {
                        "name": "_opCapacitiesStepGroupOrLocal",
                        "type": "OpCapacitiesStepGroupOrLocalService"
                    },
                    {
                        "name": "_opCapacitiesStepEditionMode",
                        "type": "OpCapacitiesStepEditionModeService"
                    },
                    {
                        "name": "_router",
                        "type": "Router"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "_operationsCapacityRetStore",
                        "type": "OperationsCapacityRetStoreService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_opCapacitiesStepGroupOrLocal",
                        "type": "OpCapacitiesStepGroupOrLocalService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_opCapacitiesStepEditionMode",
                        "type": "OpCapacitiesStepEditionModeService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "serviceQueryParams": {
                    "name": "serviceQueryParams",
                    "setSignature": {
                        "name": "serviceQueryParams",
                        "type": "void",
                        "args": [
                            {
                                "name": "serviceQueryParams",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 42,
                        "jsdoctags": [
                            {
                                "name": "serviceQueryParams",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "OperationsCapacityRetStoreService",
            "id": "injectable-OperationsCapacityRetStoreService-40e4cacdce8935a162b0349b01016749",
            "file": "src/app/business/operations/views/operations-capacities/views/operations-capacity-ret/store/operations-capacity-ret-store.service.ts",
            "properties": [
                {
                    "name": "editionModeSelection",
                    "type": "ECapacitiesStepEditionMode",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "groupOrLocalSelection",
                    "type": "ICustomSelectOption",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "groupOrLocalTabSelection",
                    "type": "ECapacityStepGroupOrLocal",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "opCapacityRetCancelSubject",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "opCapacityRetSaveSubject",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "retCapacityId",
                    "defaultValue": "ECapacitiesServiceType.ret",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "retCapacitySelection",
                    "type": "ICapacityStepCapacityTableSegments",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "retChannel",
                    "defaultValue": "EChannel.digital",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "subscriptions",
                    "defaultValue": "[]",
                    "type": "Subscription[]",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "capacityRetSaveError",
                    "args": [
                        {
                            "name": "error",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 249,
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "capacityRetSaveSuccess",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 241
                },
                {
                    "name": "editionModeActions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "description": "<p>Step 2: Edition Mode</p>\n"
                },
                {
                    "name": "editionModeAndCapacity",
                    "args": [
                        {
                            "name": "capacitiesServiceType",
                            "type": "CapacitiesServiceType"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "jsdoctags": [
                        {
                            "name": "capacitiesServiceType",
                            "type": "CapacitiesServiceType",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "editionModeAndCapacityError",
                    "args": [
                        {
                            "name": "error",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 166,
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "editionModeAndGroupOrLocal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 134
                },
                {
                    "name": "getLocalGroupList",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74
                },
                {
                    "name": "getLocalList",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82
                },
                {
                    "name": "groupOrLocalActions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90
                },
                {
                    "name": "groupOrLocalTab",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "description": "<p>Step 1: Local Group or Local</p>\n"
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50
                },
                {
                    "name": "retCapacityActions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 181
                },
                {
                    "name": "retCapacityFormView",
                    "args": [
                        {
                            "name": "eCapacitiesStepRetCapacity",
                            "type": "ECapacitiesStepCapacityTable"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 176,
                    "description": "<p>Step 3: RET Capacity</p>\n",
                    "jsdoctags": [
                        {
                            "name": "eCapacitiesStepRetCapacity",
                            "type": "ECapacitiesStepCapacityTable",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "saveCapacityRet",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 223
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { OperationsCapacitiesImplementService } from '../../../services/operations-capacities-implement.service';\nimport { ECapacityStepGroupOrLocal, OpCapacitiesStepGroupOrLocalService } from '../../../components/op-capacities-step-group-or-local/op-capacities-step-group-or-local.service';\nimport { ECapacitiesStepEditionMode, OpCapacitiesStepEditionModeService } from '../../../components/op-capacities-step-edition-mode/op-capacities-step-edition-mode.service';\nimport {\n  ECapacitiesStepCapacityTable,\n  OpCapacitiesStepCapacityTableService\n} from '../../../components/op-capacities-step-capacity-table/op-capacities-step-capacity-table.service';\nimport { ECapacityStepStatus } from '../../../models/operations-capacity-step-status.model';\nimport { ICustomSelectOption } from '@interfaces/custom-controls.interface';\nimport { AlertService } from '@molecules/alert/alert.service';\nimport { ICalendarUpdateRequestParams } from '@models/calendar/capacity.model';\nimport { getDaysRangeBetweenDates } from '@helpers/dates.helper';\nimport { ICapacityStepCapacityTableSegments } from '../../../components/op-capacities-step-capacity-table/models/op-capacities-step-capacity-table.model';\nimport { capacityAlertSuccessMessage } from '../../../parameters/operations-capacities-alert-message.parameter';\nimport { CapacityRangeLimit, ToCapacityStepRetCapacitySegments } from '../../../models/operations-capacity-converter.model';\nimport { ECapacitiesServiceType } from '@models/capacities/capacities-service-type.model';\nimport { EChannel } from '@models/channel/channel.model';\nimport { CapacitiesServiceType } from '../../../models/operations-capacities-responses.model';\n\n\n@Injectable()\nexport class OperationsCapacityRetStoreService implements OnDestroy {\n  private readonly retCapacityId = ECapacitiesServiceType.ret;\n  private readonly retChannel = EChannel.digital;\n\n  private subscriptions: Subscription[] = [];\n  private opCapacityRetCancelSubject = new BehaviorSubject<boolean>(false);\n  private opCapacityRetSaveSubject = new BehaviorSubject<boolean>(false);\n\n  private groupOrLocalTabSelection: ECapacityStepGroupOrLocal;\n  private groupOrLocalSelection: ICustomSelectOption;\n  private editionModeSelection: ECapacitiesStepEditionMode;\n  private retCapacitySelection: ICapacityStepCapacityTableSegments;\n\n  constructor(\n    private _operationsCapacityImplement: OperationsCapacitiesImplementService,\n    private _opCapacitiesStepGroupOrLocal: OpCapacitiesStepGroupOrLocalService,\n    private _opCapacitiesStepEditionMode: OpCapacitiesStepEditionModeService,\n    private _opCapacitiesStepRetCapacity: OpCapacitiesStepCapacityTableService,\n    private  _alertService: AlertService,\n  ) {\n    this.groupOrLocalTab();\n    this.groupOrLocalActions();\n    this.editionModeActions();\n    this.retCapacityActions();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n  /**\n   * Step 1: Local Group or Local\n   */\n\n  groupOrLocalTab() {\n    const subscription = this._opCapacitiesStepGroupOrLocal.groupOrLocalTab$\n      .subscribe((groupOrLocal: ECapacityStepGroupOrLocal) => {\n        this.groupOrLocalTabSelection = groupOrLocal;\n        switch (groupOrLocal) {\n          case ECapacityStepGroupOrLocal.local:\n            this.getLocalList();\n            break;\n          case ECapacityStepGroupOrLocal.group:\n            this.getLocalGroupList();\n            break;\n        }\n      });\n    this.subscriptions.push(subscription);\n  }\n\n  getLocalGroupList() {\n    const subscription = this._operationsCapacityImplement.getLocalGroupImplements$(this.retCapacityId)\n      .subscribe((stores: ICustomSelectOption[]) => {\n        this._opCapacitiesStepGroupOrLocal.groupOrLocalList = stores;\n      });\n    this.subscriptions.push(subscription);\n  }\n\n  getLocalList() {\n    const subscription = this._operationsCapacityImplement.getLocalByServiceTypeImplement$(this.retCapacityId)\n      .subscribe((stores: ICustomSelectOption[]) => {\n        this._opCapacitiesStepGroupOrLocal.groupOrLocalList = stores;\n      });\n    this.subscriptions.push(subscription);\n  }\n\n  groupOrLocalActions() {\n    const subscriptionSave = this._opCapacitiesStepGroupOrLocal.groupOrLocalSave$\n      .subscribe((local: ICustomSelectOption) => {\n        this.groupOrLocalSelection = local;\n        this._opCapacitiesStepEditionMode.editionModeResetStepStatus = true;\n        this._opCapacitiesStepRetCapacity.capacityTableResetStepStatus = true;\n        this._opCapacitiesStepEditionMode.editionModeStepStatus = ECapacityStepStatus.open;\n        this._opCapacitiesStepRetCapacity.capacityTableStepStatus = ECapacityStepStatus.disabled;\n      });\n\n    const subscriptionCancel = this._opCapacitiesStepGroupOrLocal.groupOrLocalCancel$\n      .subscribe(() => {\n        this.operationsCapacityRetCancel = true;\n      });\n    this.subscriptions.push(subscriptionSave, subscriptionCancel);\n  }\n\n\n  /**\n   * Step 2: Edition Mode\n   */\n\n  editionModeActions() {\n    const subscriptionSave = this._opCapacitiesStepEditionMode.editionModeSave$\n      .subscribe((editionMode: ECapacitiesStepEditionMode) => {\n        this.editionModeSelection = editionMode;\n        this._opCapacitiesStepRetCapacity.capacityTableResetStepStatus = true;\n        switch (editionMode) {\n          case ECapacitiesStepEditionMode.calendar:\n            this.editionModeAndGroupOrLocal();\n            break;\n          case ECapacitiesStepEditionMode.default:\n            this.editionModeAndGroupOrLocal();\n            break;\n        }\n      });\n\n    const subscriptionCancel = this._opCapacitiesStepEditionMode.editionModeCancel$\n      .subscribe(() => {\n        this.operationsCapacityRetCancel = true;\n      });\n    this.subscriptions.push(subscriptionSave, subscriptionCancel);\n  }\n\n  editionModeAndGroupOrLocal() {\n    switch (this.groupOrLocalTabSelection) {\n      case ECapacityStepGroupOrLocal.local:\n        this._operationsCapacityImplement.getTypeOperationImplements$(this.editionModeSelection, this.groupOrLocalSelection, this.retCapacityId)\n          .subscribe(\n            (data) => this.editionModeAndCapacity(data),\n            (error) => this.editionModeAndCapacityError(error));\n        break;\n      case ECapacityStepGroupOrLocal.group:\n        this._operationsCapacityImplement.getTypeOperationGroupImplements$(this.editionModeSelection, this.groupOrLocalSelection, this.retCapacityId)\n          .subscribe(\n            (data) => this.editionModeAndCapacity(data),\n            (error) => this.editionModeAndCapacityError(error));\n        break;\n    }\n  }\n\n  editionModeAndCapacity(capacitiesServiceType: CapacitiesServiceType) {\n    this._opCapacitiesStepRetCapacity.capacityTableRangeLimit = new CapacityRangeLimit(capacitiesServiceType);\n    this._opCapacitiesStepRetCapacity.capacityTableSegments = new ToCapacityStepRetCapacitySegments(capacitiesServiceType);\n    this._opCapacitiesStepRetCapacity.capacityTableStepStatus = ECapacityStepStatus.open;\n\n    switch (this.editionModeSelection) {\n      case ECapacitiesStepEditionMode.calendar:\n        this.retCapacityFormView(ECapacitiesStepCapacityTable.daysRange);\n        break;\n      case ECapacitiesStepEditionMode.default:\n        this.retCapacityFormView(ECapacitiesStepCapacityTable.hourlyCapacity);\n        break;\n    }\n  }\n\n  editionModeAndCapacityError(error) {\n    const message = error ? error.message || 'Error' : 'Error';\n    this._alertService.alertError(message);\n    this._opCapacitiesStepEditionMode.editionModeResetStepStatus = true;\n  }\n\n  /**\n   * Step 3: RET Capacity\n   */\n\n  retCapacityFormView(eCapacitiesStepRetCapacity: ECapacitiesStepCapacityTable) {\n    this._opCapacitiesStepRetCapacity.capacityTableFormView = eCapacitiesStepRetCapacity;\n  }\n\n\n  retCapacityActions() {\n    const subscriptionSave = this._opCapacitiesStepRetCapacity.capacityTableSave$\n      .subscribe((retCapacitySegments: ICapacityStepCapacityTableSegments) => {\n        this.retCapacitySelection = retCapacitySegments;\n        this._opCapacitiesStepGroupOrLocal.groupOrLocalStepStatus = ECapacityStepStatus.disabled;\n        this._opCapacitiesStepEditionMode.editionModeStepStatus = ECapacityStepStatus.disabled;\n        this.saveCapacityRet();\n      });\n\n    const subscriptionCancel = this._opCapacitiesStepRetCapacity.capacityTableCancel$\n      .subscribe(() => {\n        this.operationsCapacityRetCancel = true;\n      });\n    this.subscriptions.push(subscriptionSave, subscriptionCancel);\n  }\n\n\n  /**\n   * Save Capacity RET\n   */\n  get capacityRetRequest() {\n    const request = {} as ICalendarUpdateRequestParams;\n    request.serviceTypeCode = this.retCapacityId;\n    request.channel = this.retChannel;\n    request.fulfillmentCenterCode = this.groupOrLocalSelection.fulfillmentCenterCode;\n    request.quantities = this.retCapacitySelection?.capacitySegmentList ?\n      this.retCapacitySelection.capacitySegmentList\n        .map(segment => segment.segmentCapacity || 0).join(',') : '';\n    request.hours = this.retCapacitySelection?.capacitySegmentList ?\n      this.retCapacitySelection.capacitySegmentList\n        .map(segment => segment.segmentValue || '').join(',') : '';\n    if (this.editionModeSelection === ECapacitiesStepEditionMode.calendar && this.retCapacitySelection?.capacityRange) {\n      request.days = getDaysRangeBetweenDates(\n        this.retCapacitySelection.capacityRange.endDate,\n        this.retCapacitySelection.capacityRange.startDate);\n    }\n    if (this.groupOrLocalTabSelection === ECapacityStepGroupOrLocal.group) {\n      request.filter = ECapacityStepGroupOrLocal.group;\n    }\n    return request;\n  }\n\n  saveCapacityRet() {\n    const capacityRetRequest = this.capacityRetRequest;\n    switch (this.editionModeSelection) {\n      case ECapacitiesStepEditionMode.default:\n        this._operationsCapacityImplement.patchCalendarUpdateClient$(capacityRetRequest)\n          .subscribe(\n            () => this.capacityRetSaveSuccess(),\n            (error) => this.capacityRetSaveError(error));\n        break;\n      case ECapacitiesStepEditionMode.calendar:\n        this._operationsCapacityImplement.patchCalendarRangeUpdateClient$(capacityRetRequest)\n          .subscribe(\n            () => this.capacityRetSaveSuccess(),\n            (error) => this.capacityRetSaveError(error));\n        break;\n    }\n  }\n\n  capacityRetSaveSuccess() {\n    const message = capacityAlertSuccessMessage(\n      'RET',\n      `${this.groupOrLocalSelection.fulfillmentCenterCode} ${this.groupOrLocalSelection.text}`);\n    this._alertService.alertSuccess(message);\n    this.operationsCapacityRetSave = true;\n  }\n\n  capacityRetSaveError(error) {\n    const message = error && error.message ? error.message : 'Hubo un error';\n    this._alertService.alertError(message);\n\n    this._opCapacitiesStepRetCapacity.capacityTableStepStatus = ECapacityStepStatus.disabled;\n    this._opCapacitiesStepEditionMode.editionModeStepStatus = ECapacityStepStatus.disabled;\n    this._opCapacitiesStepGroupOrLocal.groupOrLocalStepStatus = ECapacityStepStatus.open;\n  }\n\n\n  /**\n   * Store Actions\n   */\n\n\n  get operationsCapacityRetSave$(): Observable<boolean> {\n    return this.opCapacityRetSaveSubject.asObservable();\n  }\n\n  set operationsCapacityRetSave(retSave: boolean) {\n    this.opCapacityRetSaveSubject.next(retSave);\n  }\n\n  get operationsCapacityRetCancel$(): Observable<boolean> {\n    return this.opCapacityRetCancelSubject.asObservable();\n  }\n\n  set operationsCapacityRetCancel(retCancel: boolean) {\n    this.opCapacityRetCancelSubject.next(retCancel);\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_operationsCapacityImplement",
                        "type": "OperationsCapacitiesImplementService"
                    },
                    {
                        "name": "_opCapacitiesStepGroupOrLocal",
                        "type": "OpCapacitiesStepGroupOrLocalService"
                    },
                    {
                        "name": "_opCapacitiesStepEditionMode",
                        "type": "OpCapacitiesStepEditionModeService"
                    },
                    {
                        "name": "_opCapacitiesStepRetCapacity",
                        "type": "OpCapacitiesStepCapacityTableService"
                    },
                    {
                        "name": "_alertService",
                        "type": "AlertService"
                    }
                ],
                "line": 35,
                "jsdoctags": [
                    {
                        "name": "_operationsCapacityImplement",
                        "type": "OperationsCapacitiesImplementService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_opCapacitiesStepGroupOrLocal",
                        "type": "OpCapacitiesStepGroupOrLocalService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_opCapacitiesStepEditionMode",
                        "type": "OpCapacitiesStepEditionModeService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_opCapacitiesStepRetCapacity",
                        "type": "OpCapacitiesStepCapacityTableService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_alertService",
                        "type": "AlertService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "capacityRetRequest": {
                    "name": "capacityRetRequest",
                    "getSignature": {
                        "name": "capacityRetRequest",
                        "type": "",
                        "returnType": "",
                        "line": 201,
                        "description": "<p>Save Capacity RET</p>\n"
                    }
                },
                "operationsCapacityRetSave$": {
                    "name": "operationsCapacityRetSave$",
                    "getSignature": {
                        "name": "operationsCapacityRetSave$",
                        "type": "",
                        "returnType": "Observable<boolean>",
                        "line": 264,
                        "description": "<p>Store Actions</p>\n"
                    }
                },
                "operationsCapacityRetSave": {
                    "name": "operationsCapacityRetSave",
                    "setSignature": {
                        "name": "operationsCapacityRetSave",
                        "type": "void",
                        "args": [
                            {
                                "name": "retSave",
                                "type": "boolean"
                            }
                        ],
                        "returnType": "void",
                        "line": 268,
                        "jsdoctags": [
                            {
                                "name": "retSave",
                                "type": "boolean",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "operationsCapacityRetCancel$": {
                    "name": "operationsCapacityRetCancel$",
                    "getSignature": {
                        "name": "operationsCapacityRetCancel$",
                        "type": "",
                        "returnType": "Observable<boolean>",
                        "line": 272
                    }
                },
                "operationsCapacityRetCancel": {
                    "name": "operationsCapacityRetCancel",
                    "setSignature": {
                        "name": "operationsCapacityRetCancel",
                        "type": "void",
                        "args": [
                            {
                                "name": "retCancel",
                                "type": "boolean"
                            }
                        ],
                        "returnType": "void",
                        "line": 276,
                        "jsdoctags": [
                            {
                                "name": "retCancel",
                                "type": "boolean",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "OperationsCapacityScheduledService",
            "id": "injectable-OperationsCapacityScheduledService-328a39926bf8f4860ee1858a0dbbd07f",
            "file": "src/app/business/operations/views/operations-capacities/views/operations-capacity-scheduled/operations-capacity-scheduled.service.ts",
            "properties": [
                {
                    "name": "subscriptions",
                    "defaultValue": "[]",
                    "type": "Subscription[]",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38
                },
                {
                    "name": "updateWhenSaveOrCancelService",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable, OnDestroy } from '@angular/core';\nimport { combineLatest, Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { IOpCapacitiesServiceTypeQueryParams } from '../../models/operations-capacities-service-type-query-params.model';\nimport { OpCapacitiesStepGroupOrLocalService } from '../../components/op-capacities-step-group-or-local/op-capacities-step-group-or-local.service';\nimport { ICustomSelectOption } from '@interfaces/custom-controls.interface';\nimport { OpCapacitiesStepEditionModeService } from '../../components/op-capacities-step-edition-mode/op-capacities-step-edition-mode.service';\nimport { OperationsCapacityScheduledStoreService } from './store/operations-capacity-scheduled-store.service';\nimport { CONCAT_PATH } from '@parameters/concat-router-path.parameter';\n\n@Injectable()\nexport class OperationsCapacityScheduledService implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private _operationsCapacityScheduledStore: OperationsCapacityScheduledStoreService,\n    private _opCapacitiesStepGroupOrLocal: OpCapacitiesStepGroupOrLocalService,\n    private _opCapacitiesStepEditionMode: OpCapacitiesStepEditionModeService,\n    private _router: Router,\n  ) {\n    this.updateWhenSaveOrCancelService();\n  }\n\n  updateWhenSaveOrCancelService() {\n    const subscription = combineLatest([\n      this._operationsCapacityScheduledStore.operationsCapacityScheduledCancel$,\n      this._operationsCapacityScheduledStore.operationsCapacityScheduledSave$\n    ])\n      .subscribe(([save, cancel]) => {\n        if (save || cancel) {\n          this._router.navigate([CONCAT_PATH.operationCapacities]);\n        }\n      });\n\n    this.subscriptions.push(subscription);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n  set serviceQueryParams(serviceQueryParams: IOpCapacitiesServiceTypeQueryParams) {\n    if (serviceQueryParams.groupOrLocal) {\n      this._opCapacitiesStepGroupOrLocal.defaultGroupOrLocalTabSelection = serviceQueryParams.groupOrLocal;\n    }\n    if (serviceQueryParams.groupOrLocal && serviceQueryParams.localCode) {\n      this._opCapacitiesStepGroupOrLocal.defaultGroupOrLocalSelection = {fulfillmentCenterCode: serviceQueryParams.localCode} as ICustomSelectOption;\n      this._opCapacitiesStepGroupOrLocal.defaultGroupOrLocalSelectionSaved = true;\n    }\n    if (serviceQueryParams.groupOrLocal && serviceQueryParams.localCode && serviceQueryParams.editionMode) {\n      this._opCapacitiesStepEditionMode.defaultEditionModeSelection = serviceQueryParams.editionMode;\n      this._opCapacitiesStepEditionMode.defaultEditionModeSelectionSaved = true;\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_operationsCapacityScheduledStore",
                        "type": "OperationsCapacityScheduledStoreService"
                    },
                    {
                        "name": "_opCapacitiesStepGroupOrLocal",
                        "type": "OpCapacitiesStepGroupOrLocalService"
                    },
                    {
                        "name": "_opCapacitiesStepEditionMode",
                        "type": "OpCapacitiesStepEditionModeService"
                    },
                    {
                        "name": "_router",
                        "type": "Router"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "_operationsCapacityScheduledStore",
                        "type": "OperationsCapacityScheduledStoreService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_opCapacitiesStepGroupOrLocal",
                        "type": "OpCapacitiesStepGroupOrLocalService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_opCapacitiesStepEditionMode",
                        "type": "OpCapacitiesStepEditionModeService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "serviceQueryParams": {
                    "name": "serviceQueryParams",
                    "setSignature": {
                        "name": "serviceQueryParams",
                        "type": "void",
                        "args": [
                            {
                                "name": "serviceQueryParams",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 42,
                        "jsdoctags": [
                            {
                                "name": "serviceQueryParams",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "OperationsCapacityScheduledStoreService",
            "id": "injectable-OperationsCapacityScheduledStoreService-e28213954ba0b1757ec59bb8529008c0",
            "file": "src/app/business/operations/views/operations-capacities/views/operations-capacity-scheduled/store/operations-capacity-scheduled-store.service.ts",
            "properties": [
                {
                    "name": "editionModeSelection",
                    "type": "ECapacitiesStepEditionMode",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "groupOrLocalSelection",
                    "type": "ICustomSelectOption",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "groupOrLocalTabSelection",
                    "type": "ECapacityStepGroupOrLocal",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "opCapacityScheduledCancelSubject",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "opCapacityScheduledSaveSubject",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "scheduledCapacityId",
                    "defaultValue": "ECapacitiesServiceType.scheduled",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "scheduledCapacitySelection",
                    "type": "ICapacityStepCapacityTableSegments",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "scheduledChannel",
                    "defaultValue": "EChannel.digital",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "subscriptions",
                    "defaultValue": "[]",
                    "type": "Subscription[]",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "capacityScheduledSaveError",
                    "args": [
                        {
                            "name": "error",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 257,
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "capacityScheduledSaveSuccess",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 249
                },
                {
                    "name": "editionModeActions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "description": "<p>Step 2: Edition Mode</p>\n"
                },
                {
                    "name": "editionModeAndCapacity",
                    "args": [
                        {
                            "name": "capacitiesServiceType",
                            "type": "CapacitiesServiceType"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 159,
                    "jsdoctags": [
                        {
                            "name": "capacitiesServiceType",
                            "type": "CapacitiesServiceType",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "editionModeAndCapacityError",
                    "args": [
                        {
                            "name": "error",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 174,
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "editionModeAndGroupOrLocal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 134
                },
                {
                    "name": "getLocalGroupList",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74
                },
                {
                    "name": "getLocalList",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82
                },
                {
                    "name": "groupOrLocalActions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90
                },
                {
                    "name": "groupOrLocalTab",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "description": "<p>Step 1: Local Group or Local</p>\n"
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50
                },
                {
                    "name": "saveCapacityScheduled",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 231
                },
                {
                    "name": "scheduledCapacityActions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 189
                },
                {
                    "name": "scheduledCapacityFormView",
                    "args": [
                        {
                            "name": "eCapacitiesStepScheduledCapacity",
                            "type": "ECapacitiesStepCapacityTable"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 184,
                    "description": "<p>Step 3: Schedule Capacity</p>\n",
                    "jsdoctags": [
                        {
                            "name": "eCapacitiesStepScheduledCapacity",
                            "type": "ECapacitiesStepCapacityTable",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { OperationsCapacitiesImplementService } from '../../../services/operations-capacities-implement.service';\nimport { ECapacityStepGroupOrLocal, OpCapacitiesStepGroupOrLocalService } from '../../../components/op-capacities-step-group-or-local/op-capacities-step-group-or-local.service';\nimport { ECapacitiesStepEditionMode, OpCapacitiesStepEditionModeService } from '../../../components/op-capacities-step-edition-mode/op-capacities-step-edition-mode.service';\nimport {\n  ECapacitiesStepCapacityTable,\n  OpCapacitiesStepCapacityTableService\n} from '../../../components/op-capacities-step-capacity-table/op-capacities-step-capacity-table.service';\nimport { ECapacityStepStatus } from '../../../models/operations-capacity-step-status.model';\nimport { ICustomSelectOption } from '@interfaces/custom-controls.interface';\nimport { AlertService } from '@molecules/alert/alert.service';\nimport { CapacityRangeLimit, ToCapacityStepScheduledCapacitySegments } from '../../../models/operations-capacity-converter.model';\nimport { ICalendarUpdateRequestParams } from '@models/calendar/capacity.model';\nimport { getDaysRangeBetweenDates } from '@helpers/dates.helper';\nimport { ICapacityStepCapacityTableSegments } from '../../../components/op-capacities-step-capacity-table/models/op-capacities-step-capacity-table.model';\nimport { capacityAlertSuccessMessage } from '../../../parameters/operations-capacities-alert-message.parameter';\nimport { ECapacitiesServiceType } from '@models/capacities/capacities-service-type.model';\nimport { EChannel } from '@models/channel/channel.model';\nimport { CapacitiesServiceType } from '../../../models/operations-capacities-responses.model';\n\n\n@Injectable()\nexport class OperationsCapacityScheduledStoreService implements OnDestroy {\n  private readonly scheduledCapacityId = ECapacitiesServiceType.scheduled;\n  private readonly scheduledChannel = EChannel.digital;\n\n  private subscriptions: Subscription[] = [];\n  private opCapacityScheduledCancelSubject = new BehaviorSubject<boolean>(false);\n  private opCapacityScheduledSaveSubject = new BehaviorSubject<boolean>(false);\n\n  private groupOrLocalTabSelection: ECapacityStepGroupOrLocal;\n  private groupOrLocalSelection: ICustomSelectOption;\n  private editionModeSelection: ECapacitiesStepEditionMode;\n  private scheduledCapacitySelection: ICapacityStepCapacityTableSegments;\n\n  constructor(\n    private _operationsCapacityImplement: OperationsCapacitiesImplementService,\n    private _opCapacitiesStepGroupOrLocal: OpCapacitiesStepGroupOrLocalService,\n    private _opCapacitiesStepEditionMode: OpCapacitiesStepEditionModeService,\n    private _opCapacitiesStepScheduledCapacity: OpCapacitiesStepCapacityTableService,\n    private  _alertService: AlertService,\n  ) {\n    this.groupOrLocalTab();\n    this.groupOrLocalActions();\n    this.editionModeActions();\n    this.scheduledCapacityActions();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n  /**\n   * Step 1: Local Group or Local\n   */\n\n  groupOrLocalTab() {\n    const subscription = this._opCapacitiesStepGroupOrLocal.groupOrLocalTab$\n      .subscribe((groupOrLocal: ECapacityStepGroupOrLocal) => {\n        this.groupOrLocalTabSelection = groupOrLocal;\n        switch (groupOrLocal) {\n          case ECapacityStepGroupOrLocal.local:\n            this.getLocalList();\n            break;\n          case ECapacityStepGroupOrLocal.group:\n            this.getLocalGroupList();\n            break;\n        }\n      });\n    this.subscriptions.push(subscription);\n  }\n\n  getLocalGroupList() {\n    const subscription = this._operationsCapacityImplement.getLocalGroupImplements$(this.scheduledCapacityId)\n      .subscribe((stores: ICustomSelectOption[]) => {\n        this._opCapacitiesStepGroupOrLocal.groupOrLocalList = stores;\n      });\n    this.subscriptions.push(subscription);\n  }\n\n  getLocalList() {\n    const subscription = this._operationsCapacityImplement.getLocalByServiceTypeImplement$(this.scheduledCapacityId)\n      .subscribe((stores: ICustomSelectOption[]) => {\n        this._opCapacitiesStepGroupOrLocal.groupOrLocalList = stores;\n      });\n    this.subscriptions.push(subscription);\n  }\n\n  groupOrLocalActions() {\n    const subscriptionSave = this._opCapacitiesStepGroupOrLocal.groupOrLocalSave$\n      .subscribe((local: ICustomSelectOption) => {\n        this.groupOrLocalSelection = local;\n        this._opCapacitiesStepEditionMode.editionModeResetStepStatus = true;\n        this._opCapacitiesStepScheduledCapacity.capacityTableResetStepStatus = true;\n        this._opCapacitiesStepEditionMode.editionModeStepStatus = ECapacityStepStatus.open;\n        this._opCapacitiesStepScheduledCapacity.capacityTableStepStatus = ECapacityStepStatus.disabled;\n      });\n\n    const subscriptionCancel = this._opCapacitiesStepGroupOrLocal.groupOrLocalCancel$\n      .subscribe(() => {\n        this.operationsCapacityScheduledCancel = true;\n      });\n    this.subscriptions.push(subscriptionSave, subscriptionCancel);\n  }\n\n\n  /**\n   * Step 2: Edition Mode\n   */\n\n  editionModeActions() {\n    const subscriptionSave = this._opCapacitiesStepEditionMode.editionModeSave$\n      .subscribe((editionMode: ECapacitiesStepEditionMode) => {\n        this.editionModeSelection = editionMode;\n        this._opCapacitiesStepScheduledCapacity.capacityTableResetStepStatus = true;\n        switch (editionMode) {\n          case ECapacitiesStepEditionMode.calendar:\n            this.editionModeAndGroupOrLocal();\n            break;\n          case ECapacitiesStepEditionMode.default:\n            this.editionModeAndGroupOrLocal();\n            break;\n        }\n      });\n\n    const subscriptionCancel = this._opCapacitiesStepEditionMode.editionModeCancel$\n      .subscribe(() => {\n        this.operationsCapacityScheduledCancel = true;\n      });\n    this.subscriptions.push(subscriptionSave, subscriptionCancel);\n  }\n\n  editionModeAndGroupOrLocal() {\n    switch (this.groupOrLocalTabSelection) {\n      case ECapacityStepGroupOrLocal.local:\n        this._operationsCapacityImplement.getTypeOperationImplements$(\n          this.editionModeSelection,\n          this.groupOrLocalSelection,\n          this.scheduledCapacityId\n        )\n          .subscribe(\n            (data) => this.editionModeAndCapacity(data),\n            (error) => this.editionModeAndCapacityError(error));\n        break;\n      case ECapacityStepGroupOrLocal.group:\n        this._operationsCapacityImplement.getTypeOperationGroupImplements$(\n          this.editionModeSelection,\n          this.groupOrLocalSelection,\n          this.scheduledCapacityId\n        )\n          .subscribe(\n            (data) => this.editionModeAndCapacity(data),\n            (error) => this.editionModeAndCapacityError(error));\n        break;\n    }\n  }\n\n  editionModeAndCapacity(capacitiesServiceType: CapacitiesServiceType) {\n    this._opCapacitiesStepScheduledCapacity.capacityTableRangeLimit = new CapacityRangeLimit(capacitiesServiceType);\n    this._opCapacitiesStepScheduledCapacity.capacityTableSegments = new ToCapacityStepScheduledCapacitySegments(capacitiesServiceType);\n    this._opCapacitiesStepScheduledCapacity.capacityTableStepStatus = ECapacityStepStatus.open;\n\n    switch (this.editionModeSelection) {\n      case ECapacitiesStepEditionMode.calendar:\n        this.scheduledCapacityFormView(ECapacitiesStepCapacityTable.daysRange);\n        break;\n      case ECapacitiesStepEditionMode.default:\n        this.scheduledCapacityFormView(ECapacitiesStepCapacityTable.hourlyCapacity);\n        break;\n    }\n  }\n\n  editionModeAndCapacityError(error) {\n    const message = error ? error.message || 'Error' : 'Error';\n    this._alertService.alertError(message);\n    this._opCapacitiesStepEditionMode.editionModeResetStepStatus = true;\n  }\n\n  /**\n   * Step 3: Schedule Capacity\n   */\n\n  scheduledCapacityFormView(eCapacitiesStepScheduledCapacity: ECapacitiesStepCapacityTable) {\n    this._opCapacitiesStepScheduledCapacity.capacityTableFormView = eCapacitiesStepScheduledCapacity;\n  }\n\n\n  scheduledCapacityActions() {\n    const subscriptionSave = this._opCapacitiesStepScheduledCapacity.capacityTableSave$\n      .subscribe((scheduledCapacitySegments: ICapacityStepCapacityTableSegments) => {\n        this.scheduledCapacitySelection = scheduledCapacitySegments;\n        this._opCapacitiesStepGroupOrLocal.groupOrLocalStepStatus = ECapacityStepStatus.disabled;\n        this._opCapacitiesStepEditionMode.editionModeStepStatus = ECapacityStepStatus.disabled;\n        this.saveCapacityScheduled();\n      });\n\n    const subscriptionCancel = this._opCapacitiesStepScheduledCapacity.capacityTableCancel$\n      .subscribe(() => {\n        this.operationsCapacityScheduledCancel = true;\n      });\n    this.subscriptions.push(subscriptionSave, subscriptionCancel);\n  }\n\n\n  /**\n   * Save Capacity Scheduled\n   */\n  get capacityScheduledRequest() {\n    const request = {} as ICalendarUpdateRequestParams;\n    request.serviceTypeCode = this.scheduledCapacityId;\n    request.channel = this.scheduledChannel;\n    request.fulfillmentCenterCode = this.groupOrLocalSelection.fulfillmentCenterCode;\n    request.quantities = this.scheduledCapacitySelection?.capacitySegmentList ?\n      this.scheduledCapacitySelection.capacitySegmentList\n        .map(segment => segment.segmentCapacity || 0).join(',') : '';\n    request.hours = this.scheduledCapacitySelection?.capacitySegmentList ?\n      this.scheduledCapacitySelection.capacitySegmentList\n        .map(segment => segment.segmentValue || '').join(',') : '';\n    if (this.editionModeSelection === ECapacitiesStepEditionMode.calendar && this.scheduledCapacitySelection?.capacityRange) {\n      request.days = getDaysRangeBetweenDates(\n        this.scheduledCapacitySelection.capacityRange.endDate,\n        this.scheduledCapacitySelection.capacityRange.startDate);\n    }\n    if (this.groupOrLocalTabSelection === ECapacityStepGroupOrLocal.group) {\n      request.filter = ECapacityStepGroupOrLocal.group;\n    }\n    return request;\n  }\n\n  saveCapacityScheduled() {\n    const capacityScheduledRequest = this.capacityScheduledRequest;\n    switch (this.editionModeSelection) {\n      case ECapacitiesStepEditionMode.default:\n        this._operationsCapacityImplement.patchCalendarUpdateClient$(capacityScheduledRequest)\n          .subscribe(\n            () => this.capacityScheduledSaveSuccess(),\n            (error) => this.capacityScheduledSaveError(error));\n        break;\n      case ECapacitiesStepEditionMode.calendar:\n        this._operationsCapacityImplement.patchCalendarRangeUpdateClient$(capacityScheduledRequest)\n          .subscribe(\n            () => this.capacityScheduledSaveSuccess(),\n            (error) => this.capacityScheduledSaveError(error));\n        break;\n    }\n  }\n\n  capacityScheduledSaveSuccess() {\n    const message = capacityAlertSuccessMessage(\n      'Programadas',\n      `${this.groupOrLocalSelection.fulfillmentCenterCode} ${this.groupOrLocalSelection.text}`);\n    this._alertService.alertSuccess(message);\n    this.operationsCapacityScheduledSave = true;\n  }\n\n  capacityScheduledSaveError(error) {\n    const message = error && error.message ? error.message : 'Hubo un error';\n    this._alertService.alertError(message);\n\n    this._opCapacitiesStepScheduledCapacity.capacityTableStepStatus = ECapacityStepStatus.disabled;\n    this._opCapacitiesStepEditionMode.editionModeStepStatus = ECapacityStepStatus.disabled;\n    this._opCapacitiesStepGroupOrLocal.groupOrLocalStepStatus = ECapacityStepStatus.open;\n  }\n\n\n  /**\n   * Store Actions\n   */\n\n\n  get operationsCapacityScheduledSave$(): Observable<boolean> {\n    return this.opCapacityScheduledSaveSubject.asObservable();\n  }\n\n  set operationsCapacityScheduledSave(scheduledSave: boolean) {\n    this.opCapacityScheduledSaveSubject.next(scheduledSave);\n  }\n\n  get operationsCapacityScheduledCancel$(): Observable<boolean> {\n    return this.opCapacityScheduledCancelSubject.asObservable();\n  }\n\n  set operationsCapacityScheduledCancel(scheduledCancel: boolean) {\n    this.opCapacityScheduledCancelSubject.next(scheduledCancel);\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_operationsCapacityImplement",
                        "type": "OperationsCapacitiesImplementService"
                    },
                    {
                        "name": "_opCapacitiesStepGroupOrLocal",
                        "type": "OpCapacitiesStepGroupOrLocalService"
                    },
                    {
                        "name": "_opCapacitiesStepEditionMode",
                        "type": "OpCapacitiesStepEditionModeService"
                    },
                    {
                        "name": "_opCapacitiesStepScheduledCapacity",
                        "type": "OpCapacitiesStepCapacityTableService"
                    },
                    {
                        "name": "_alertService",
                        "type": "AlertService"
                    }
                ],
                "line": 35,
                "jsdoctags": [
                    {
                        "name": "_operationsCapacityImplement",
                        "type": "OperationsCapacitiesImplementService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_opCapacitiesStepGroupOrLocal",
                        "type": "OpCapacitiesStepGroupOrLocalService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_opCapacitiesStepEditionMode",
                        "type": "OpCapacitiesStepEditionModeService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_opCapacitiesStepScheduledCapacity",
                        "type": "OpCapacitiesStepCapacityTableService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_alertService",
                        "type": "AlertService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "capacityScheduledRequest": {
                    "name": "capacityScheduledRequest",
                    "getSignature": {
                        "name": "capacityScheduledRequest",
                        "type": "",
                        "returnType": "",
                        "line": 209,
                        "description": "<p>Save Capacity Scheduled</p>\n"
                    }
                },
                "operationsCapacityScheduledSave$": {
                    "name": "operationsCapacityScheduledSave$",
                    "getSignature": {
                        "name": "operationsCapacityScheduledSave$",
                        "type": "",
                        "returnType": "Observable<boolean>",
                        "line": 272,
                        "description": "<p>Store Actions</p>\n"
                    }
                },
                "operationsCapacityScheduledSave": {
                    "name": "operationsCapacityScheduledSave",
                    "setSignature": {
                        "name": "operationsCapacityScheduledSave",
                        "type": "void",
                        "args": [
                            {
                                "name": "scheduledSave",
                                "type": "boolean"
                            }
                        ],
                        "returnType": "void",
                        "line": 276,
                        "jsdoctags": [
                            {
                                "name": "scheduledSave",
                                "type": "boolean",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "operationsCapacityScheduledCancel$": {
                    "name": "operationsCapacityScheduledCancel$",
                    "getSignature": {
                        "name": "operationsCapacityScheduledCancel$",
                        "type": "",
                        "returnType": "Observable<boolean>",
                        "line": 280
                    }
                },
                "operationsCapacityScheduledCancel": {
                    "name": "operationsCapacityScheduledCancel",
                    "setSignature": {
                        "name": "operationsCapacityScheduledCancel",
                        "type": "void",
                        "args": [
                            {
                                "name": "scheduledCancel",
                                "type": "boolean"
                            }
                        ],
                        "returnType": "void",
                        "line": 284,
                        "jsdoctags": [
                            {
                                "name": "scheduledCancel",
                                "type": "boolean",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "ProfileUpdatePasswordDialogService",
            "id": "injectable-ProfileUpdatePasswordDialogService-3e283bff049cb8a372f9214085730ccf",
            "file": "src/app/core/organisms/profile/views/profile-update-password-dialog/profile-update-password-dialog.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "openProfileUpdatePasswordDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "MatDialogRef<ProfileUpdatePasswordDialogComponent>",
                    "typeParameters": [],
                    "line": 11
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { ProfileUpdatePasswordDialogComponent } from '@organisms/profile/views/profile-update-password-dialog/profile-update-password-dialog.component';\n\n@Injectable()\nexport class ProfileUpdatePasswordDialogService {\n\n    constructor(private dialog: MatDialog) {\n    }\n\n    openProfileUpdatePasswordDialog(): MatDialogRef<ProfileUpdatePasswordDialogComponent> {\n        return this.dialog.open(ProfileUpdatePasswordDialogComponent, {\n            width: '526px',\n            minHeight: '347px'\n        });\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "MatDialog"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ProfileUserInformationDialogService",
            "id": "injectable-ProfileUserInformationDialogService-0f767bb814004746bd9751c3ae523678",
            "file": "src/app/core/organisms/profile/views/profile-user-information-dialog/profile-user-information-dialog.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "openProfileUserInformationDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "MatDialogRef<ProfileUserInformationDialogComponent>",
                    "typeParameters": [],
                    "line": 11
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { ProfileUserInformationDialogComponent } from '@organisms/profile/views/profile-user-information-dialog/profile-user-information-dialog.component';\n\n@Injectable()\nexport class ProfileUserInformationDialogService {\n\n    constructor(private dialog: MatDialog) {\n    }\n\n    openProfileUserInformationDialog(): MatDialogRef<ProfileUserInformationDialogComponent> {\n        return this.dialog.open(ProfileUserInformationDialogComponent, {\n            width: '526px',\n            minHeight: '347px'\n        });\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "MatDialog"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "RecoverPasswordCodeForm",
            "id": "injectable-RecoverPasswordCodeForm-bebafa5f0ba4f9a9d8fadb51ffdd773b",
            "file": "src/app/business/account/form/recover-password-code.form.ts",
            "properties": [
                {
                    "name": "_codeControl",
                    "defaultValue": "new CodeControl()",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "form",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        112,
                        132
                    ]
                }
            ],
            "methods": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36
                },
                {
                    "name": "resetForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32
                },
                {
                    "name": "resetFormValidators",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { CodeControl } from '../controls/code.control';\n\n@Injectable()\nexport class RecoverPasswordCodeForm implements OnDestroy {\n    private readonly form: FormGroup;\n\n    private _codeControl: FormControl = new CodeControl();\n\n    constructor(\n        private _formBuilder: FormBuilder\n    ) {\n        this.form = this._formBuilder.group({\n            code: this._codeControl,\n        });\n    }\n\n    get form$(): FormGroup {\n        return this.form;\n    }\n\n    public get codeControl(): CodeControl {\n        return this.form$.get('code') as CodeControl;\n    }\n\n\n    resetFormValidators() {\n        this.codeControl.settingValidators();\n    }\n\n    resetForm(): void {\n        this.codeControl.patchValue(null);\n    }\n\n    ngOnDestroy(): void {\n        this.resetForm();\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "form$": {
                    "name": "form$",
                    "getSignature": {
                        "name": "form$",
                        "type": "",
                        "returnType": "FormGroup",
                        "line": 19
                    }
                },
                "codeControl": {
                    "name": "codeControl",
                    "getSignature": {
                        "name": "codeControl",
                        "type": "",
                        "returnType": "CodeControl",
                        "line": 23
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "RecoverPasswordUserForm",
            "id": "injectable-RecoverPasswordUserForm-8845f8d66c65893d8c1150a7eb867283",
            "file": "src/app/business/account/form/recover-password-user.form.ts",
            "properties": [
                {
                    "name": "_usernameControl",
                    "defaultValue": "new EmailControl()",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "form",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        112,
                        132
                    ]
                }
            ],
            "methods": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35
                },
                {
                    "name": "resetForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31
                },
                {
                    "name": "resetFormValidators",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { EmailControl } from '../controls/email.control';\n\n@Injectable()\nexport class RecoverPasswordUserForm implements OnDestroy {\n    private readonly form: FormGroup;\n\n    private _usernameControl: FormControl = new EmailControl();\n\n    constructor(\n        private _formBuilder: FormBuilder\n    ) {\n        this.form = this._formBuilder.group({\n            username: this._usernameControl,\n        });\n    }\n\n    get form$(): FormGroup {\n        return this.form;\n    }\n\n    public get usernameControl(): EmailControl {\n        return this.form$.get('username') as EmailControl;\n    }\n\n    resetFormValidators() {\n        this.usernameControl.settingValidators();\n    }\n\n    resetForm(): void {\n        this.usernameControl.patchValue(null);\n    }\n\n    ngOnDestroy(): void {\n        this.resetForm();\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "form$": {
                    "name": "form$",
                    "getSignature": {
                        "name": "form$",
                        "type": "",
                        "returnType": "FormGroup",
                        "line": 19
                    }
                },
                "usernameControl": {
                    "name": "usernameControl",
                    "getSignature": {
                        "name": "usernameControl",
                        "type": "",
                        "returnType": "EmailControl",
                        "line": 23
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "RecoveryPasswordStore",
            "id": "injectable-RecoveryPasswordStore-cb23949044b2a0d40ec02759f48388ef",
            "file": "src/app/business/account/stores/recovery-password.store.ts",
            "properties": [
                {
                    "name": "_code",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_username",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32
                },
                {
                    "name": "resetStore",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable, OnDestroy } from '@angular/core';\n\n@Injectable()\nexport class RecoveryPasswordStore implements OnDestroy {\n    private _username: string;\n    private _code: string;\n\n    constructor() {\n    }\n\n    get username() {\n        return this._username;\n    }\n\n    set username(username: string) {\n        this._username = username;\n    }\n\n    get code() {\n        return this._code;\n    }\n\n    set code(code: string) {\n        this._code = code;\n    }\n\n    resetStore() {\n        this.code = null;\n        this.username = null;\n    }\n\n    ngOnDestroy() {\n        this.resetStore();\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 6
            },
            "accessors": {
                "username": {
                    "name": "username",
                    "setSignature": {
                        "name": "username",
                        "type": "void",
                        "args": [
                            {
                                "name": "username",
                                "type": "string"
                            }
                        ],
                        "returnType": "void",
                        "line": 15,
                        "jsdoctags": [
                            {
                                "name": "username",
                                "type": "string",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "username",
                        "type": "",
                        "returnType": "",
                        "line": 11
                    }
                },
                "code": {
                    "name": "code",
                    "setSignature": {
                        "name": "code",
                        "type": "void",
                        "args": [
                            {
                                "name": "code",
                                "type": "string"
                            }
                        ],
                        "returnType": "void",
                        "line": 23,
                        "jsdoctags": [
                            {
                                "name": "code",
                                "type": "string",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "code",
                        "type": "",
                        "returnType": "",
                        "line": 19
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "StorageClientService",
            "id": "injectable-StorageClientService-6960daec1c56134059b7b23ec9ab7f36",
            "file": "src/app/shared/clients/storage/storage-client.service.ts",
            "properties": [
                {
                    "name": "STORAGE_NAME_EVENT",
                    "defaultValue": "'storage'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "cleanStorage",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 23,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "getStorageItem",
                    "args": [
                        {
                            "name": "key",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 28,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeStorageItem",
                    "args": [
                        {
                            "name": "key",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 38,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setStorageItem",
                    "args": [
                        {
                            "name": "key",
                            "type": "string"
                        },
                        {
                            "name": "value",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 33,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Injectable()\nexport class StorageClientService {\n\n    private STORAGE_NAME_EVENT = 'storage';\n\n    constructor() {\n    }\n\n    public get storage(): Storage {\n        return localStorage;\n    }\n\n    public get storage$() {\n        return fromEvent<StorageEvent>(window, this.STORAGE_NAME_EVENT)\n            .pipe(\n                filter(event => event && event.storageArea === this.storage));\n    }\n\n    public cleanStorage() {\n        const {storage} = this;\n        return storage.clear();\n    }\n\n    public getStorageItem(key: string) {\n        const {storage} = this;\n        return storage.getItem(key);\n    }\n\n    public setStorageItem(key: string, value: string) {\n        const {storage} = this;\n        return storage.setItem(key, value);\n    }\n\n    public removeStorageItem(key: string) {\n        const {storage} = this;\n        return storage.removeItem(key);\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "accessors": {
                "storage": {
                    "name": "storage",
                    "getSignature": {
                        "name": "storage",
                        "type": "",
                        "returnType": "Storage",
                        "line": 13
                    }
                },
                "storage$": {
                    "name": "storage$",
                    "getSignature": {
                        "name": "storage$",
                        "type": "",
                        "returnType": "",
                        "line": 17
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "TokenStoreService",
            "id": "injectable-TokenStoreService-5813f28c16933f436adeb4a98a01a47b",
            "file": "src/app/shared/stores/token-store.service.ts",
            "properties": [
                {
                    "name": "_accessToken",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "accessTokenSubject",
                    "defaultValue": "new BehaviorSubject<string>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "STORAGE_SESSION_TOKEN",
                    "defaultValue": "'access-token'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        112,
                        132
                    ]
                }
            ],
            "methods": [
                {
                    "name": "removeAccessToken",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46
                },
                {
                    "name": "removeStoredAccessToken",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { StorageClientService } from '@clients/storage/storage-client.service';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class TokenStoreService {\n    private readonly STORAGE_SESSION_TOKEN = 'access-token';\n    private _accessToken: string;\n\n    private accessTokenSubject = new BehaviorSubject<string>(null);\n\n    constructor(private storage: StorageClientService) {\n        this._accessToken = this.storedAccessToken;\n        this.accessTokenSubject.next(this._accessToken);\n    }\n\n    private set storedAccessToken(token: string) {\n        const {storage, STORAGE_SESSION_TOKEN} = this;\n        storage.setStorageItem(STORAGE_SESSION_TOKEN, token);\n    }\n\n    private get storedAccessToken(): string {\n        const {storage, STORAGE_SESSION_TOKEN} = this;\n        return storage.getStorageItem(STORAGE_SESSION_TOKEN);\n    }\n\n    private removeStoredAccessToken(): void {\n        const {storage, STORAGE_SESSION_TOKEN} = this;\n        storage.removeStorageItem(STORAGE_SESSION_TOKEN);\n    }\n\n    get accessToken$(): Observable<string> {\n        return this.accessTokenSubject.asObservable();\n    }\n\n    get accessToken(): string {\n        return this._accessToken;\n    }\n\n    set accessToken(token: string) {\n        this._accessToken = token;\n        this.accessTokenSubject.next(token);\n        this.storedAccessToken = token;\n    }\n\n    removeAccessToken() {\n        this._accessToken = null;\n        this.accessTokenSubject.next(null);\n        this.removeStoredAccessToken();\n    }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "storage",
                        "type": "StorageClientService"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "storage",
                        "type": "StorageClientService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "storedAccessToken": {
                    "name": "storedAccessToken",
                    "setSignature": {
                        "name": "storedAccessToken",
                        "type": "void",
                        "args": [
                            {
                                "name": "token",
                                "type": "string"
                            }
                        ],
                        "returnType": "void",
                        "line": 17,
                        "jsdoctags": [
                            {
                                "name": "token",
                                "type": "string",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "storedAccessToken",
                        "type": "string",
                        "returnType": "string",
                        "line": 22
                    }
                },
                "accessToken$": {
                    "name": "accessToken$",
                    "getSignature": {
                        "name": "accessToken$",
                        "type": "",
                        "returnType": "Observable<string>",
                        "line": 32
                    }
                },
                "accessToken": {
                    "name": "accessToken",
                    "setSignature": {
                        "name": "accessToken",
                        "type": "void",
                        "args": [
                            {
                                "name": "token",
                                "type": "string"
                            }
                        ],
                        "returnType": "void",
                        "line": 40,
                        "jsdoctags": [
                            {
                                "name": "token",
                                "type": "string",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "accessToken",
                        "type": "string",
                        "returnType": "string",
                        "line": 36
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "UpdatePasswordForm",
            "id": "injectable-UpdatePasswordForm-04c97eb66ae82f887d64fe72c79c78e6",
            "file": "src/app/core/organisms/update-password-form/form/update-password.form.ts",
            "properties": [
                {
                    "name": "_confirmPasswordControl",
                    "defaultValue": "new ConfirmPasswordControl('password')",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_passwordControl",
                    "defaultValue": "new PasswordControl()",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "form",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "passwordSubscription",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47
                },
                {
                    "name": "resetForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { PasswordControl } from '../controls/password.control';\nimport { ConfirmPasswordControl } from '../controls/confirm-password.control';\nimport { Subscription } from 'rxjs';\n\n@Injectable()\nexport class UpdatePasswordForm implements OnDestroy {\n    private readonly form: FormGroup;\n\n    private _passwordControl: FormControl = new PasswordControl();\n    private _confirmPasswordControl: FormControl = new ConfirmPasswordControl('password');\n\n    private passwordSubscription: Subscription;\n\n    constructor(\n        private _formBuilder: FormBuilder\n    ) {\n        this.form = this._formBuilder.group({\n            password: this._passwordControl,\n            confirmPassword: this._confirmPasswordControl,\n        });\n\n        this.passwordSubscription = this.passwordControl.valueChanges.subscribe(() => {\n            this.confirmPasswordControl.updateValueAndValidity({onlySelf: false, emitEvent: true});\n        });\n    }\n\n    get form$(): FormGroup {\n        return this.form;\n    }\n\n    public get passwordControl(): PasswordControl {\n        return this.form$.get('password') as PasswordControl;\n    }\n\n    public get confirmPasswordControl(): ConfirmPasswordControl {\n        return this.form$.get('confirmPassword') as ConfirmPasswordControl;\n    }\n\n\n    resetForm(): void {\n        this.passwordControl.patchValue('');\n        this.confirmPasswordControl.patchValue('');\n    }\n\n    ngOnDestroy(): void {\n        this.resetForm();\n        this.passwordSubscription.unsubscribe();\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "form$": {
                    "name": "form$",
                    "getSignature": {
                        "name": "form$",
                        "type": "",
                        "returnType": "FormGroup",
                        "line": 29
                    }
                },
                "passwordControl": {
                    "name": "passwordControl",
                    "getSignature": {
                        "name": "passwordControl",
                        "type": "",
                        "returnType": "PasswordControl",
                        "line": 33
                    }
                },
                "confirmPasswordControl": {
                    "name": "confirmPasswordControl",
                    "getSignature": {
                        "name": "confirmPasswordControl",
                        "type": "",
                        "returnType": "ConfirmPasswordControl",
                        "line": 37
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "UserStoreService",
            "id": "injectable-UserStoreService-b74a08f4b1ee17770f656c8f1c74131a",
            "file": "src/app/shared/stores/user-store.service.ts",
            "properties": [
                {
                    "name": "user",
                    "type": "User",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "userSubject",
                    "defaultValue": "new BehaviorSubject<User>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "authenticated",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 36
                },
                {
                    "name": "hasRole",
                    "args": [
                        {
                            "name": "role",
                            "type": "Role"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 40,
                    "jsdoctags": [
                        {
                            "name": "role",
                            "type": "Role",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Role } from '@models/auth/role.model';\nimport { User } from '@models/auth/user.model';\nimport { TokenStoreService } from '@stores/token-store.service';\nimport { JwtDecodeToken } from '@helpers/jwt-decode.helper';\nimport { IUser } from '@interfaces/user.interface';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { CONCAT_PATH } from '@parameters/concat-router-path.parameter';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class UserStoreService {\n\n    private user: User;\n    private userSubject = new BehaviorSubject<User>(null);\n\n    constructor(\n        private tokenStore: TokenStoreService,\n        private router: Router,\n    ) {\n        this.tokenStore.accessToken$.subscribe((accessToken) => {\n            if (accessToken) {\n                this.userFromToken = accessToken;\n            } else {\n                this.user = null;\n            }\n        });\n    }\n\n    set userFromToken(accessToken: string) {\n        const tokenUser = JwtDecodeToken<IUser>(accessToken);\n        this.user = new User(tokenUser);\n        this.userSubject.next(this.user);\n    }\n\n    authenticated(): boolean {\n        return !!this.user;\n    }\n\n    hasRole(role: Role): boolean {\n        return this.authenticated() && this.user.role === role;\n    }\n\n    get currentUser(): User {\n        return this.user;\n    }\n\n    get currentUser$(): Observable<User> {\n        return this.userSubject.asObservable();\n    }\n\n    logout() {\n        this.user = null;\n        this.userSubject.next(null);\n        this.tokenStore.removeAccessToken();\n        this.router.navigate([CONCAT_PATH.login]);\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "tokenStore",
                        "type": "TokenStoreService"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "tokenStore",
                        "type": "TokenStoreService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "userFromToken": {
                    "name": "userFromToken",
                    "setSignature": {
                        "name": "userFromToken",
                        "type": "void",
                        "args": [
                            {
                                "name": "accessToken",
                                "type": "string"
                            }
                        ],
                        "returnType": "void",
                        "line": 30,
                        "jsdoctags": [
                            {
                                "name": "accessToken",
                                "type": "string",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "currentUser": {
                    "name": "currentUser",
                    "getSignature": {
                        "name": "currentUser",
                        "type": "",
                        "returnType": "User",
                        "line": 44
                    }
                },
                "currentUser$": {
                    "name": "currentUser$",
                    "getSignature": {
                        "name": "currentUser$",
                        "type": "",
                        "returnType": "Observable<User>",
                        "line": 48
                    }
                }
            },
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-a0db91bfa3b9914e9048612074084ee6",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl) as Promise<unknown>;\n  }\n\n  getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText() as Promise<string>;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Blocked",
            "id": "class-Blocked-3902643a0451058b13dfaa6ff19c913b",
            "file": "src/app/shared/models/calendar/calendar.model.ts",
            "type": "class",
            "sourceCode": "import { isArray, isObject } from '@helpers/objects-equal.helper';\n\nexport interface ICalendarRequestParams {\n  fulfillmentCenterCode: string; // D88\n  serviceTypeCode: string; // RAD, RED\n  segmentType: string; // EXPRESS\n  channel: string; // DIGITAL, CALL\n}\n\nexport interface ICalendar {\n  year: string;\n  month: string;\n  daysList: Array<IDayList>;\n  monthNumber?: number;\n  startDay?: number;\n}\n\nexport class Week {\n  monday: IDayList;\n  tuesday: IDayList;\n  wednesday: IDayList;\n  thursday: IDayList;\n  friday: IDayList;\n  saturday: IDayList;\n  sunday: IDayList;\n  constructor(monday: IDayList,\n              tuesday: IDayList,\n              wednesday: IDayList,\n              thursday: IDayList,\n              friday: IDayList,\n              saturday: IDayList,\n              sunday: IDayList) {\n    this.monday = monday;\n    this.tuesday = tuesday;\n    this.wednesday = wednesday;\n    this.thursday = thursday;\n    this.friday = friday;\n    this.saturday = saturday;\n    this.sunday = sunday;\n  }\n}\n\nexport class SelectedDay {\n  isSelected: boolean;\n  dayList: IDayList;\n}\n\nexport interface IDayList {\n  id: number;\n  capacity: number;\n  orders: number;\n  dayNumber: number;\n  day: string;\n  dayToShow: boolean;\n  check: boolean;\n  restrictedDay: boolean;\n  today: boolean;\n  pastDay: boolean;\n  dayType?: 'empty' | 'only_number' | 'active';\n}\n\n\nexport class Calendar {\n  public year: string;\n  public month: string;\n  public daysList: Array<IDayList>;\n  public monthNumber: number;\n  public startDay: number;\n\n  constructor(store: ICalendar) {\n    const currentValue = isObject(store) ? store : {} as ICalendar;\n    this.year = currentValue.year || '';\n    this.month = currentValue.month || '';\n    this.daysList = currentValue.daysList || [];\n    this.monthNumber = currentValue.monthNumber || 0;\n    this.startDay = currentValue.startDay || 0;\n  }\n\n}\n\n// CALENDAR RESPONSE\nexport interface ICalendarResponse {\n  elements: ICalendar[];\n}\n\nexport class CalendarResponse {\n  public elements: Calendar[];\n\n  constructor(response: ICalendarResponse) {\n    const current = isObject(response) ? response : {} as ICalendarResponse;\n    this.elements = isArray(current.elements) ? current.elements.map(e => new Calendar(e)) : [];\n  }\n}\n\n\n// blocked day\n\nexport interface IDayBlockedRequest {\n  fulfillmentCenterCode: string; // D88\n  pathVariable?: string;\n}\n\nexport interface IBlocked {\n  day: string;\n  check: boolean;\n}\n\n\nexport interface IBlockedResponse {\n  elements: IBlocked[];\n}\n\n\nexport class BlockedDayResponse {\n  public elements: IBlocked[];\n\n  constructor(response: IBlockedResponse) {\n    const current = isObject(response) ? response : {} as IBlockedResponse;\n    this.elements = isArray(current.elements) ? current.elements.map(e => new Blocked(e)) : [];\n  }\n}\n\n\nexport class Blocked {\n  public day: string;\n  public check: boolean;\n\n  constructor(store: IBlocked) {\n    const currentValue = isObject(store) ? store : {} as IBlocked;\n    this.day = currentValue.day || '';\n    this.check = currentValue.check || false;\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "IBlocked"
                    }
                ],
                "line": 126,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "IBlocked",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "check",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 126,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "day",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 125,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "BlockedDayResponse",
            "id": "class-BlockedDayResponse-3902643a0451058b13dfaa6ff19c913b",
            "file": "src/app/shared/models/calendar/calendar.model.ts",
            "type": "class",
            "sourceCode": "import { isArray, isObject } from '@helpers/objects-equal.helper';\n\nexport interface ICalendarRequestParams {\n  fulfillmentCenterCode: string; // D88\n  serviceTypeCode: string; // RAD, RED\n  segmentType: string; // EXPRESS\n  channel: string; // DIGITAL, CALL\n}\n\nexport interface ICalendar {\n  year: string;\n  month: string;\n  daysList: Array<IDayList>;\n  monthNumber?: number;\n  startDay?: number;\n}\n\nexport class Week {\n  monday: IDayList;\n  tuesday: IDayList;\n  wednesday: IDayList;\n  thursday: IDayList;\n  friday: IDayList;\n  saturday: IDayList;\n  sunday: IDayList;\n  constructor(monday: IDayList,\n              tuesday: IDayList,\n              wednesday: IDayList,\n              thursday: IDayList,\n              friday: IDayList,\n              saturday: IDayList,\n              sunday: IDayList) {\n    this.monday = monday;\n    this.tuesday = tuesday;\n    this.wednesday = wednesday;\n    this.thursday = thursday;\n    this.friday = friday;\n    this.saturday = saturday;\n    this.sunday = sunday;\n  }\n}\n\nexport class SelectedDay {\n  isSelected: boolean;\n  dayList: IDayList;\n}\n\nexport interface IDayList {\n  id: number;\n  capacity: number;\n  orders: number;\n  dayNumber: number;\n  day: string;\n  dayToShow: boolean;\n  check: boolean;\n  restrictedDay: boolean;\n  today: boolean;\n  pastDay: boolean;\n  dayType?: 'empty' | 'only_number' | 'active';\n}\n\n\nexport class Calendar {\n  public year: string;\n  public month: string;\n  public daysList: Array<IDayList>;\n  public monthNumber: number;\n  public startDay: number;\n\n  constructor(store: ICalendar) {\n    const currentValue = isObject(store) ? store : {} as ICalendar;\n    this.year = currentValue.year || '';\n    this.month = currentValue.month || '';\n    this.daysList = currentValue.daysList || [];\n    this.monthNumber = currentValue.monthNumber || 0;\n    this.startDay = currentValue.startDay || 0;\n  }\n\n}\n\n// CALENDAR RESPONSE\nexport interface ICalendarResponse {\n  elements: ICalendar[];\n}\n\nexport class CalendarResponse {\n  public elements: Calendar[];\n\n  constructor(response: ICalendarResponse) {\n    const current = isObject(response) ? response : {} as ICalendarResponse;\n    this.elements = isArray(current.elements) ? current.elements.map(e => new Calendar(e)) : [];\n  }\n}\n\n\n// blocked day\n\nexport interface IDayBlockedRequest {\n  fulfillmentCenterCode: string; // D88\n  pathVariable?: string;\n}\n\nexport interface IBlocked {\n  day: string;\n  check: boolean;\n}\n\n\nexport interface IBlockedResponse {\n  elements: IBlocked[];\n}\n\n\nexport class BlockedDayResponse {\n  public elements: IBlocked[];\n\n  constructor(response: IBlockedResponse) {\n    const current = isObject(response) ? response : {} as IBlockedResponse;\n    this.elements = isArray(current.elements) ? current.elements.map(e => new Blocked(e)) : [];\n  }\n}\n\n\nexport class Blocked {\n  public day: string;\n  public check: boolean;\n\n  constructor(store: IBlocked) {\n    const currentValue = isObject(store) ? store : {} as IBlocked;\n    this.day = currentValue.day || '';\n    this.check = currentValue.check || false;\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "response",
                        "type": "IBlockedResponse"
                    }
                ],
                "line": 115,
                "jsdoctags": [
                    {
                        "name": "response",
                        "type": "IBlockedResponse",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "elements",
                    "type": "IBlocked[]",
                    "optional": false,
                    "description": "",
                    "line": 115,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Calendar",
            "id": "class-Calendar-3902643a0451058b13dfaa6ff19c913b",
            "file": "src/app/shared/models/calendar/calendar.model.ts",
            "type": "class",
            "sourceCode": "import { isArray, isObject } from '@helpers/objects-equal.helper';\n\nexport interface ICalendarRequestParams {\n  fulfillmentCenterCode: string; // D88\n  serviceTypeCode: string; // RAD, RED\n  segmentType: string; // EXPRESS\n  channel: string; // DIGITAL, CALL\n}\n\nexport interface ICalendar {\n  year: string;\n  month: string;\n  daysList: Array<IDayList>;\n  monthNumber?: number;\n  startDay?: number;\n}\n\nexport class Week {\n  monday: IDayList;\n  tuesday: IDayList;\n  wednesday: IDayList;\n  thursday: IDayList;\n  friday: IDayList;\n  saturday: IDayList;\n  sunday: IDayList;\n  constructor(monday: IDayList,\n              tuesday: IDayList,\n              wednesday: IDayList,\n              thursday: IDayList,\n              friday: IDayList,\n              saturday: IDayList,\n              sunday: IDayList) {\n    this.monday = monday;\n    this.tuesday = tuesday;\n    this.wednesday = wednesday;\n    this.thursday = thursday;\n    this.friday = friday;\n    this.saturday = saturday;\n    this.sunday = sunday;\n  }\n}\n\nexport class SelectedDay {\n  isSelected: boolean;\n  dayList: IDayList;\n}\n\nexport interface IDayList {\n  id: number;\n  capacity: number;\n  orders: number;\n  dayNumber: number;\n  day: string;\n  dayToShow: boolean;\n  check: boolean;\n  restrictedDay: boolean;\n  today: boolean;\n  pastDay: boolean;\n  dayType?: 'empty' | 'only_number' | 'active';\n}\n\n\nexport class Calendar {\n  public year: string;\n  public month: string;\n  public daysList: Array<IDayList>;\n  public monthNumber: number;\n  public startDay: number;\n\n  constructor(store: ICalendar) {\n    const currentValue = isObject(store) ? store : {} as ICalendar;\n    this.year = currentValue.year || '';\n    this.month = currentValue.month || '';\n    this.daysList = currentValue.daysList || [];\n    this.monthNumber = currentValue.monthNumber || 0;\n    this.startDay = currentValue.startDay || 0;\n  }\n\n}\n\n// CALENDAR RESPONSE\nexport interface ICalendarResponse {\n  elements: ICalendar[];\n}\n\nexport class CalendarResponse {\n  public elements: Calendar[];\n\n  constructor(response: ICalendarResponse) {\n    const current = isObject(response) ? response : {} as ICalendarResponse;\n    this.elements = isArray(current.elements) ? current.elements.map(e => new Calendar(e)) : [];\n  }\n}\n\n\n// blocked day\n\nexport interface IDayBlockedRequest {\n  fulfillmentCenterCode: string; // D88\n  pathVariable?: string;\n}\n\nexport interface IBlocked {\n  day: string;\n  check: boolean;\n}\n\n\nexport interface IBlockedResponse {\n  elements: IBlocked[];\n}\n\n\nexport class BlockedDayResponse {\n  public elements: IBlocked[];\n\n  constructor(response: IBlockedResponse) {\n    const current = isObject(response) ? response : {} as IBlockedResponse;\n    this.elements = isArray(current.elements) ? current.elements.map(e => new Blocked(e)) : [];\n  }\n}\n\n\nexport class Blocked {\n  public day: string;\n  public check: boolean;\n\n  constructor(store: IBlocked) {\n    const currentValue = isObject(store) ? store : {} as IBlocked;\n    this.day = currentValue.day || '';\n    this.check = currentValue.check || false;\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "ICalendar"
                    }
                ],
                "line": 68,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "ICalendar",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "daysList",
                    "type": "Array<IDayList>",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "month",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "monthNumber",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "startDay",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "year",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CalendarResponse",
            "id": "class-CalendarResponse-3902643a0451058b13dfaa6ff19c913b",
            "file": "src/app/shared/models/calendar/calendar.model.ts",
            "type": "class",
            "sourceCode": "import { isArray, isObject } from '@helpers/objects-equal.helper';\n\nexport interface ICalendarRequestParams {\n  fulfillmentCenterCode: string; // D88\n  serviceTypeCode: string; // RAD, RED\n  segmentType: string; // EXPRESS\n  channel: string; // DIGITAL, CALL\n}\n\nexport interface ICalendar {\n  year: string;\n  month: string;\n  daysList: Array<IDayList>;\n  monthNumber?: number;\n  startDay?: number;\n}\n\nexport class Week {\n  monday: IDayList;\n  tuesday: IDayList;\n  wednesday: IDayList;\n  thursday: IDayList;\n  friday: IDayList;\n  saturday: IDayList;\n  sunday: IDayList;\n  constructor(monday: IDayList,\n              tuesday: IDayList,\n              wednesday: IDayList,\n              thursday: IDayList,\n              friday: IDayList,\n              saturday: IDayList,\n              sunday: IDayList) {\n    this.monday = monday;\n    this.tuesday = tuesday;\n    this.wednesday = wednesday;\n    this.thursday = thursday;\n    this.friday = friday;\n    this.saturday = saturday;\n    this.sunday = sunday;\n  }\n}\n\nexport class SelectedDay {\n  isSelected: boolean;\n  dayList: IDayList;\n}\n\nexport interface IDayList {\n  id: number;\n  capacity: number;\n  orders: number;\n  dayNumber: number;\n  day: string;\n  dayToShow: boolean;\n  check: boolean;\n  restrictedDay: boolean;\n  today: boolean;\n  pastDay: boolean;\n  dayType?: 'empty' | 'only_number' | 'active';\n}\n\n\nexport class Calendar {\n  public year: string;\n  public month: string;\n  public daysList: Array<IDayList>;\n  public monthNumber: number;\n  public startDay: number;\n\n  constructor(store: ICalendar) {\n    const currentValue = isObject(store) ? store : {} as ICalendar;\n    this.year = currentValue.year || '';\n    this.month = currentValue.month || '';\n    this.daysList = currentValue.daysList || [];\n    this.monthNumber = currentValue.monthNumber || 0;\n    this.startDay = currentValue.startDay || 0;\n  }\n\n}\n\n// CALENDAR RESPONSE\nexport interface ICalendarResponse {\n  elements: ICalendar[];\n}\n\nexport class CalendarResponse {\n  public elements: Calendar[];\n\n  constructor(response: ICalendarResponse) {\n    const current = isObject(response) ? response : {} as ICalendarResponse;\n    this.elements = isArray(current.elements) ? current.elements.map(e => new Calendar(e)) : [];\n  }\n}\n\n\n// blocked day\n\nexport interface IDayBlockedRequest {\n  fulfillmentCenterCode: string; // D88\n  pathVariable?: string;\n}\n\nexport interface IBlocked {\n  day: string;\n  check: boolean;\n}\n\n\nexport interface IBlockedResponse {\n  elements: IBlocked[];\n}\n\n\nexport class BlockedDayResponse {\n  public elements: IBlocked[];\n\n  constructor(response: IBlockedResponse) {\n    const current = isObject(response) ? response : {} as IBlockedResponse;\n    this.elements = isArray(current.elements) ? current.elements.map(e => new Blocked(e)) : [];\n  }\n}\n\n\nexport class Blocked {\n  public day: string;\n  public check: boolean;\n\n  constructor(store: IBlocked) {\n    const currentValue = isObject(store) ? store : {} as IBlocked;\n    this.day = currentValue.day || '';\n    this.check = currentValue.check || false;\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "response",
                        "type": "ICalendarResponse"
                    }
                ],
                "line": 87,
                "jsdoctags": [
                    {
                        "name": "response",
                        "type": "ICalendarResponse",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "elements",
                    "type": "Calendar[]",
                    "optional": false,
                    "description": "",
                    "line": 87,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CalendarServiceDefaultCapacities",
            "id": "class-CalendarServiceDefaultCapacities-6564f1b05a51d56ecb41494cbbc3e361",
            "file": "src/app/shared/models/calendar/calendar-response.model.ts",
            "type": "class",
            "sourceCode": "import { ECapacitiesServiceType } from '../capacities/capacities-service-type.model';\n\nexport interface ICalendarServiceDefaultCapacities {\n    serviceTypeCode: ECapacitiesServiceType;\n    capacitiesQuantity: number;\n    ordersQuantity: number;\n}\n\nexport class CalendarServiceDefaultCapacities {\n    serviceType: ECapacitiesServiceType;\n    capacityQuantity: number;\n}\n",
            "properties": [
                {
                    "name": "capacityQuantity",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "serviceType",
                    "type": "ECapacitiesServiceType",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CapacitiesLocal",
            "id": "class-CapacitiesLocal-20805c633c8f4c488ae7f77808029317",
            "file": "src/app/business/operations/views/operations-capacities/models/operations-capacities-responses.model.ts",
            "type": "class",
            "sourceCode": "import { ILocal, Local } from '@models/local/local.model';\nimport { isObject } from '@helpers/objects-equal.helper';\nimport { CalendarServiceDefaultCapacities, ICalendarServiceDefaultCapacities } from '@models/calendar/calendar-response.model';\nimport { IServiceType, IServiceTypeSegment, ServiceType, ServiceTypeSegment } from '@models/local/service-type.model';\n\nexport class CapacitiesLocal extends Local {\n  constructor(iLocal: ILocal) {\n    super();\n    const local = isObject(iLocal) ? iLocal : {} as ILocal;\n    this.localCode = local.localCode;\n    this.name = local.name;\n  }\n}\n\n\nexport class CapacitiesLocalServiceDefaultCapacity extends CalendarServiceDefaultCapacities {\n  constructor(iCalendarServiceDefaultCapacities: ICalendarServiceDefaultCapacities) {\n    super();\n    const serviceDefaultCapacities = isObject(iCalendarServiceDefaultCapacities) ?\n      iCalendarServiceDefaultCapacities : {} as ICalendarServiceDefaultCapacities;\n    this.serviceType = serviceDefaultCapacities.serviceTypeCode;\n    this.capacityQuantity = serviceDefaultCapacities.capacitiesQuantity;\n  }\n}\n\nexport class CapacityServiceTypeSegment extends ServiceTypeSegment {\n  constructor(iServiceTypeSegment: IServiceTypeSegment) {\n    super();\n    this.segmentCapacity = iServiceTypeSegment.capacity || 0;\n    this.segmentHour = iServiceTypeSegment.hour || '';\n    this.segmentValue = iServiceTypeSegment.value || '';\n  }\n}\n\n\nexport class CapacitiesServiceType extends ServiceType {\n\n  constructor(store: IServiceType) {\n    super();\n    const currentValue = isObject(store) ? store : {} as IServiceType;\n    this.capacitiesQuantity = currentValue.capacitiesQuantity || 0;\n    this.segmentList = currentValue.segments ? currentValue.segments\n      .map((iServiceTypeSegment) => new CapacityServiceTypeSegment(iServiceTypeSegment)) : [];\n    this.serviceTypeCode = currentValue.serviceTypeCode || '';\n    this.startDay = store.startDay || '';\n    this.endDay = store.endDay || '';\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "iLocal",
                        "type": "ILocal"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "iLocal",
                        "type": "ILocal",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "address",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "inheritance": {
                        "file": "Local"
                    }
                },
                {
                    "name": "companies",
                    "type": "Array<ILocalCompany>",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "inheritance": {
                        "file": "Local"
                    }
                },
                {
                    "name": "description",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "inheritance": {
                        "file": "Local"
                    }
                },
                {
                    "name": "drugstoreWareHouseId",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "inheritance": {
                        "file": "Local"
                    }
                },
                {
                    "name": "endHour",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "inheritance": {
                        "file": "Local"
                    }
                },
                {
                    "name": "inkaVentaId",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "inheritance": {
                        "file": "Local"
                    }
                },
                {
                    "name": "latitude",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "inheritance": {
                        "file": "Local"
                    }
                },
                {
                    "name": "legacyId",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "inheritance": {
                        "file": "Local"
                    }
                },
                {
                    "name": "localCode",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "inheritance": {
                        "file": "Local"
                    }
                },
                {
                    "name": "localType",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "inheritance": {
                        "file": "Local"
                    }
                },
                {
                    "name": "longitude",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "inheritance": {
                        "file": "Local"
                    }
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "inheritance": {
                        "file": "Local"
                    }
                },
                {
                    "name": "position",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "inheritance": {
                        "file": "Local"
                    }
                },
                {
                    "name": "services",
                    "type": "Array<ILocalService>",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "inheritance": {
                        "file": "Local"
                    }
                },
                {
                    "name": "startHour",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "inheritance": {
                        "file": "Local"
                    }
                },
                {
                    "name": "wmsEnabled",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "inheritance": {
                        "file": "Local"
                    }
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "Local",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CapacitiesLocalServiceDefaultCapacity",
            "id": "class-CapacitiesLocalServiceDefaultCapacity-20805c633c8f4c488ae7f77808029317",
            "file": "src/app/business/operations/views/operations-capacities/models/operations-capacities-responses.model.ts",
            "type": "class",
            "sourceCode": "import { ILocal, Local } from '@models/local/local.model';\nimport { isObject } from '@helpers/objects-equal.helper';\nimport { CalendarServiceDefaultCapacities, ICalendarServiceDefaultCapacities } from '@models/calendar/calendar-response.model';\nimport { IServiceType, IServiceTypeSegment, ServiceType, ServiceTypeSegment } from '@models/local/service-type.model';\n\nexport class CapacitiesLocal extends Local {\n  constructor(iLocal: ILocal) {\n    super();\n    const local = isObject(iLocal) ? iLocal : {} as ILocal;\n    this.localCode = local.localCode;\n    this.name = local.name;\n  }\n}\n\n\nexport class CapacitiesLocalServiceDefaultCapacity extends CalendarServiceDefaultCapacities {\n  constructor(iCalendarServiceDefaultCapacities: ICalendarServiceDefaultCapacities) {\n    super();\n    const serviceDefaultCapacities = isObject(iCalendarServiceDefaultCapacities) ?\n      iCalendarServiceDefaultCapacities : {} as ICalendarServiceDefaultCapacities;\n    this.serviceType = serviceDefaultCapacities.serviceTypeCode;\n    this.capacityQuantity = serviceDefaultCapacities.capacitiesQuantity;\n  }\n}\n\nexport class CapacityServiceTypeSegment extends ServiceTypeSegment {\n  constructor(iServiceTypeSegment: IServiceTypeSegment) {\n    super();\n    this.segmentCapacity = iServiceTypeSegment.capacity || 0;\n    this.segmentHour = iServiceTypeSegment.hour || '';\n    this.segmentValue = iServiceTypeSegment.value || '';\n  }\n}\n\n\nexport class CapacitiesServiceType extends ServiceType {\n\n  constructor(store: IServiceType) {\n    super();\n    const currentValue = isObject(store) ? store : {} as IServiceType;\n    this.capacitiesQuantity = currentValue.capacitiesQuantity || 0;\n    this.segmentList = currentValue.segments ? currentValue.segments\n      .map((iServiceTypeSegment) => new CapacityServiceTypeSegment(iServiceTypeSegment)) : [];\n    this.serviceTypeCode = currentValue.serviceTypeCode || '';\n    this.startDay = store.startDay || '';\n    this.endDay = store.endDay || '';\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "iCalendarServiceDefaultCapacities",
                        "type": "ICalendarServiceDefaultCapacities"
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "iCalendarServiceDefaultCapacities",
                        "type": "ICalendarServiceDefaultCapacities",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "capacityQuantity",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "inheritance": {
                        "file": "CalendarServiceDefaultCapacities"
                    }
                },
                {
                    "name": "serviceType",
                    "type": "ECapacitiesServiceType",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "inheritance": {
                        "file": "CalendarServiceDefaultCapacities"
                    }
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "CalendarServiceDefaultCapacities",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CapacitiesServiceType",
            "id": "class-CapacitiesServiceType-20805c633c8f4c488ae7f77808029317",
            "file": "src/app/business/operations/views/operations-capacities/models/operations-capacities-responses.model.ts",
            "type": "class",
            "sourceCode": "import { ILocal, Local } from '@models/local/local.model';\nimport { isObject } from '@helpers/objects-equal.helper';\nimport { CalendarServiceDefaultCapacities, ICalendarServiceDefaultCapacities } from '@models/calendar/calendar-response.model';\nimport { IServiceType, IServiceTypeSegment, ServiceType, ServiceTypeSegment } from '@models/local/service-type.model';\n\nexport class CapacitiesLocal extends Local {\n  constructor(iLocal: ILocal) {\n    super();\n    const local = isObject(iLocal) ? iLocal : {} as ILocal;\n    this.localCode = local.localCode;\n    this.name = local.name;\n  }\n}\n\n\nexport class CapacitiesLocalServiceDefaultCapacity extends CalendarServiceDefaultCapacities {\n  constructor(iCalendarServiceDefaultCapacities: ICalendarServiceDefaultCapacities) {\n    super();\n    const serviceDefaultCapacities = isObject(iCalendarServiceDefaultCapacities) ?\n      iCalendarServiceDefaultCapacities : {} as ICalendarServiceDefaultCapacities;\n    this.serviceType = serviceDefaultCapacities.serviceTypeCode;\n    this.capacityQuantity = serviceDefaultCapacities.capacitiesQuantity;\n  }\n}\n\nexport class CapacityServiceTypeSegment extends ServiceTypeSegment {\n  constructor(iServiceTypeSegment: IServiceTypeSegment) {\n    super();\n    this.segmentCapacity = iServiceTypeSegment.capacity || 0;\n    this.segmentHour = iServiceTypeSegment.hour || '';\n    this.segmentValue = iServiceTypeSegment.value || '';\n  }\n}\n\n\nexport class CapacitiesServiceType extends ServiceType {\n\n  constructor(store: IServiceType) {\n    super();\n    const currentValue = isObject(store) ? store : {} as IServiceType;\n    this.capacitiesQuantity = currentValue.capacitiesQuantity || 0;\n    this.segmentList = currentValue.segments ? currentValue.segments\n      .map((iServiceTypeSegment) => new CapacityServiceTypeSegment(iServiceTypeSegment)) : [];\n    this.serviceTypeCode = currentValue.serviceTypeCode || '';\n    this.startDay = store.startDay || '';\n    this.endDay = store.endDay || '';\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "IServiceType"
                    }
                ],
                "line": 36,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "IServiceType",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "capacitiesQuantity",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "inheritance": {
                        "file": "ServiceType"
                    }
                },
                {
                    "name": "endDay",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "inheritance": {
                        "file": "ServiceType"
                    }
                },
                {
                    "name": "ordersQuantity",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "inheritance": {
                        "file": "ServiceType"
                    }
                },
                {
                    "name": "segmentList",
                    "type": "Array<ServiceTypeSegment>",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "inheritance": {
                        "file": "ServiceType"
                    }
                },
                {
                    "name": "selectDaysQuantity",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "inheritance": {
                        "file": "ServiceType"
                    }
                },
                {
                    "name": "serviceTypeCode",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "inheritance": {
                        "file": "ServiceType"
                    }
                },
                {
                    "name": "startDay",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "inheritance": {
                        "file": "ServiceType"
                    }
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "ServiceType",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Capacity",
            "id": "class-Capacity-123572efbfaeaf2a4ad3ac1c76b959a1",
            "file": "src/app/shared/models/calendar/capacity.model.ts",
            "type": "class",
            "sourceCode": "import { isObject } from '@helpers/objects-equal.helper';\n\nexport interface ICapacityRequestParams {\n  fulfillmentCenterCode: string; // B88\n  serviceTypeCode: string; // RAD o RET\n  segmentType: string; // PROGRAMMED\n  day: string; // '2020-04-27'\n  channel: string; // DIGITAL, CALL\n  hours: string;\n  quantities: string;\n}\n\n\nexport interface ICalendarUpdateRequestParams {\n  fulfillmentCenterCode: string;\n  serviceTypeCode: string;\n  days: string;\n  channel: string;\n  hours: string;\n  quantities: string;\n  filter: string;\n}\n\nexport interface ICapacity {\n  serviceTypeCode: string;\n  capacitiesQuantity: number;\n  ordersQuantity: number;\n  segments: Array<ISegment>;\n}\n\nexport interface ISegment {\n  id: number;\n  group: null;\n  capacity: number;\n  orders: number;\n  hour: string;\n  scheduleSegment: string;\n  enabled: boolean;\n  dayType?: 'empty' | 'only_number' | 'active';\n}\n\n\nexport class Capacity {\n  public serviceTypeCode: string;\n  public capacitiesQuantity: number;\n  public ordersQuantity: number;\n  public segments: Array<ISegment>;\n\n  constructor(schedules: ICapacity) {\n    const currentValue = isObject(schedules) ? schedules : {} as ICapacity;\n    this.serviceTypeCode = currentValue.serviceTypeCode || '';\n    this.capacitiesQuantity = currentValue.capacitiesQuantity || 0;\n    this.ordersQuantity = currentValue.ordersQuantity || 0;\n    this.segments = currentValue.segments || [];\n  }\n\n}\n\nexport class ResponseDetailCapacity {\n  public serviceTypeCode: string;\n  public capacitiesQuantity: number;\n  public ordersQuantity: number;\n  public segments: Array<ISegment>;\n\n  constructor(schedules: ICapacity) {\n    const currentValue = isObject(schedules) ? schedules : {} as ICapacity;\n    this.serviceTypeCode = currentValue.serviceTypeCode || '';\n    this.capacitiesQuantity = currentValue.capacitiesQuantity || 0;\n    this.ordersQuantity = currentValue.ordersQuantity || 0;\n    this.segments = currentValue.segments || [];\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "schedules",
                        "type": "ICapacity"
                    }
                ],
                "line": 47,
                "jsdoctags": [
                    {
                        "name": "schedules",
                        "type": "ICapacity",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "capacitiesQuantity",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "ordersQuantity",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "segments",
                    "type": "Array<ISegment>",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "serviceTypeCode",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CapacityQuantityControl",
            "id": "class-CapacityQuantityControl-c5cc6c86950d444d07e77e670488ba2d",
            "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-capacity-table/controls/capacity-quantity.control.ts",
            "type": "class",
            "sourceCode": "import { FormControl, Validators } from '@angular/forms';\nimport { GenericValidator } from '@validators/generic-validator';\n\nexport class CapacityQuantityControl extends FormControl {\n  constructor() {\n    super(null);\n    this.settingValidators();\n  }\n\n  private settingValidators() {\n    this.setValidators([\n      Validators.required,\n      Validators.minLength(1),\n      GenericValidator.validateNumberMaxLength(5)\n    ]);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 4
            },
            "properties": [],
            "methods": [
                {
                    "name": "settingValidators",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "FormControl",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CapacityQuantityForSelectionControl",
            "id": "class-CapacityQuantityForSelectionControl-000275242a968334c07c788cfa2a8ca3",
            "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-capacity-table/controls/capacity-quantity-for-selection.control.ts",
            "type": "class",
            "sourceCode": "import { FormControl } from '@angular/forms';\nimport { GenericValidator } from '@validators/generic-validator';\n\nexport class CapacityQuantityForSelectionControl extends FormControl {\n  constructor() {\n    super(null);\n    this.settingValidators();\n  }\n\n  private settingValidators() {\n    this.setValidators([\n      GenericValidator.validateNumberMaxLength(5)\n    ]);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 4
            },
            "properties": [],
            "methods": [
                {
                    "name": "settingValidators",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "FormControl",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CapacityRangeControl",
            "id": "class-CapacityRangeControl-455eaeb8e5edead90689f7b2e38de5e6",
            "file": "src/app/business/operations/views/operations-capacities/controls/capacity-range.control.ts",
            "type": "class",
            "sourceCode": "import { FormControl, Validators } from '@angular/forms';\nimport { IDatepickerRange } from '@atoms/input-datepicker/input-datepicker-range/input-datepicker-range.component';\nimport { checkDateAfterDate, checkDateIsSameOrAfterDate, getDate, getYesterdayDate } from '@helpers/dates.helper';\n\nexport class CapacityRangeControl extends FormControl {\n    constructor() {\n        super(null);\n        this.settingValidators();\n    }\n\n    private settingValidators() {\n        this.setValidators([\n            Validators.required,\n            this.ValidatorsValidDateRange\n        ]);\n    }\n\n    ValidatorsValidDateRange(control: FormControl): { [key: string]: boolean } | null {\n        if (control.value) {\n            const dateFormat = 'DD-MM-YYYY';\n            const datepickerRange = control.value as IDatepickerRange;\n            const yesterday = getYesterdayDate();\n            const startDate = getDate(datepickerRange.startDate, dateFormat);\n            const endDate = getDate(datepickerRange.endDate, dateFormat);\n            const validStartDate = checkDateAfterDate(startDate, yesterday);\n            const validEndDate = checkDateIsSameOrAfterDate(endDate, startDate);\n            const validDateRange = validStartDate && validEndDate;\n            return validDateRange ? null : {validDateRange};\n        }\n        return null;\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 5
            },
            "properties": [],
            "methods": [
                {
                    "name": "settingValidators",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "ValidatorsValidDateRange",
                    "args": [
                        {
                            "name": "control",
                            "type": "FormControl"
                        }
                    ],
                    "optional": false,
                    "returnType": "literal type | null",
                    "typeParameters": [],
                    "line": 18,
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "FormControl",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "FormControl",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CapacityRangeLimit",
            "id": "class-CapacityRangeLimit-2582a0bd5d9d411aa96d99b5bfd5909e",
            "file": "src/app/business/operations/views/operations-capacities/models/operations-capacity-converter.model.ts",
            "type": "class",
            "sourceCode": "import { ICapacityStepExpressResourceSegments } from '../components/op-capacities-step-express-resource/models/op-capacities-step-express-resource.model';\nimport { ICapacityStepCapacityTableSegments } from '../components/op-capacities-step-capacity-table/models/op-capacities-step-capacity-table.model';\nimport { CapacitiesServiceType } from './operations-capacities-responses.model';\nimport { IDatepickerRange } from '@atoms/input-datepicker/input-datepicker-range/input-datepicker-range.component';\nimport { ServiceTypeSegment } from '@models/local/service-type.model';\n\n\nexport class ToCapacityStepExpressResourceSegments implements ICapacityStepExpressResourceSegments {\n  expressResource: number;\n\n  constructor(iServiceType: CapacitiesServiceType) {\n    if (iServiceType && iServiceType.segmentList && iServiceType.segmentList.length) {\n      const expressResourceSegment = iServiceType.segmentList[0];\n      this.expressResource = expressResourceSegment ? expressResourceSegment.segmentCapacity : 0;\n    }\n  }\n}\n\nexport class ToCapacityStepAmPmCapacitySegments implements ICapacityStepCapacityTableSegments {\n  capacitySegmentList: ServiceTypeSegment[] = [];\n\n  constructor(iServiceType: CapacitiesServiceType) {\n    if (iServiceType && iServiceType.segmentList && iServiceType.segmentList.length) {\n      this.capacitySegmentList = iServiceType.segmentList;\n    }\n  }\n}\n\nexport class ToCapacityStepScheduledCapacitySegments extends ToCapacityStepAmPmCapacitySegments {\n  constructor(capacitiesServiceType: CapacitiesServiceType) {\n    super(capacitiesServiceType);\n  }\n}\n\n\nexport class ToCapacityStepRetCapacitySegments extends ToCapacityStepAmPmCapacitySegments {\n  constructor(capacitiesServiceType: CapacitiesServiceType) {\n    super(capacitiesServiceType);\n  }\n\n}\n\nexport class CapacityRangeLimit implements IDatepickerRange {\n  endDate: string;\n  startDate: string;\n\n  constructor(capacitiesServiceType: CapacitiesServiceType) {\n    if (capacitiesServiceType) {\n      this.startDate = capacitiesServiceType.startDay;\n      this.endDate = capacitiesServiceType.endDay;\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "capacitiesServiceType",
                        "type": "CapacitiesServiceType"
                    }
                ],
                "line": 45,
                "jsdoctags": [
                    {
                        "name": "capacitiesServiceType",
                        "type": "CapacitiesServiceType",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "endDate",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "startDate",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "IDatepickerRange"
            ]
        },
        {
            "name": "CapacityServiceTypeSegment",
            "id": "class-CapacityServiceTypeSegment-20805c633c8f4c488ae7f77808029317",
            "file": "src/app/business/operations/views/operations-capacities/models/operations-capacities-responses.model.ts",
            "type": "class",
            "sourceCode": "import { ILocal, Local } from '@models/local/local.model';\nimport { isObject } from '@helpers/objects-equal.helper';\nimport { CalendarServiceDefaultCapacities, ICalendarServiceDefaultCapacities } from '@models/calendar/calendar-response.model';\nimport { IServiceType, IServiceTypeSegment, ServiceType, ServiceTypeSegment } from '@models/local/service-type.model';\n\nexport class CapacitiesLocal extends Local {\n  constructor(iLocal: ILocal) {\n    super();\n    const local = isObject(iLocal) ? iLocal : {} as ILocal;\n    this.localCode = local.localCode;\n    this.name = local.name;\n  }\n}\n\n\nexport class CapacitiesLocalServiceDefaultCapacity extends CalendarServiceDefaultCapacities {\n  constructor(iCalendarServiceDefaultCapacities: ICalendarServiceDefaultCapacities) {\n    super();\n    const serviceDefaultCapacities = isObject(iCalendarServiceDefaultCapacities) ?\n      iCalendarServiceDefaultCapacities : {} as ICalendarServiceDefaultCapacities;\n    this.serviceType = serviceDefaultCapacities.serviceTypeCode;\n    this.capacityQuantity = serviceDefaultCapacities.capacitiesQuantity;\n  }\n}\n\nexport class CapacityServiceTypeSegment extends ServiceTypeSegment {\n  constructor(iServiceTypeSegment: IServiceTypeSegment) {\n    super();\n    this.segmentCapacity = iServiceTypeSegment.capacity || 0;\n    this.segmentHour = iServiceTypeSegment.hour || '';\n    this.segmentValue = iServiceTypeSegment.value || '';\n  }\n}\n\n\nexport class CapacitiesServiceType extends ServiceType {\n\n  constructor(store: IServiceType) {\n    super();\n    const currentValue = isObject(store) ? store : {} as IServiceType;\n    this.capacitiesQuantity = currentValue.capacitiesQuantity || 0;\n    this.segmentList = currentValue.segments ? currentValue.segments\n      .map((iServiceTypeSegment) => new CapacityServiceTypeSegment(iServiceTypeSegment)) : [];\n    this.serviceTypeCode = currentValue.serviceTypeCode || '';\n    this.startDay = store.startDay || '';\n    this.endDay = store.endDay || '';\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "iServiceTypeSegment",
                        "type": "IServiceTypeSegment"
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "iServiceTypeSegment",
                        "type": "IServiceTypeSegment",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "segmentCapacity",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "inheritance": {
                        "file": "ServiceTypeSegment"
                    }
                },
                {
                    "name": "segmentEnabled",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 23,
                    "inheritance": {
                        "file": "ServiceTypeSegment"
                    }
                },
                {
                    "name": "segmentHour",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "inheritance": {
                        "file": "ServiceTypeSegment"
                    }
                },
                {
                    "name": "segmentOrders",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 24,
                    "inheritance": {
                        "file": "ServiceTypeSegment"
                    }
                },
                {
                    "name": "segmentValue",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "inheritance": {
                        "file": "ServiceTypeSegment"
                    }
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "ServiceTypeSegment",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CodeControl",
            "id": "class-CodeControl-69b6a6ff7efad9988d262881ec61ffc1",
            "file": "src/app/business/account/controls/code.control.ts",
            "type": "class",
            "sourceCode": "import { FormControl, Validators } from '@angular/forms';\nimport { getErrorByFormControl } from '@helpers/control-error.helper';\nimport { CODE_ERROR_MESSAGES } from '@parameters/form-error-message.parameter';\nimport { GenericValidator } from '@validators/generic-validator';\n\nexport class CodeControl extends FormControl {\n\n    constructor() {\n        super('');\n        this.settingValidators();\n    }\n\n    public settingValidators() {\n        this.setValidators([\n            Validators.required,\n            Validators.minLength(6)\n        ]);\n        this.updateValueAndValidity();\n    }\n\n    public settingWrongDataValidator() {\n        this.setValidators([GenericValidator.wrongData()]);\n        this.updateValueAndValidity();\n    }\n\n    public get controlError(): string {\n        return getErrorByFormControl(this, CODE_ERROR_MESSAGES);\n    }\n\n    public get hasWrongDataError() {\n        return this.hasError('wrongData');\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 6
            },
            "properties": [],
            "methods": [
                {
                    "name": "settingValidators",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "settingWrongDataValidator",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "FormControl",
            "accessors": {
                "controlError": {
                    "name": "controlError",
                    "getSignature": {
                        "name": "controlError",
                        "type": "string",
                        "returnType": "string",
                        "line": 26
                    }
                },
                "hasWrongDataError": {
                    "name": "hasWrongDataError",
                    "getSignature": {
                        "name": "hasWrongDataError",
                        "type": "",
                        "returnType": "",
                        "line": 30
                    }
                }
            },
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ConfirmPasswordControl",
            "id": "class-ConfirmPasswordControl-6a53d5c1077fc3a44efb40475b09ee9a",
            "file": "src/app/core/organisms/update-password-form/controls/confirm-password.control.ts",
            "type": "class",
            "sourceCode": "import { FormControl } from '@angular/forms';\nimport { PASSWORD_ERROR_MESSAGES } from '@parameters/form-error-message.parameter';\nimport { getErrorByFormControl } from '@helpers/control-error.helper';\nimport { GenericValidator } from '@validators/generic-validator';\n\nexport class ConfirmPasswordControl extends FormControl {\n\n    constructor(controlToCompare: string) {\n        super('');\n        this.settingValidators(controlToCompare);\n    }\n\n    private settingValidators(controlToCompare: string) {\n        this.setValidators([\n            GenericValidator.compareWithSiblingControlValue(controlToCompare)\n        ]);\n    }\n\n    public get controlError(): string {\n        return getErrorByFormControl(this, PASSWORD_ERROR_MESSAGES);\n    }\n\n    public get hasDifferentValuesError(): boolean {\n        return this.touched && this.hasError('differentValues');\n    }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "controlToCompare",
                        "type": "string"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "controlToCompare",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [],
            "methods": [
                {
                    "name": "settingValidators",
                    "args": [
                        {
                            "name": "controlToCompare",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "controlToCompare",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "FormControl",
            "accessors": {
                "controlError": {
                    "name": "controlError",
                    "getSignature": {
                        "name": "controlError",
                        "type": "string",
                        "returnType": "string",
                        "line": 19
                    }
                },
                "hasDifferentValuesError": {
                    "name": "hasDifferentValuesError",
                    "getSignature": {
                        "name": "hasDifferentValuesError",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 23
                    }
                }
            },
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CustomDateAdapter",
            "id": "class-CustomDateAdapter-f50b79e9ff6636b92cb382658b8746dd",
            "file": "src/app/core/atoms/input-datepicker/input-datepicker/input-datepicker.component.ts",
            "type": "class",
            "sourceCode": "import { Component, Input, OnDestroy, OnInit, Optional, Self } from '@angular/core';\nimport * as  moment from 'moment';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { DatepickerHeaderComponent } from '../components/datepicker-header/datepicker-header.component';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { Subscription } from 'rxjs';\n\n\nexport class CustomDateAdapter extends MomentDateAdapter {\n    getDayOfWeekNames(style: 'long' | 'short' | 'narrow') {\n        return ['D', 'L', 'M', 'M', 'J', 'V', 'S'];\n    }\n\n    getFirstDayOfWeek(): number {\n        return 1;\n    }\n}\n\nexport const MY_FORMATS = {\n    parse: {\n        dateInput: 'DD/MM/YYYY',\n    },\n    display: {\n        dateInput: 'DD/MM/YYYY',\n        monthYearLabel: 'MMMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n@Component({\n    selector: 'app-input-datepicker',\n    templateUrl: './input-datepicker.component.html',\n    styleUrls: ['./input-datepicker.component.scss'],\n    providers: [\n        {provide: DateAdapter, useClass: CustomDateAdapter, deps: [MAT_DATE_LOCALE]},\n        {provide: MAT_DATE_FORMATS, useValue: MY_FORMATS},\n    ],\n})\nexport class InputDatepickerComponent implements ControlValueAccessor, OnInit, OnDestroy {\n\n    protected datepickerSubscribe: Subscription;\n\n    public datepickerHeader = DatepickerHeaderComponent;\n    public datepickerName: string | number = 'input-datepicker';\n    public datepickerValue: moment.Moment;\n\n    @Input() placeholder = 'dd/mm/aaaa';\n    @Input() inputFormat = 'DD/MM/YYYY';\n    @Input() outputFormat = 'DD/MM/YYYY';\n    @Input() minDate = moment();\n    @Input() maxDate: moment.Moment;\n\n    @Input('value')\n    set _value(value: string) {\n        this.datepickerValue = value ? moment(value, this.inputFormat) : null;\n    }\n\n    onChange = (_: any) => {};\n    onTouched = (_: any) => {};\n\n    constructor(@Optional() @Self() public ngControl: NgControl) {\n        if (ngControl) {\n            ngControl.valueAccessor = this;\n        }\n    }\n\n    ngOnInit(): void {\n        if (this.ngControl) {\n            if (this.ngControl.name) {\n                this.datepickerName = this.ngControl.name;\n            }\n\n            this.datepickerSubscribe = this.ngControl.control.valueChanges.subscribe((value: string) => {\n                const datepickerInput = value ? moment(value, this.inputFormat) : null;\n                if (this.datepickerValue === datepickerInput) {\n                    return;\n                }\n                this.writeValue(value);\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        this.datepickerSubscribe.unsubscribe();\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    writeValue(value: string): void {\n        this.datepickerValue = value ? moment(value, this.inputFormat) : null;\n    }\n\n\n    changeDatepicker(value: MatDatepickerInputEvent<moment.Moment>) {\n        this.datepickerValue = value.value;\n        const datepickerOutput = value ? moment(value.value).format(this.outputFormat) : null;\n        this.onChange(datepickerOutput);\n    }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getDayOfWeekNames",
                    "args": [
                        {
                            "name": "style",
                            "type": "\"long\" | \"short\" | \"narrow\""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 12,
                    "jsdoctags": [
                        {
                            "name": "style",
                            "type": "\"long\" | \"short\" | \"narrow\"",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFirstDayOfWeek",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "extends": "MomentDateAdapter",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "EmailControl",
            "id": "class-EmailControl-6021662e03933d0f380491d5b34447c5",
            "file": "src/app/business/account/controls/email.control.ts",
            "type": "class",
            "sourceCode": "import { FormControl, Validators } from '@angular/forms';\nimport { EMAIL_ERROR_MESSAGES } from '@parameters/form-error-message.parameter';\nimport { getErrorByFormControl } from '@helpers/control-error.helper';\nimport { GenericValidator } from '@validators/generic-validator';\n\nexport class EmailControl extends FormControl {\n\n    constructor() {\n        super('');\n        this.settingValidators();\n    }\n\n    public settingValidators() {\n        this.setValidators([\n            Validators.required,\n            Validators.email,\n            Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)\n        ]);\n        this.updateValueAndValidity();\n    }\n\n    public settingWrongDataValidator() {\n        this.setValidators([GenericValidator.wrongData()]);\n        this.updateValueAndValidity();\n    }\n\n    public get controlError(): string {\n        return getErrorByFormControl(this, EMAIL_ERROR_MESSAGES);\n    }\n\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 6
            },
            "properties": [],
            "methods": [
                {
                    "name": "settingValidators",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "settingWrongDataValidator",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "FormControl",
            "accessors": {
                "controlError": {
                    "name": "controlError",
                    "getSignature": {
                        "name": "controlError",
                        "type": "string",
                        "returnType": "string",
                        "line": 27
                    }
                }
            },
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "EndpointsParameter",
            "id": "class-EndpointsParameter-a626a809cfe8928655c77ce4e7115717",
            "file": "src/app/shared/parameters/endpoints.parameter.ts",
            "type": "class",
            "sourceCode": "import { environment } from '@environments/environment';\n\nconst API_GATEWAY = `${environment.api_gateway}`;\nconst API_GATEWAY_AUTH = `${environment.api_gateway_auth}`;\n\nexport class EndpointsParameter {\n  public static AUTH_TOKEN = `${API_GATEWAY_AUTH}/oauth/token`;\n  public static AUTH_SEND_CODE = `${API_GATEWAY_AUTH}/restorepassword/email`;\n  public static AUTH_VALID_CODE = `${API_GATEWAY_AUTH}/restorepassword/code`;\n  public static AUTH_RESTORE_PASSWORD = `${API_GATEWAY_AUTH}/restorepassword/change`;\n\n  public static GET_DRUGSTORE = `${API_GATEWAY}/fulfillment/store`;\n  public static GET_DRUGSTORE_BY_SERVICE_TYPE = `${API_GATEWAY}/fulfillment/store/servicetype/`;\n\n  public static GET_CALENDAR_SERVICE_TYPE = `${API_GATEWAY}/fulfillment/calendar/template`;\n  public static PATCH_CALENDAR_UPDATE = `${API_GATEWAY}/fulfillment/calendar/template/detail/hours/quantities`;\n  public static PATCH_CALENDAR_RANGE_UPDATE = `${API_GATEWAY}/fulfillment/calendar/detail/hours/quantities`;\n  public static GET_CALENDAR_CAPACITIES = `${API_GATEWAY}/fulfillment/calendar/capacities`;\n}\n",
            "properties": [
                {
                    "name": "AUTH_RESTORE_PASSWORD",
                    "defaultValue": "`${API_GATEWAY_AUTH}/restorepassword/change`",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "AUTH_SEND_CODE",
                    "defaultValue": "`${API_GATEWAY_AUTH}/restorepassword/email`",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "AUTH_TOKEN",
                    "defaultValue": "`${API_GATEWAY_AUTH}/oauth/token`",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "AUTH_VALID_CODE",
                    "defaultValue": "`${API_GATEWAY_AUTH}/restorepassword/code`",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "GET_CALENDAR_CAPACITIES",
                    "defaultValue": "`${API_GATEWAY}/fulfillment/calendar/capacities`",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "GET_CALENDAR_SERVICE_TYPE",
                    "defaultValue": "`${API_GATEWAY}/fulfillment/calendar/template`",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "GET_DRUGSTORE",
                    "defaultValue": "`${API_GATEWAY}/fulfillment/store`",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "GET_DRUGSTORE_BY_SERVICE_TYPE",
                    "defaultValue": "`${API_GATEWAY}/fulfillment/store/servicetype/`",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "PATCH_CALENDAR_RANGE_UPDATE",
                    "defaultValue": "`${API_GATEWAY}/fulfillment/calendar/detail/hours/quantities`",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "PATCH_CALENDAR_UPDATE",
                    "defaultValue": "`${API_GATEWAY}/fulfillment/calendar/template/detail/hours/quantities`",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        115
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ExpressResourceControl",
            "id": "class-ExpressResourceControl-218a172d1ce728ce5e557ae5cab73b69",
            "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-express-resource/controls/express-resource.control.ts",
            "type": "class",
            "sourceCode": "import { FormControl, Validators } from '@angular/forms';\nimport { GenericValidator } from '@validators/generic-validator';\n\nexport class ExpressResourceControl extends FormControl {\n  constructor() {\n    super(null);\n    this.settingValidators();\n  }\n\n  private settingValidators() {\n    this.setValidators([\n      Validators.required,\n      Validators.minLength(1),\n      GenericValidator.validateNumberMaxLength(5)\n    ]);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 4
            },
            "properties": [],
            "methods": [
                {
                    "name": "settingValidators",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "FormControl",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "FromFormToCapacityStepCapacityTableSegments",
            "id": "class-FromFormToCapacityStepCapacityTableSegments-3825493af8509ca4871c85e7b2b4f62e",
            "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-capacity-table/models/op-capacities-step-capacity-table.model.ts",
            "type": "class",
            "sourceCode": "import { IDatepickerRange } from '@atoms/input-datepicker/input-datepicker-range/input-datepicker-range.component';\nimport { ServiceTypeSegment } from '@models/local/service-type.model';\n\n\nexport interface ICapacityStepCapacityTableFormValue {\n  capacityRange?: IDatepickerRange;\n  capacityForSelection: number;\n  capacitySegmentList: ServiceTypeSegment[];\n}\n\nexport interface ICapacityStepCapacityTableSegments {\n  capacityRange?: IDatepickerRange;\n  capacitySegmentList: ServiceTypeSegment[];\n}\n\nexport class FromFormToCapacityStepCapacityTableSegments implements ICapacityStepCapacityTableSegments {\n  capacityRange: IDatepickerRange;\n  capacitySegmentList: ServiceTypeSegment[];\n\n  constructor(amPmCapacityForm: ICapacityStepCapacityTableFormValue) {\n    this.capacityRange = amPmCapacityForm.capacityRange;\n    this.capacitySegmentList = amPmCapacityForm.capacitySegmentList;\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "amPmCapacityForm",
                        "type": "ICapacityStepCapacityTableFormValue"
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "amPmCapacityForm",
                        "type": "ICapacityStepCapacityTableFormValue",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "capacityRange",
                    "type": "IDatepickerRange",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "capacitySegmentList",
                    "type": "ServiceTypeSegment[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "ICapacityStepCapacityTableSegments"
            ]
        },
        {
            "name": "FromFormToCapacityStepExpressResourceSegments",
            "id": "class-FromFormToCapacityStepExpressResourceSegments-dfb3124443b4efb9fa7ba6ba06fe8577",
            "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-express-resource/models/op-capacities-step-express-resource.model.ts",
            "type": "class",
            "sourceCode": "import { IDatepickerRange } from '@atoms/input-datepicker/input-datepicker-range/input-datepicker-range.component';\n\nexport interface ICapacityStepExpressResourceSegments {\n  capacityRange?: IDatepickerRange;\n  expressResource: number;\n}\n\nexport class FromFormToCapacityStepExpressResourceSegments implements ICapacityStepExpressResourceSegments {\n  capacityRange: IDatepickerRange;\n  expressResource: number;\n\n  constructor(amPmCapacityForm: ICapacityStepExpressResourceSegments) {\n    this.capacityRange = amPmCapacityForm.capacityRange;\n    this.expressResource = amPmCapacityForm.expressResource;\n  }\n}\n\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "amPmCapacityForm",
                        "type": "ICapacityStepExpressResourceSegments"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "amPmCapacityForm",
                        "type": "ICapacityStepExpressResourceSegments",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "capacityRange",
                    "type": "IDatepickerRange",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "expressResource",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "ICapacityStepExpressResourceSegments"
            ]
        },
        {
            "name": "GenericValidator",
            "id": "class-GenericValidator-3b1cb54bedd37eee49b72d66c308e4dd",
            "file": "src/app/shared/validators/generic-validator.ts",
            "type": "class",
            "sourceCode": "import { AbstractControl, FormControl, ValidatorFn, Validators } from '@angular/forms';\n\nconst validCharacters = /^[A-Za-zÀ-ÿ\\u00f1\\u00d1 ]+$/;\nconst validNumbers = /^[0-9]*$/;\n\nexport class GenericValidator extends Validators {\n\n\n    static validateNumbers(control: FormControl): { [key: string]: boolean } | null {\n        if (control.value && control.value.length > 0) {\n            const matches = validNumbers.test(control.value);\n            return matches ? null : {validateNumbers: matches};\n        } else {\n            return null;\n        }\n    }\n\n    static validateNumberMaxLength(max: number): ValidatorFn {\n        return (control: AbstractControl): { [key: string]: boolean } | null => {\n            const stringValue = control.value ? control.value.toString() : '';\n            const maxValue = !isNaN(max) ? Number(Array.from({length: max}, () => 9).join('')) : 1;\n            if (control.value && (isNaN(control.value) || stringValue.length > max || control.value > maxValue)) {\n                return {range: true};\n            }\n            return null;\n        };\n    }\n\n    static wrongData(): ValidatorFn {\n        return (): { [key: string]: boolean } | null => {\n            return {wrongData: true};\n        };\n    }\n\n    static compareWithSiblingControlValue(controlToCompare: string): ValidatorFn {\n        return (control: AbstractControl): { [key: string]: boolean } | null => {\n            const siblingControl = control.parent.get(controlToCompare);\n            if (control.value !== siblingControl?.value) {\n                return {differentValues: true};\n            }\n            return null;\n        };\n    }\n\n    static validateAtLeastOneUpperCaseLetterExist(control: AbstractControl): { [key: string]: boolean } | null {\n        const pattern = /(.*[A-Z].*)/;\n        if (!pattern.test(control.value)) {\n            return {upperCaseError: true};\n        }\n        return null;\n    }\n\n    static validateAtLeastOneLowerCaseLetterExist(control: AbstractControl): { [key: string]: boolean } | null {\n        const pattern = /(.*[a-z].*)/;\n        if (!pattern.test(control.value)) {\n            return {lowerCaseError: true};\n        }\n        return null;\n    }\n\n    static validateAtLeastOneNumberOrCharacterExist(control: AbstractControl): { [key: string]: boolean } | null {\n        const pattern = /(.*[-+_!@#$%^&*.,?\\d].*)/;\n        if (!pattern.test(control.value)) {\n            return {numberOrCharacterError: true};\n        }\n        return null;\n    }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "compareWithSiblingControlValue",
                    "args": [
                        {
                            "name": "controlToCompare",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "ValidatorFn",
                    "typeParameters": [],
                    "line": 35,
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "controlToCompare",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validateAtLeastOneLowerCaseLetterExist",
                    "args": [
                        {
                            "name": "control",
                            "type": "AbstractControl"
                        }
                    ],
                    "optional": false,
                    "returnType": "literal type | null",
                    "typeParameters": [],
                    "line": 53,
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validateAtLeastOneNumberOrCharacterExist",
                    "args": [
                        {
                            "name": "control",
                            "type": "AbstractControl"
                        }
                    ],
                    "optional": false,
                    "returnType": "literal type | null",
                    "typeParameters": [],
                    "line": 61,
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validateAtLeastOneUpperCaseLetterExist",
                    "args": [
                        {
                            "name": "control",
                            "type": "AbstractControl"
                        }
                    ],
                    "optional": false,
                    "returnType": "literal type | null",
                    "typeParameters": [],
                    "line": 45,
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validateNumberMaxLength",
                    "args": [
                        {
                            "name": "max",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "ValidatorFn",
                    "typeParameters": [],
                    "line": 18,
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "max",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validateNumbers",
                    "args": [
                        {
                            "name": "control",
                            "type": "FormControl"
                        }
                    ],
                    "optional": false,
                    "returnType": "literal type | null",
                    "typeParameters": [],
                    "line": 9,
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "FormControl",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "wrongData",
                    "args": [],
                    "optional": false,
                    "returnType": "ValidatorFn",
                    "typeParameters": [],
                    "line": 29,
                    "modifierKind": [
                        115
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "Validators",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "IconsSvgModel",
            "id": "class-IconsSvgModel-3525e88b0144187b7663c6e1504e7cbc",
            "file": "src/app/core/atoms/icons/models/icons-svg.model.ts",
            "type": "class",
            "sourceCode": "export class IconsSvgModel {\n  name: string;\n  path: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "path",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Local",
            "id": "class-Local-ae2d2ddee243078d33d64a407c4dbde9",
            "file": "src/app/shared/models/local/local.model.ts",
            "type": "class",
            "sourceCode": "export interface ILocal {\n    localCode: string;\n    name: string;\n    description: string;\n    position: number;\n    address: string;\n    wmsEnabled: boolean;\n    companies: Array<ILocalCompany>;\n    legacyId: number;\n    latitude: number;\n    longitude: number;\n    inkaVentaId: string;\n    startHour: string;\n    endHour: string;\n    drugstoreWareHouseId: number;\n    localType: string;\n    services: Array<ILocalService>;\n}\n\nexport interface ILocalService {\n    code: string;\n    service: string;\n    shortName: string;\n    enabled: boolean;\n}\n\nexport interface ILocalCompany {\n    company: string;\n    code: string;\n}\n\nexport class Local {\n    localCode: string;\n    name: string;\n    description: string;\n    position: number;\n    address: string;\n    wmsEnabled: boolean;\n    companies: Array<ILocalCompany>;\n    legacyId: number;\n    latitude: number;\n    longitude: number;\n    inkaVentaId: string;\n    startHour: string;\n    endHour: string;\n    drugstoreWareHouseId: number;\n    localType: string;\n    services: Array<ILocalService>;\n}\n",
            "properties": [
                {
                    "name": "address",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "companies",
                    "type": "Array<ILocalCompany>",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "description",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "drugstoreWareHouseId",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "endHour",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "inkaVentaId",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "latitude",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "legacyId",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "localCode",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "localType",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "longitude",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "position",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "services",
                    "type": "Array<ILocalService>",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "startHour",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "wmsEnabled",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "LocalGroup",
            "id": "class-LocalGroup-851a379d4a59571eee1549debc87c90d",
            "file": "src/app/shared/models/local/local-group.model.ts",
            "type": "class",
            "sourceCode": "import { isObject } from '@helpers/objects-equal.helper';\n\nexport interface ILocalGroup {\n    description: string;\n    localCode: string;\n    position: number;\n    wmsEnabled: boolean;\n}\n\nexport class LocalGroup {\n    description: string;\n    localCode: string;\n    position: number;\n    wmsEnabled: boolean;\n\n    constructor(iLocalGroup: ILocalGroup) {\n        const localGroup = isObject(iLocalGroup) ? iLocalGroup : {} as ILocalGroup;\n        this.description = localGroup.description || '';\n        this.localCode = localGroup.localCode || '';\n        this.position = localGroup.position || 0;\n        this.wmsEnabled = localGroup.wmsEnabled || false;\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "iLocalGroup",
                        "type": "ILocalGroup"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "iLocalGroup",
                        "type": "ILocalGroup",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "description",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "localCode",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "position",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "wmsEnabled",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "LoginPasswordControl",
            "id": "class-LoginPasswordControl-e1aedb9c733971c06b8a11906f4d6f31",
            "file": "src/app/business/account/controls/login-password.control.ts",
            "type": "class",
            "sourceCode": "import { FormControl, Validators } from '@angular/forms';\nimport { getErrorByFormControl } from '@helpers/control-error.helper';\nimport { PASSWORD_ERROR_MESSAGES } from '@parameters/form-error-message.parameter';\nimport { GenericValidator } from '@validators/generic-validator';\n\nexport class LoginPasswordControl extends FormControl {\n\n    constructor() {\n        super('');\n        this.settingValidators();\n    }\n\n    public settingValidators() {\n        this.setValidators([\n            Validators.required,\n            Validators.minLength(6)\n        ]);\n        this.updateValueAndValidity();\n    }\n\n    public settingWrongDataValidator() {\n        this.setValidators([GenericValidator.wrongData()]);\n        this.updateValueAndValidity();\n    }\n\n    public get controlError(): string {\n        return getErrorByFormControl(this, PASSWORD_ERROR_MESSAGES);\n    }\n\n    public get hasWrongDataError() {\n        return this.hasError('wrongData');\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 6
            },
            "properties": [],
            "methods": [
                {
                    "name": "settingValidators",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "settingWrongDataValidator",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "FormControl",
            "accessors": {
                "controlError": {
                    "name": "controlError",
                    "getSignature": {
                        "name": "controlError",
                        "type": "string",
                        "returnType": "string",
                        "line": 26
                    }
                },
                "hasWrongDataError": {
                    "name": "hasWrongDataError",
                    "getSignature": {
                        "name": "hasWrongDataError",
                        "type": "",
                        "returnType": "",
                        "line": 30
                    }
                }
            },
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "PasswordControl",
            "id": "class-PasswordControl-481ea3d64a289d1533b04afbbfddc4c6",
            "file": "src/app/core/organisms/update-password-form/controls/password.control.ts",
            "type": "class",
            "sourceCode": "import { FormControl, Validators } from '@angular/forms';\nimport { PASSWORD_ERROR_MESSAGES } from '@parameters/form-error-message.parameter';\nimport { getErrorByFormControl } from '@helpers/control-error.helper';\nimport { GenericValidator } from '@validators/generic-validator';\n\nexport class PasswordControl extends FormControl {\n\n    constructor() {\n        super('');\n        this.settingValidators();\n    }\n\n    private settingValidators() {\n        this.setValidators([\n            Validators.required,\n            Validators.minLength(6),\n            GenericValidator.validateAtLeastOneUpperCaseLetterExist,\n            GenericValidator.validateAtLeastOneLowerCaseLetterExist,\n            GenericValidator.validateAtLeastOneNumberOrCharacterExist,\n        ]);\n    }\n\n    public get controlError(): string {\n        return getErrorByFormControl(this, PASSWORD_ERROR_MESSAGES);\n    }\n\n    public get validMinLength() {\n        return this.value && !this.hasError('minlength');\n    }\n\n    public get validUpperCase() {\n        return this.value && !this.hasError('upperCaseError');\n    }\n\n    public get validLowerCase() {\n        return this.value && !this.hasError('lowerCaseError');\n    }\n\n    public get validNumberOrCharacter() {\n        return this.value && !this.hasError('numberOrCharacterError');\n    }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 6
            },
            "properties": [],
            "methods": [
                {
                    "name": "settingValidators",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "FormControl",
            "accessors": {
                "controlError": {
                    "name": "controlError",
                    "getSignature": {
                        "name": "controlError",
                        "type": "string",
                        "returnType": "string",
                        "line": 23
                    }
                },
                "validMinLength": {
                    "name": "validMinLength",
                    "getSignature": {
                        "name": "validMinLength",
                        "type": "",
                        "returnType": "",
                        "line": 27
                    }
                },
                "validUpperCase": {
                    "name": "validUpperCase",
                    "getSignature": {
                        "name": "validUpperCase",
                        "type": "",
                        "returnType": "",
                        "line": 31
                    }
                },
                "validLowerCase": {
                    "name": "validLowerCase",
                    "getSignature": {
                        "name": "validLowerCase",
                        "type": "",
                        "returnType": "",
                        "line": 35
                    }
                },
                "validNumberOrCharacter": {
                    "name": "validNumberOrCharacter",
                    "getSignature": {
                        "name": "validNumberOrCharacter",
                        "type": "",
                        "returnType": "",
                        "line": 39
                    }
                }
            },
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ResponseDetailCapacity",
            "id": "class-ResponseDetailCapacity-123572efbfaeaf2a4ad3ac1c76b959a1",
            "file": "src/app/shared/models/calendar/capacity.model.ts",
            "type": "class",
            "sourceCode": "import { isObject } from '@helpers/objects-equal.helper';\n\nexport interface ICapacityRequestParams {\n  fulfillmentCenterCode: string; // B88\n  serviceTypeCode: string; // RAD o RET\n  segmentType: string; // PROGRAMMED\n  day: string; // '2020-04-27'\n  channel: string; // DIGITAL, CALL\n  hours: string;\n  quantities: string;\n}\n\n\nexport interface ICalendarUpdateRequestParams {\n  fulfillmentCenterCode: string;\n  serviceTypeCode: string;\n  days: string;\n  channel: string;\n  hours: string;\n  quantities: string;\n  filter: string;\n}\n\nexport interface ICapacity {\n  serviceTypeCode: string;\n  capacitiesQuantity: number;\n  ordersQuantity: number;\n  segments: Array<ISegment>;\n}\n\nexport interface ISegment {\n  id: number;\n  group: null;\n  capacity: number;\n  orders: number;\n  hour: string;\n  scheduleSegment: string;\n  enabled: boolean;\n  dayType?: 'empty' | 'only_number' | 'active';\n}\n\n\nexport class Capacity {\n  public serviceTypeCode: string;\n  public capacitiesQuantity: number;\n  public ordersQuantity: number;\n  public segments: Array<ISegment>;\n\n  constructor(schedules: ICapacity) {\n    const currentValue = isObject(schedules) ? schedules : {} as ICapacity;\n    this.serviceTypeCode = currentValue.serviceTypeCode || '';\n    this.capacitiesQuantity = currentValue.capacitiesQuantity || 0;\n    this.ordersQuantity = currentValue.ordersQuantity || 0;\n    this.segments = currentValue.segments || [];\n  }\n\n}\n\nexport class ResponseDetailCapacity {\n  public serviceTypeCode: string;\n  public capacitiesQuantity: number;\n  public ordersQuantity: number;\n  public segments: Array<ISegment>;\n\n  constructor(schedules: ICapacity) {\n    const currentValue = isObject(schedules) ? schedules : {} as ICapacity;\n    this.serviceTypeCode = currentValue.serviceTypeCode || '';\n    this.capacitiesQuantity = currentValue.capacitiesQuantity || 0;\n    this.ordersQuantity = currentValue.ordersQuantity || 0;\n    this.segments = currentValue.segments || [];\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "schedules",
                        "type": "ICapacity"
                    }
                ],
                "line": 63,
                "jsdoctags": [
                    {
                        "name": "schedules",
                        "type": "ICapacity",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "capacitiesQuantity",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "ordersQuantity",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "segments",
                    "type": "Array<ISegment>",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "serviceTypeCode",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "SelectedDay",
            "id": "class-SelectedDay-3902643a0451058b13dfaa6ff19c913b",
            "file": "src/app/shared/models/calendar/calendar.model.ts",
            "type": "class",
            "sourceCode": "import { isArray, isObject } from '@helpers/objects-equal.helper';\n\nexport interface ICalendarRequestParams {\n  fulfillmentCenterCode: string; // D88\n  serviceTypeCode: string; // RAD, RED\n  segmentType: string; // EXPRESS\n  channel: string; // DIGITAL, CALL\n}\n\nexport interface ICalendar {\n  year: string;\n  month: string;\n  daysList: Array<IDayList>;\n  monthNumber?: number;\n  startDay?: number;\n}\n\nexport class Week {\n  monday: IDayList;\n  tuesday: IDayList;\n  wednesday: IDayList;\n  thursday: IDayList;\n  friday: IDayList;\n  saturday: IDayList;\n  sunday: IDayList;\n  constructor(monday: IDayList,\n              tuesday: IDayList,\n              wednesday: IDayList,\n              thursday: IDayList,\n              friday: IDayList,\n              saturday: IDayList,\n              sunday: IDayList) {\n    this.monday = monday;\n    this.tuesday = tuesday;\n    this.wednesday = wednesday;\n    this.thursday = thursday;\n    this.friday = friday;\n    this.saturday = saturday;\n    this.sunday = sunday;\n  }\n}\n\nexport class SelectedDay {\n  isSelected: boolean;\n  dayList: IDayList;\n}\n\nexport interface IDayList {\n  id: number;\n  capacity: number;\n  orders: number;\n  dayNumber: number;\n  day: string;\n  dayToShow: boolean;\n  check: boolean;\n  restrictedDay: boolean;\n  today: boolean;\n  pastDay: boolean;\n  dayType?: 'empty' | 'only_number' | 'active';\n}\n\n\nexport class Calendar {\n  public year: string;\n  public month: string;\n  public daysList: Array<IDayList>;\n  public monthNumber: number;\n  public startDay: number;\n\n  constructor(store: ICalendar) {\n    const currentValue = isObject(store) ? store : {} as ICalendar;\n    this.year = currentValue.year || '';\n    this.month = currentValue.month || '';\n    this.daysList = currentValue.daysList || [];\n    this.monthNumber = currentValue.monthNumber || 0;\n    this.startDay = currentValue.startDay || 0;\n  }\n\n}\n\n// CALENDAR RESPONSE\nexport interface ICalendarResponse {\n  elements: ICalendar[];\n}\n\nexport class CalendarResponse {\n  public elements: Calendar[];\n\n  constructor(response: ICalendarResponse) {\n    const current = isObject(response) ? response : {} as ICalendarResponse;\n    this.elements = isArray(current.elements) ? current.elements.map(e => new Calendar(e)) : [];\n  }\n}\n\n\n// blocked day\n\nexport interface IDayBlockedRequest {\n  fulfillmentCenterCode: string; // D88\n  pathVariable?: string;\n}\n\nexport interface IBlocked {\n  day: string;\n  check: boolean;\n}\n\n\nexport interface IBlockedResponse {\n  elements: IBlocked[];\n}\n\n\nexport class BlockedDayResponse {\n  public elements: IBlocked[];\n\n  constructor(response: IBlockedResponse) {\n    const current = isObject(response) ? response : {} as IBlockedResponse;\n    this.elements = isArray(current.elements) ? current.elements.map(e => new Blocked(e)) : [];\n  }\n}\n\n\nexport class Blocked {\n  public day: string;\n  public check: boolean;\n\n  constructor(store: IBlocked) {\n    const currentValue = isObject(store) ? store : {} as IBlocked;\n    this.day = currentValue.day || '';\n    this.check = currentValue.check || false;\n  }\n\n}\n",
            "properties": [
                {
                    "name": "dayList",
                    "type": "IDayList",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "isSelected",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 44
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ServiceType",
            "id": "class-ServiceType-ffd73da5f8867039db32b61e833ca622",
            "file": "src/app/shared/models/local/service-type.model.ts",
            "type": "class",
            "sourceCode": "export interface IServiceType {\n    capacitiesQuantity: number;\n    endDay: string;\n    ordersQuantity: number;\n    segments: Array<IServiceTypeSegment>;\n    selectDaysQuantity?: number;\n    serviceTypeCode: string;\n    startDay: string;\n}\n\nexport interface IServiceTypeSegment {\n    capacity: number;\n    orders: number;\n    enabled: boolean;\n    hour?: string;\n    value?: string;\n}\n\nexport class ServiceTypeSegment {\n    segmentCapacity: number;\n    segmentHour: string;\n    segmentValue: string;\n    segmentEnabled?: boolean;\n    segmentOrders?: number;\n}\n\nexport class ServiceType {\n    serviceTypeCode: string;\n    capacitiesQuantity: number;\n    ordersQuantity: number;\n    selectDaysQuantity: number;\n    startDay: string;\n    endDay: string;\n    segmentList: Array<ServiceTypeSegment>;\n}\n",
            "properties": [
                {
                    "name": "capacitiesQuantity",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "endDay",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "ordersQuantity",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "segmentList",
                    "type": "Array<ServiceTypeSegment>",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "selectDaysQuantity",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "serviceTypeCode",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "startDay",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ServiceTypeSegment",
            "id": "class-ServiceTypeSegment-ffd73da5f8867039db32b61e833ca622",
            "file": "src/app/shared/models/local/service-type.model.ts",
            "type": "class",
            "sourceCode": "export interface IServiceType {\n    capacitiesQuantity: number;\n    endDay: string;\n    ordersQuantity: number;\n    segments: Array<IServiceTypeSegment>;\n    selectDaysQuantity?: number;\n    serviceTypeCode: string;\n    startDay: string;\n}\n\nexport interface IServiceTypeSegment {\n    capacity: number;\n    orders: number;\n    enabled: boolean;\n    hour?: string;\n    value?: string;\n}\n\nexport class ServiceTypeSegment {\n    segmentCapacity: number;\n    segmentHour: string;\n    segmentValue: string;\n    segmentEnabled?: boolean;\n    segmentOrders?: number;\n}\n\nexport class ServiceType {\n    serviceTypeCode: string;\n    capacitiesQuantity: number;\n    ordersQuantity: number;\n    selectDaysQuantity: number;\n    startDay: string;\n    endDay: string;\n    segmentList: Array<ServiceTypeSegment>;\n}\n",
            "properties": [
                {
                    "name": "segmentCapacity",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "segmentEnabled",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "segmentHour",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "segmentOrders",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "segmentValue",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ToCapacityStepAmPmCapacitySegments",
            "id": "class-ToCapacityStepAmPmCapacitySegments-2582a0bd5d9d411aa96d99b5bfd5909e",
            "file": "src/app/business/operations/views/operations-capacities/models/operations-capacity-converter.model.ts",
            "type": "class",
            "sourceCode": "import { ICapacityStepExpressResourceSegments } from '../components/op-capacities-step-express-resource/models/op-capacities-step-express-resource.model';\nimport { ICapacityStepCapacityTableSegments } from '../components/op-capacities-step-capacity-table/models/op-capacities-step-capacity-table.model';\nimport { CapacitiesServiceType } from './operations-capacities-responses.model';\nimport { IDatepickerRange } from '@atoms/input-datepicker/input-datepicker-range/input-datepicker-range.component';\nimport { ServiceTypeSegment } from '@models/local/service-type.model';\n\n\nexport class ToCapacityStepExpressResourceSegments implements ICapacityStepExpressResourceSegments {\n  expressResource: number;\n\n  constructor(iServiceType: CapacitiesServiceType) {\n    if (iServiceType && iServiceType.segmentList && iServiceType.segmentList.length) {\n      const expressResourceSegment = iServiceType.segmentList[0];\n      this.expressResource = expressResourceSegment ? expressResourceSegment.segmentCapacity : 0;\n    }\n  }\n}\n\nexport class ToCapacityStepAmPmCapacitySegments implements ICapacityStepCapacityTableSegments {\n  capacitySegmentList: ServiceTypeSegment[] = [];\n\n  constructor(iServiceType: CapacitiesServiceType) {\n    if (iServiceType && iServiceType.segmentList && iServiceType.segmentList.length) {\n      this.capacitySegmentList = iServiceType.segmentList;\n    }\n  }\n}\n\nexport class ToCapacityStepScheduledCapacitySegments extends ToCapacityStepAmPmCapacitySegments {\n  constructor(capacitiesServiceType: CapacitiesServiceType) {\n    super(capacitiesServiceType);\n  }\n}\n\n\nexport class ToCapacityStepRetCapacitySegments extends ToCapacityStepAmPmCapacitySegments {\n  constructor(capacitiesServiceType: CapacitiesServiceType) {\n    super(capacitiesServiceType);\n  }\n\n}\n\nexport class CapacityRangeLimit implements IDatepickerRange {\n  endDate: string;\n  startDate: string;\n\n  constructor(capacitiesServiceType: CapacitiesServiceType) {\n    if (capacitiesServiceType) {\n      this.startDate = capacitiesServiceType.startDay;\n      this.endDate = capacitiesServiceType.endDay;\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "iServiceType",
                        "type": "CapacitiesServiceType"
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "iServiceType",
                        "type": "CapacitiesServiceType",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "capacitySegmentList",
                    "defaultValue": "[]",
                    "type": "ServiceTypeSegment[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "ICapacityStepCapacityTableSegments"
            ]
        },
        {
            "name": "ToCapacityStepExpressResourceSegments",
            "id": "class-ToCapacityStepExpressResourceSegments-2582a0bd5d9d411aa96d99b5bfd5909e",
            "file": "src/app/business/operations/views/operations-capacities/models/operations-capacity-converter.model.ts",
            "type": "class",
            "sourceCode": "import { ICapacityStepExpressResourceSegments } from '../components/op-capacities-step-express-resource/models/op-capacities-step-express-resource.model';\nimport { ICapacityStepCapacityTableSegments } from '../components/op-capacities-step-capacity-table/models/op-capacities-step-capacity-table.model';\nimport { CapacitiesServiceType } from './operations-capacities-responses.model';\nimport { IDatepickerRange } from '@atoms/input-datepicker/input-datepicker-range/input-datepicker-range.component';\nimport { ServiceTypeSegment } from '@models/local/service-type.model';\n\n\nexport class ToCapacityStepExpressResourceSegments implements ICapacityStepExpressResourceSegments {\n  expressResource: number;\n\n  constructor(iServiceType: CapacitiesServiceType) {\n    if (iServiceType && iServiceType.segmentList && iServiceType.segmentList.length) {\n      const expressResourceSegment = iServiceType.segmentList[0];\n      this.expressResource = expressResourceSegment ? expressResourceSegment.segmentCapacity : 0;\n    }\n  }\n}\n\nexport class ToCapacityStepAmPmCapacitySegments implements ICapacityStepCapacityTableSegments {\n  capacitySegmentList: ServiceTypeSegment[] = [];\n\n  constructor(iServiceType: CapacitiesServiceType) {\n    if (iServiceType && iServiceType.segmentList && iServiceType.segmentList.length) {\n      this.capacitySegmentList = iServiceType.segmentList;\n    }\n  }\n}\n\nexport class ToCapacityStepScheduledCapacitySegments extends ToCapacityStepAmPmCapacitySegments {\n  constructor(capacitiesServiceType: CapacitiesServiceType) {\n    super(capacitiesServiceType);\n  }\n}\n\n\nexport class ToCapacityStepRetCapacitySegments extends ToCapacityStepAmPmCapacitySegments {\n  constructor(capacitiesServiceType: CapacitiesServiceType) {\n    super(capacitiesServiceType);\n  }\n\n}\n\nexport class CapacityRangeLimit implements IDatepickerRange {\n  endDate: string;\n  startDate: string;\n\n  constructor(capacitiesServiceType: CapacitiesServiceType) {\n    if (capacitiesServiceType) {\n      this.startDate = capacitiesServiceType.startDay;\n      this.endDate = capacitiesServiceType.endDay;\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "iServiceType",
                        "type": "CapacitiesServiceType"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "iServiceType",
                        "type": "CapacitiesServiceType",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "expressResource",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "ICapacityStepExpressResourceSegments"
            ]
        },
        {
            "name": "ToCapacityStepRetCapacitySegments",
            "id": "class-ToCapacityStepRetCapacitySegments-2582a0bd5d9d411aa96d99b5bfd5909e",
            "file": "src/app/business/operations/views/operations-capacities/models/operations-capacity-converter.model.ts",
            "type": "class",
            "sourceCode": "import { ICapacityStepExpressResourceSegments } from '../components/op-capacities-step-express-resource/models/op-capacities-step-express-resource.model';\nimport { ICapacityStepCapacityTableSegments } from '../components/op-capacities-step-capacity-table/models/op-capacities-step-capacity-table.model';\nimport { CapacitiesServiceType } from './operations-capacities-responses.model';\nimport { IDatepickerRange } from '@atoms/input-datepicker/input-datepicker-range/input-datepicker-range.component';\nimport { ServiceTypeSegment } from '@models/local/service-type.model';\n\n\nexport class ToCapacityStepExpressResourceSegments implements ICapacityStepExpressResourceSegments {\n  expressResource: number;\n\n  constructor(iServiceType: CapacitiesServiceType) {\n    if (iServiceType && iServiceType.segmentList && iServiceType.segmentList.length) {\n      const expressResourceSegment = iServiceType.segmentList[0];\n      this.expressResource = expressResourceSegment ? expressResourceSegment.segmentCapacity : 0;\n    }\n  }\n}\n\nexport class ToCapacityStepAmPmCapacitySegments implements ICapacityStepCapacityTableSegments {\n  capacitySegmentList: ServiceTypeSegment[] = [];\n\n  constructor(iServiceType: CapacitiesServiceType) {\n    if (iServiceType && iServiceType.segmentList && iServiceType.segmentList.length) {\n      this.capacitySegmentList = iServiceType.segmentList;\n    }\n  }\n}\n\nexport class ToCapacityStepScheduledCapacitySegments extends ToCapacityStepAmPmCapacitySegments {\n  constructor(capacitiesServiceType: CapacitiesServiceType) {\n    super(capacitiesServiceType);\n  }\n}\n\n\nexport class ToCapacityStepRetCapacitySegments extends ToCapacityStepAmPmCapacitySegments {\n  constructor(capacitiesServiceType: CapacitiesServiceType) {\n    super(capacitiesServiceType);\n  }\n\n}\n\nexport class CapacityRangeLimit implements IDatepickerRange {\n  endDate: string;\n  startDate: string;\n\n  constructor(capacitiesServiceType: CapacitiesServiceType) {\n    if (capacitiesServiceType) {\n      this.startDate = capacitiesServiceType.startDay;\n      this.endDate = capacitiesServiceType.endDay;\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "capacitiesServiceType",
                        "type": "CapacitiesServiceType"
                    }
                ],
                "line": 36,
                "jsdoctags": [
                    {
                        "name": "capacitiesServiceType",
                        "type": "CapacitiesServiceType",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "capacitySegmentList",
                    "defaultValue": "[]",
                    "type": "ServiceTypeSegment[]",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "inheritance": {
                        "file": "ToCapacityStepAmPmCapacitySegments"
                    }
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "ToCapacityStepAmPmCapacitySegments",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ToCapacityStepScheduledCapacitySegments",
            "id": "class-ToCapacityStepScheduledCapacitySegments-2582a0bd5d9d411aa96d99b5bfd5909e",
            "file": "src/app/business/operations/views/operations-capacities/models/operations-capacity-converter.model.ts",
            "type": "class",
            "sourceCode": "import { ICapacityStepExpressResourceSegments } from '../components/op-capacities-step-express-resource/models/op-capacities-step-express-resource.model';\nimport { ICapacityStepCapacityTableSegments } from '../components/op-capacities-step-capacity-table/models/op-capacities-step-capacity-table.model';\nimport { CapacitiesServiceType } from './operations-capacities-responses.model';\nimport { IDatepickerRange } from '@atoms/input-datepicker/input-datepicker-range/input-datepicker-range.component';\nimport { ServiceTypeSegment } from '@models/local/service-type.model';\n\n\nexport class ToCapacityStepExpressResourceSegments implements ICapacityStepExpressResourceSegments {\n  expressResource: number;\n\n  constructor(iServiceType: CapacitiesServiceType) {\n    if (iServiceType && iServiceType.segmentList && iServiceType.segmentList.length) {\n      const expressResourceSegment = iServiceType.segmentList[0];\n      this.expressResource = expressResourceSegment ? expressResourceSegment.segmentCapacity : 0;\n    }\n  }\n}\n\nexport class ToCapacityStepAmPmCapacitySegments implements ICapacityStepCapacityTableSegments {\n  capacitySegmentList: ServiceTypeSegment[] = [];\n\n  constructor(iServiceType: CapacitiesServiceType) {\n    if (iServiceType && iServiceType.segmentList && iServiceType.segmentList.length) {\n      this.capacitySegmentList = iServiceType.segmentList;\n    }\n  }\n}\n\nexport class ToCapacityStepScheduledCapacitySegments extends ToCapacityStepAmPmCapacitySegments {\n  constructor(capacitiesServiceType: CapacitiesServiceType) {\n    super(capacitiesServiceType);\n  }\n}\n\n\nexport class ToCapacityStepRetCapacitySegments extends ToCapacityStepAmPmCapacitySegments {\n  constructor(capacitiesServiceType: CapacitiesServiceType) {\n    super(capacitiesServiceType);\n  }\n\n}\n\nexport class CapacityRangeLimit implements IDatepickerRange {\n  endDate: string;\n  startDate: string;\n\n  constructor(capacitiesServiceType: CapacitiesServiceType) {\n    if (capacitiesServiceType) {\n      this.startDate = capacitiesServiceType.startDay;\n      this.endDate = capacitiesServiceType.endDay;\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "capacitiesServiceType",
                        "type": "CapacitiesServiceType"
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "capacitiesServiceType",
                        "type": "CapacitiesServiceType",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "capacitySegmentList",
                    "defaultValue": "[]",
                    "type": "ServiceTypeSegment[]",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "inheritance": {
                        "file": "ToCapacityStepAmPmCapacitySegments"
                    }
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "ToCapacityStepAmPmCapacitySegments",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "User",
            "id": "class-User-d4db33cf485555fab843035eba63077d",
            "file": "src/app/shared/models/auth/user.model.ts",
            "type": "class",
            "sourceCode": "import { Role } from './role.model';\nimport { IUser } from '@interfaces/user.interface';\n\nexport class User {\n    role: Role;\n    username: string;\n    email: string;\n    name: string;\n    firstLastName: string;\n    secondLastName: string;\n\n    constructor(iUser: IUser) {\n        this.role = iUser.authorities[0];\n        this.username = iUser.user_name;\n        this.email = iUser.email;\n        this.name = iUser.name;\n        this.firstLastName = iUser.first_last_name;\n        this.secondLastName = iUser.second_last_name;\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "iUser",
                        "type": "IUser"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "iUser",
                        "type": "IUser",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "email",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "firstLastName",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "role",
                    "type": "Role",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "secondLastName",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "username",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Week",
            "id": "class-Week-3902643a0451058b13dfaa6ff19c913b",
            "file": "src/app/shared/models/calendar/calendar.model.ts",
            "type": "class",
            "sourceCode": "import { isArray, isObject } from '@helpers/objects-equal.helper';\n\nexport interface ICalendarRequestParams {\n  fulfillmentCenterCode: string; // D88\n  serviceTypeCode: string; // RAD, RED\n  segmentType: string; // EXPRESS\n  channel: string; // DIGITAL, CALL\n}\n\nexport interface ICalendar {\n  year: string;\n  month: string;\n  daysList: Array<IDayList>;\n  monthNumber?: number;\n  startDay?: number;\n}\n\nexport class Week {\n  monday: IDayList;\n  tuesday: IDayList;\n  wednesday: IDayList;\n  thursday: IDayList;\n  friday: IDayList;\n  saturday: IDayList;\n  sunday: IDayList;\n  constructor(monday: IDayList,\n              tuesday: IDayList,\n              wednesday: IDayList,\n              thursday: IDayList,\n              friday: IDayList,\n              saturday: IDayList,\n              sunday: IDayList) {\n    this.monday = monday;\n    this.tuesday = tuesday;\n    this.wednesday = wednesday;\n    this.thursday = thursday;\n    this.friday = friday;\n    this.saturday = saturday;\n    this.sunday = sunday;\n  }\n}\n\nexport class SelectedDay {\n  isSelected: boolean;\n  dayList: IDayList;\n}\n\nexport interface IDayList {\n  id: number;\n  capacity: number;\n  orders: number;\n  dayNumber: number;\n  day: string;\n  dayToShow: boolean;\n  check: boolean;\n  restrictedDay: boolean;\n  today: boolean;\n  pastDay: boolean;\n  dayType?: 'empty' | 'only_number' | 'active';\n}\n\n\nexport class Calendar {\n  public year: string;\n  public month: string;\n  public daysList: Array<IDayList>;\n  public monthNumber: number;\n  public startDay: number;\n\n  constructor(store: ICalendar) {\n    const currentValue = isObject(store) ? store : {} as ICalendar;\n    this.year = currentValue.year || '';\n    this.month = currentValue.month || '';\n    this.daysList = currentValue.daysList || [];\n    this.monthNumber = currentValue.monthNumber || 0;\n    this.startDay = currentValue.startDay || 0;\n  }\n\n}\n\n// CALENDAR RESPONSE\nexport interface ICalendarResponse {\n  elements: ICalendar[];\n}\n\nexport class CalendarResponse {\n  public elements: Calendar[];\n\n  constructor(response: ICalendarResponse) {\n    const current = isObject(response) ? response : {} as ICalendarResponse;\n    this.elements = isArray(current.elements) ? current.elements.map(e => new Calendar(e)) : [];\n  }\n}\n\n\n// blocked day\n\nexport interface IDayBlockedRequest {\n  fulfillmentCenterCode: string; // D88\n  pathVariable?: string;\n}\n\nexport interface IBlocked {\n  day: string;\n  check: boolean;\n}\n\n\nexport interface IBlockedResponse {\n  elements: IBlocked[];\n}\n\n\nexport class BlockedDayResponse {\n  public elements: IBlocked[];\n\n  constructor(response: IBlockedResponse) {\n    const current = isObject(response) ? response : {} as IBlockedResponse;\n    this.elements = isArray(current.elements) ? current.elements.map(e => new Blocked(e)) : [];\n  }\n}\n\n\nexport class Blocked {\n  public day: string;\n  public check: boolean;\n\n  constructor(store: IBlocked) {\n    const currentValue = isObject(store) ? store : {} as IBlocked;\n    this.day = currentValue.day || '';\n    this.check = currentValue.check || false;\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "monday",
                        "type": "IDayList"
                    },
                    {
                        "name": "tuesday",
                        "type": "IDayList"
                    },
                    {
                        "name": "wednesday",
                        "type": "IDayList"
                    },
                    {
                        "name": "thursday",
                        "type": "IDayList"
                    },
                    {
                        "name": "friday",
                        "type": "IDayList"
                    },
                    {
                        "name": "saturday",
                        "type": "IDayList"
                    },
                    {
                        "name": "sunday",
                        "type": "IDayList"
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "monday",
                        "type": "IDayList",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "tuesday",
                        "type": "IDayList",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "wednesday",
                        "type": "IDayList",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "thursday",
                        "type": "IDayList",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "friday",
                        "type": "IDayList",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "saturday",
                        "type": "IDayList",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sunday",
                        "type": "IDayList",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "friday",
                    "type": "IDayList",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "monday",
                    "type": "IDayList",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "saturday",
                    "type": "IDayList",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "sunday",
                    "type": "IDayList",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "thursday",
                    "type": "IDayList",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "tuesday",
                    "type": "IDayList",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "wednesday",
                    "type": "IDayList",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "CapsLockDirective",
            "id": "directive-CapsLockDirective-e2b833a44623b380c9151a32548d16dd",
            "file": "src/app/shared/directives/caps-lock/caps-lock.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, HostListener, Output, EventEmitter } from '@angular/core';\n\n@Directive({\n    selector: '[appCapsLock]'\n})\nexport class CapsLockDirective {\n\n    @Output() appCapsLock = new EventEmitter<boolean>();\n\n    @HostListener('window:keydown', ['$event'])\n    onKeyDown(event: KeyboardEvent): void {\n        const capsOn = event.getModifierState && event.getModifierState('CapsLock');\n        this.appCapsLock.emit(capsOn);\n    }\n\n    @HostListener('window:keyup', ['$event'])\n    onKeyUp(event: KeyboardEvent): void {\n        const capsOn = event.getModifierState && event.getModifierState('CapsLock');\n        this.appCapsLock.emit(capsOn);\n    }\n\n}\n",
            "selector": "[appCapsLock]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "appCapsLock",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "line": 8,
                    "type": "EventEmitter"
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:keydown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 11
                },
                {
                    "name": "window:keyup",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 17
                }
            ],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "DigitsOnlyDirective",
            "id": "directive-DigitsOnlyDirective-9fad7321c84e3eba2678ea69a0288937",
            "file": "src/app/shared/directives/digits-only/digits-only.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { AfterViewInit, Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n    selector: '[appDigitsOnly]'\n})\nexport class DigitsOnlyDirective implements AfterViewInit {\n    @Input() decimal ? = false;\n\n    private decimalCounter = 0;\n    private navigationKeys = [\n        'Backspace',\n        'Delete',\n        'Tab',\n        'Escape',\n        'Enter',\n        'Home',\n        'End',\n        'ArrowLeft',\n        'ArrowRight',\n        'Clear',\n        'Copy',\n        'Paste'\n    ];\n    private inputElement: HTMLInputElement;\n\n    constructor(public elementRef: ElementRef) {\n    }\n\n    ngAfterViewInit() {\n        if (this.elementRef.nativeElement.tagName === 'INPUT') {\n            this.inputElement = this.elementRef.nativeElement;\n        } else {\n            const input = this.elementRef.nativeElement.querySelector('input');\n            if (input) {\n                this.inputElement = input;\n            }\n        }\n    }\n\n    @HostListener('keydown', ['$event'])\n    onKeyDown(e: KeyboardEvent) {\n        if (\n            this.navigationKeys.indexOf(e.key) > -1 || // Allow: navigation keys: backspace, delete, arrows etc.\n            (e.key === 'a' && e.ctrlKey === true) || // Allow: Ctrl+A\n            (e.key === 'c' && e.ctrlKey === true) || // Allow: Ctrl+C\n            (e.key === 'v' && e.ctrlKey === true) || // Allow: Ctrl+V\n            (e.key === 'x' && e.ctrlKey === true) || // Allow: Ctrl+X\n            (e.key === 'a' && e.metaKey === true) || // Allow: Cmd+A (Mac)\n            (e.key === 'c' && e.metaKey === true) || // Allow: Cmd+C (Mac)\n            (e.key === 'v' && e.metaKey === true) || // Allow: Cmd+V (Mac)\n            (e.key === 'x' && e.metaKey === true) || // Allow: Cmd+X (Mac)\n            (this.decimal && e.key === '.' && this.decimalCounter < 1) // Allow: only one decimal point\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        // Ensure that it is a number and stop the keypress\n        if (e.key === ' ' || isNaN(Number(e.key))) {\n            e.preventDefault();\n        }\n    }\n\n    @HostListener('keyup', ['$event'])\n    onKeyUp() {\n        if (!this.decimal) {\n            return;\n        }\n        this.decimalCounter = this.elementRef.nativeElement.value.split('.').length - 1;\n    }\n\n    @HostListener('paste', ['$event'])\n    onPaste(event: ClipboardEvent) {\n        const textData: string = event.clipboardData.getData('text/plain');\n        this.validateTextOnEvent(event, textData);\n\n    }\n\n    @HostListener('drop', ['$event'])\n    onDrop(event: any) {\n        const textData = event.dataTransfer.getData('text');\n        this.inputElement.focus();\n\n        this.validateTextOnEvent(event, textData);\n    }\n\n    validateTextOnEvent(event: any, textData: string): void {\n        let pasted = false;\n        if (!this.decimal) {\n            pasted = document.execCommand(\n                'insertText',\n                false,\n                textData.replace(/[^0-9]/g, '')\n            );\n        } else if (this.isValidDecimal(textData)) {\n            pasted = document.execCommand(\n                'insertText',\n                false,\n                textData.replace(/[^0-9.]/g, '')\n            );\n        }\n        if (pasted) {\n            event.preventDefault();\n        } else {\n            if (navigator.clipboard) {\n                navigator.clipboard.writeText(textData);\n                document.execCommand('paste');\n            }\n        }\n    }\n\n    isValidDecimal(decimal: string): boolean {\n        return decimal.split('.').length <= 2;\n    }\n}\n",
            "selector": "[appDigitsOnly]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "decimal",
                    "defaultValue": "false",
                    "line": 7
                }
            ],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "drop",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 79
                },
                {
                    "name": "keydown",
                    "args": [
                        {
                            "name": "e",
                            "type": "KeyboardEvent"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 41
                },
                {
                    "name": "keyup",
                    "args": [],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 64
                },
                {
                    "name": "paste",
                    "args": [
                        {
                            "name": "event",
                            "type": "ClipboardEvent"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 72
                }
            ],
            "propertiesClass": [
                {
                    "name": "decimalCounter",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "elementRef",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "inputElement",
                    "type": "HTMLInputElement",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "navigationKeys",
                    "defaultValue": "[\n        'Backspace',\n        'Delete',\n        'Tab',\n        'Escape',\n        'Enter',\n        'Home',\n        'End',\n        'ArrowLeft',\n        'ArrowRight',\n        'Clear',\n        'Copy',\n        'Paste'\n    ]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "isValidDecimal",
                    "args": [
                        {
                            "name": "decimal",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 111,
                    "jsdoctags": [
                        {
                            "name": "decimal",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29
                },
                {
                    "name": "validateTextOnEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        },
                        {
                            "name": "textData",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "textData",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "implements": [
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef"
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "RolesDirective",
            "id": "directive-RolesDirective-b1bcf3ef14c69c80b1e355dbf076c1c7",
            "file": "src/app/shared/directives/roles/roles.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Role } from '@models/auth/role.model';\nimport { UserStoreService } from '@stores/user-store.service';\n\n@Directive({\n    selector: '[appRoles]'\n})\nexport class RolesDirective implements OnInit {\n\n\n    private userRoles: Role[];\n\n    @Input()\n    set appRoles(roles: Role[]) {\n        if (!roles || !roles.length) {\n            throw new Error('Roles value is empty or missed');\n        }\n        this.userRoles = roles;\n    }\n\n    constructor(\n        private templateRef: TemplateRef<any>,\n        private userStore: UserStoreService,\n        private viewContainer: ViewContainerRef\n    ) {\n    }\n\n    ngOnInit() {\n        let hasAccess = false;\n        if (this.userStore.authenticated() && this.userRoles) {\n            hasAccess = this.userRoles.some(role => this.userStore.hasRole(role));\n        }\n        if (hasAccess) {\n            this.viewContainer.createEmbeddedView(this.templateRef);\n        } else {\n            this.viewContainer.clear();\n        }\n    }\n\n}\n",
            "selector": "[appRoles]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "appRoles",
                    "line": 14,
                    "type": "[]"
                }
            ],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "userRoles",
                    "type": "Role[]",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                }
            ],
            "implements": [
                "OnInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>"
                    },
                    {
                        "name": "userStore",
                        "type": "UserStoreService"
                    },
                    {
                        "name": "viewContainer",
                        "type": "ViewContainerRef"
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userStore",
                        "type": "UserStoreService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "viewContainer",
                        "type": "ViewContainerRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "appRoles": {
                    "name": "appRoles",
                    "setSignature": {
                        "name": "appRoles",
                        "type": "void",
                        "args": [
                            {
                                "name": "roles",
                                "type": "[]"
                            }
                        ],
                        "returnType": "void",
                        "line": 14,
                        "jsdoctags": [
                            {
                                "name": "roles",
                                "type": "[]",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            }
        }
    ],
    "components": [
        {
            "name": "AccountCardComponent",
            "id": "component-AccountCardComponent-4e2f0d366201fc75d3e43eb371695581",
            "file": "src/app/business/account/components/account-card/account-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-account-card",
            "styleUrls": [
                "./account-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./account-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-account-card',\n  templateUrl: './account-card.component.html',\n  styleUrls: ['./account-card.component.scss']\n})\nexport class AccountCardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables/colors\";\n\n.account-card {\n  width: 100%;\n  min-width: 300px;\n  max-width: 428px;\n  min-height: 400px;\n  background-color: $white;\n  box-shadow: 0 4px 20px rgba(51, 51, 51, 0.1);\n  border-radius: 8px;\n  padding: 32px 24px;\n  margin: 0 auto;\n}\n",
                    "styleUrl": "./account-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"account-card\">\n    <div class=\"account-card-title text-center mb-7\">\n        <h4 class=\"text-h4 text-gray-6 mb-0\">\n            <ng-content select=\"[account-card-title]\"></ng-content>\n        </h4>\n    </div>\n\n    <div class=\"account-card-content\">\n        <ng-content select=\"[account-card-content]\"></ng-content>\n    </div>\n</div>\n"
        },
        {
            "name": "AccountComponent",
            "id": "component-AccountComponent-9da1368351298989337efb014724024e",
            "file": "src/app/business/account/account.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-account",
            "styleUrls": [
                "./account.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./account.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss']\n})\nexport class AccountComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables/colors\";\n\n.account-container {\n  min-height: 100vh;\n  width: 100vw;\n  background-color: $gray-1;\n}\n",
                    "styleUrl": "./account.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"account-container\">\n    <div class=\"container d-flex-center min-vh-100 pt-5 pb-10\">\n\n        <div class=\"row\">\n            <div class=\"col-12 mb-10 d-flex-center\">\n                <app-icon svgName=\"logo\"\n                          svgWidth=\"348px\"\n                          svgHeight=\"40px\">\n                </app-icon>\n            </div>\n            <div class=\"col-12\">\n                <router-outlet></router-outlet>\n            </div>\n        </div>\n    </div>\n</section>\n"
        },
        {
            "name": "AdminComponent",
            "id": "component-AdminComponent-a26baa7b6a9fbac05528739d96cdce34",
            "file": "src/app/business/admin/admin.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-admin",
            "styleUrls": [
                "./admin.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./admin.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./admin.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container py-10\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            admin\n        </div>\n    </div>\n</div>\n"
        },
        {
            "name": "AlertComponent",
            "id": "component-AlertComponent-ad27e12cc31c2eb2163c31f46a49bbbb",
            "file": "src/app/core/molecules/alert/alert.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [
                "./alert.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./alert.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_SNACK_BAR_DATA"
                        }
                    ],
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "eAlertStatus",
                    "defaultValue": "EAlertStatus",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\n\nexport enum EAlertStatus {\n    success = 'success',\n    warning = 'warning',\n    error = 'error',\n}\n\n@Component({\n    templateUrl: './alert.component.html',\n    styleUrls: ['./alert.component.scss']\n})\nexport class AlertComponent implements OnInit {\n\n    public eAlertStatus = EAlertStatus;\n\n    constructor(\n        @Inject(MAT_SNACK_BAR_DATA) public data: { message: string, status: EAlertStatus }\n    ) {\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '~sass/variables/colors';\n@import '~sass/utilities/display';\n@import '~sass/utilities/text';\n\n::ng-deep .mat-snack-bar-container.alert {\n  padding: 0;\n  box-shadow: none;\n  background-color: transparent;\n  max-width: 609px;\n  margin-bottom: 40px;\n}\n\n.alert-container {\n  padding: 18px 24px;\n  border-radius: 8px;\n  @extend .d-flex-vertical-center;\n\n  .alert-text {\n    color: $white;\n    margin-left: 12px;\n    @extend .text-label;\n  }\n}\n",
                    "styleUrl": "./alert.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "data",
                        "type": "literal type"
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "literal type",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"alert-container\"\n     [class.bg-danger]=\"data?.status === eAlertStatus.error\"\n     [class.bg-warning]=\"data?.status === eAlertStatus.warning\"\n     [class.bg-success]=\"data?.status === eAlertStatus.success\">\n  <app-icon [fontName]=\"data?.status === eAlertStatus.error ? 'cancel' :\n                            data?.status === eAlertStatus.warning ? 'warning': 'check_circle'\"\n            fontSize=\"24px\"\n            innerClass=\"text-white\"></app-icon>\n\n  <span class=\"alert-text\"\n        [innerHTML]=\"data?.message\"></span>\n</div>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-5579e1c12d1d763e0d6b552e1a67a9b4",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_breakpointObserver",
                    "type": "BreakpointObserver",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "notSupport",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "subscriptions",
                    "defaultValue": "[]",
                    "type": "Subscription[]",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy } from '@angular/core';\nimport { BreakpointObserver } from '@angular/cdk/layout';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnDestroy {\n  public subscriptions: Subscription[] = [];\n\n  public notSupport: boolean;\n\n  constructor(\n    public _breakpointObserver: BreakpointObserver,\n  ) {\n\n    const subscription = this._breakpointObserver.observe([\n      `(min-width: 768px)`\n    ]).subscribe((state) => {\n      this.notSupport = !state.matches;\n    });\n    this.subscriptions.push(subscription);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_breakpointObserver",
                        "type": "BreakpointObserver"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "_breakpointObserver",
                        "type": "BreakpointObserver",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnDestroy"
            ],
            "templateData": "<ng-container *ngIf=\"!notSupport\">\n  <router-outlet></router-outlet>\n</ng-container>\n<ng-container *ngIf=\"notSupport\">\n  <app-not-supported></app-not-supported>\n</ng-container>\n"
        },
        {
            "name": "BackRouterComponent",
            "id": "component-BackRouterComponent-1778b8bc4c8955b577b5b9583c63ffa7",
            "file": "src/app/core/molecules/back-router/back-router.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-back-router",
            "styleUrls": [
                "./back-router.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./back-router.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "backRoute",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { parseUrl } from '@helpers/parse-url.helper';\n\n@Component({\n    selector: 'app-back-router',\n    templateUrl: './back-router.component.html',\n    styleUrls: ['./back-router.component.scss']\n})\nexport class BackRouterComponent implements OnInit {\n\n    public backRoute: string;\n\n    constructor(\n        private router: Router\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.backRoute = parseUrl(this.router.url, '..');\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".back-router {\n  cursor: pointer;\n  display: inline-flex;\n  align-items: center;\n}\n",
                    "styleUrl": "./back-router.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-router [router]=\"backRoute\">\n  <label class=\"back-router m-0\">\n    <app-icon fontName=\"keyboard_backspace\"\n              innerClass=\"text-gray-5\"\n              fontSize=\"16px\"></app-icon>\n    <span class=\"text-tag text-gray-5 ml-3\">\n    Volver a <ng-content></ng-content>\n  </span>\n  </label>\n</app-router>\n"
        },
        {
            "name": "BusinessComponent",
            "id": "component-BusinessComponent-0c8384f3a1597c34d6a2fbea39706a12",
            "file": "src/app/business/business.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<app-sidenav><router-outlet></router-outlet></app-sidenav>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  template: '<app-sidenav><router-outlet></router-outlet></app-sidenav>'\n})\nexport class BusinessComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ButtonActionIconComponent",
            "id": "component-ButtonActionIconComponent-ffd014a497a3e3f21095875e87694b57",
            "file": "src/app/core/atoms/buttons/button-action-icon/button-action-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button-action-icon[iconName]",
            "styleUrls": [
                "./button-action-icon.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-action-icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "line": 20
                },
                {
                    "name": "iconName",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "inlineStyle",
                    "line": 17,
                    "type": "literal type | null"
                },
                {
                    "name": "innerClass",
                    "defaultValue": "''",
                    "line": 14
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "onClick",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-button-action-icon[iconName]',\n    templateUrl: './button-action-icon.component.html',\n    styleUrls: ['./button-action-icon.component.scss']\n})\nexport class ButtonActionIconComponent {\n\n    @Input()\n    iconName: string;\n\n    @Input()\n    innerClass = '';\n\n    @Input()\n    inlineStyle: { [klass: string]: any; } | null;\n\n    @Input()\n    disabled = false;\n\n    onClick = (_: any) => {};\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables\";\n@import \"src/sass/utilities/display\";\n\n:host {\n  ::ng-deep .button.button-action-icon {\n    background-color: $light-primary;\n    border-color: $light-primary;\n    padding: 0;\n    border-radius: 50%;\n    height: 24px;\n    width: 24px;\n    @extend .d-flex-center;\n    display: inline-flex;\n\n    .icon-font {\n      color: $primary !important;\n    }\n\n    &:hover {\n      background-color: $primary;\n      border-color: $primary;\n\n      .icon-font {\n        color: $white !important;\n      }\n    }\n\n    &.button-disabled {\n      .icon-font {\n        color: $gray-4 !important;\n      }\n    }\n  }\n}\n\n.button-action-icon {\n  margin-top: -1px;\n}\n",
                    "styleUrl": "./button-action-icon.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<app-button\n        [innerClass]=\"'button-action-icon ' + innerClass\"\n        [inlineStyle]=\"inlineStyle\"\n        [disabled]=\"disabled\"\n        (click)=\"onClick($event)\">\n  <span class=\"d-inline-flex\">\n    <app-icon class=\"button-action-icon\"\n              [fontName]=\"iconName\"\n              fontSize=\"16px\"\n              fontColor=\"white\"></app-icon>\n  </span>\n</app-button>\n"
        },
        {
            "name": "ButtonActionTextComponent",
            "id": "component-ButtonActionTextComponent-0066039e242c7f1f2d8cb084b2150bd4",
            "file": "src/app/core/atoms/buttons/button-action-text/button-action-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button-action-text",
            "styleUrls": [
                "./button-action-text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-action-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "active",
                    "line": 11,
                    "type": "boolean"
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "line": 20
                },
                {
                    "name": "inlineStyle",
                    "line": 17,
                    "type": "literal type | null"
                },
                {
                    "name": "innerClass",
                    "defaultValue": "''",
                    "line": 14
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "onClick",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-button-action-text',\n    templateUrl: './button-action-text.component.html',\n    styleUrls: ['./button-action-text.component.scss']\n})\nexport class ButtonActionTextComponent {\n\n    @Input()\n    active: boolean;\n\n    @Input()\n    innerClass = '';\n\n    @Input()\n    inlineStyle: { [klass: string]: any; } | null;\n\n    @Input()\n    disabled = false;\n\n    onClick = (_: any) => {};\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables\";\n@import \"src/sass/utilities/display\";\n\n:host {\n  ::ng-deep .button.button-action-text {\n    background-color: transparent;\n    border-color: $gray-6;\n    color: $white;\n    padding: 0;\n    border-radius: 50%;\n    height: 32px;\n    width: 32px;\n    @extend .d-flex-center;\n    display: inline-flex;\n\n    &:hover {\n      background-color: $gray-6;\n      border-color: $gray-6;\n    }\n  }\n\n  .button-action-text-active {\n    ::ng-deep .button.button-action-text {\n      background-color: $primary;\n      border-color: $primary;\n    }\n  }\n}\n",
                    "styleUrl": "./button-action-text.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<app-button\n        [innerClass]=\"'button-action-text ' + innerClass\"\n        [class.button-action-text-active]=\"active\"\n        [inlineStyle]=\"inlineStyle\"\n        [disabled]=\"disabled\"\n        (click)=\"onClick($event)\">\n  <span class=\"text-uppercase text-tag font-weight-bold\">\n    <ng-content></ng-content>\n  </span>\n</app-button>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-6630312aa6e274ad651c4abb564c1d71",
            "file": "src/app/core/atoms/buttons/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appearance",
                    "defaultValue": "'default'",
                    "line": 16,
                    "type": "\"primary\" | \"secondary\" | \"outline\" | \"ghost\" | \"default\""
                },
                {
                    "name": "behavior",
                    "defaultValue": "'button'",
                    "line": 19,
                    "type": "\"button\" | \"submit\" | \"reset\""
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "line": 22
                },
                {
                    "name": "inlineStyle",
                    "line": 13,
                    "type": "literal type | null"
                },
                {
                    "name": "innerClass",
                    "defaultValue": "''",
                    "line": 10
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "onClick",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-button',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.component.sass']\n})\nexport class ButtonComponent {\n    @Input()\n    innerClass = '';\n\n    @Input()\n    inlineStyle: { [klass: string]: any; } | null;\n\n    @Input()\n    appearance: 'primary' | 'secondary' | 'outline' | 'ghost' | 'default' = 'default';\n\n    @Input()\n    behavior: 'button' | 'submit' | 'reset' = 'button';\n\n    @Input()\n    disabled = false;\n\n    onClick = (_: any) => {};\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables\"\n@import \"src/sass/utilities/text\"\n\n.button\n  height: 38px\n  display: inline-block\n  color: $black\n  text-align: center\n  vertical-align: middle\n  -webkit-user-select: none\n  -moz-user-select: none\n  -ms-user-select: none\n  user-select: none\n  background-color: transparent\n  border: 1px solid transparent\n  padding: 12px 16px\n  border-radius: 4px\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out\n  @extend .text-button\n\n  &.button-disabled\n    color: $gray-4 !important\n    background-color: $gray-2 !important\n    border-color: $gray-2 !important\n\n  &:focus,\n  &:active\n    outline: none\n\n  &.button-primary\n    color: $white\n    background-color: $primary\n    border-color: $primary\n\n    &:hover\n      color: $white\n      background-color: $dark-primary\n      border-color: $dark-primary\n\n\n  &.button-secondary\n    color: $gray-6\n    background-color: $gray-1\n    border-color: $gray-1\n\n    &:hover\n      color: $gray-6\n      background-color: $gray-2\n      border-color: $gray-2\n\n  &.button-outline\n    color: $primary\n    background-color: transparent\n    border-color: $light-primary\n\n    &:hover\n      color: $primary\n      background-color: $light-primary\n      border-color: $light-primary\n\n    &.button-disabled\n      color: $gray-3 !important\n      background-color: transparent !important\n      border-color: $gray-3 !important\n\n  &.button-ghost\n    color: $primary\n    background-color: transparent\n    border-color: transparent\n\n    &:hover\n      color: $dark-primary\n      background-color: transparent\n      border-color: transparent\n\n    &.button-disabled\n      color: $gray-3 !important\n      background-color: transparent !important\n      border-color: transparent !important\n",
                    "styleUrl": "./button.component.sass"
                }
            ],
            "stylesData": "",
            "templateData": "<button\n  class=\"button\"\n  [class]=\"'button-' + appearance\"\n  [class.button-disabled]=\"disabled\"\n  [ngClass]=\"innerClass\"\n  [type]=\"behavior\"\n  [disabled]=\"disabled\"\n  [ngStyle]=\"inlineStyle\"\n  (click)=\"onClick($event)\">\n  <ng-content></ng-content>\n</button>\n"
        },
        {
            "name": "ButtonIconComponent",
            "id": "component-ButtonIconComponent-1a99be7f16cb24957ca478563e56e3e3",
            "file": "src/app/core/atoms/buttons/button-icon/button-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button-icon[iconName]",
            "styleUrls": [
                "./button-icon.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "iconName",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "appearance",
                    "defaultValue": "'default'",
                    "line": 16,
                    "type": "\"primary\" | \"secondary\" | \"outline\" | \"ghost\" | \"default\"",
                    "inheritance": {
                        "file": "ButtonComponent"
                    }
                },
                {
                    "name": "behavior",
                    "defaultValue": "'button'",
                    "line": 19,
                    "type": "\"button\" | \"submit\" | \"reset\"",
                    "inheritance": {
                        "file": "ButtonComponent"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "line": 22,
                    "inheritance": {
                        "file": "ButtonComponent"
                    }
                },
                {
                    "name": "inlineStyle",
                    "line": 13,
                    "type": "literal type | null",
                    "inheritance": {
                        "file": "ButtonComponent"
                    }
                },
                {
                    "name": "innerClass",
                    "defaultValue": "''",
                    "line": 10,
                    "inheritance": {
                        "file": "ButtonComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "onClick",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "inheritance": {
                        "file": "ButtonComponent"
                    }
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { ButtonComponent } from '../button/button.component';\n\n@Component({\n    selector: 'app-button-icon[iconName]',\n    templateUrl: './button-icon.component.html',\n    styleUrls: ['./button-icon.component.scss']\n})\nexport class ButtonIconComponent extends ButtonComponent {\n\n    @Input()\n    iconName: string;\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables\";\n\n:host .button-icon-icon {\n  margin-top: -1px;\n\n  &.button-icon-disabled {\n    ::ng-deep .icon-font {\n      color: $gray-4 !important;\n    }\n  }\n}\n",
                    "styleUrl": "./button-icon.component.scss"
                }
            ],
            "stylesData": "",
            "extends": "ButtonComponent",
            "templateData": "<app-button\n  [innerClass]=\"'button-icon ' + innerClass\"\n  appearance=\"primary\"\n  [behavior]=\"behavior\"\n  [inlineStyle]=\"inlineStyle\"\n  [disabled]=\"disabled\"\n  (click)=\"onClick($event)\">\n  <span class=\"d-inline-flex\">\n    <app-icon class=\"d-inline-block mr-2 button-icon-icon\"\n              [class.button-icon-disabled]=\"disabled\"\n              [fontName]=\"iconName\"\n              fontSize=\"16px\"\n              fontColor=\"white\"></app-icon>\n    <ng-content></ng-content>\n  </span>\n</app-button>\n"
        },
        {
            "name": "CardActionComponent",
            "id": "component-CardActionComponent-e257e8e6cd55d927cbfe2a67be8eddaf",
            "file": "src/app/core/molecules/cards/card-action/card-action.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card-action",
            "styleUrls": [
                "./card-action.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-action.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cardIcon",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-card-action',\n    templateUrl: './card-action.component.html',\n    styleUrls: ['./card-action.component.scss']\n})\nexport class CardActionComponent implements OnInit {\n\n    @Input() cardIcon: string;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables/colors\";\n@import \"src/sass/utilities/display\";\n\n.card-action {\n  background-color: $white;\n  padding: 31px 24px;\n  border: 1px solid $gray-1;\n  border-radius: 8px;\n  cursor: pointer;\n  box-shadow: none;\n  height: 100%;\n\n  .card-action-container {\n    @extend .d-flex-vertical-center;\n  }\n\n  &:hover {\n    box-shadow: 0 20px 40px rgba(9, 39, 85, 0.08);\n  }\n\n  .card-action-icon {\n    display: inline-flex;\n    margin-right: 16px;\n  }\n\n  .card-action-content {\n    flex-basis: 0;\n    flex-grow: 1;\n    max-width: 100%;\n  }\n\n  .card-action-arrow {\n    display: inline-flex;\n    margin-left: 16px;\n  }\n}\n",
                    "styleUrl": "./card-action.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"card-action\">\n  <div class=\"card-action-container\">\n    <div class=\"card-action-icon\">\n      <app-icon [svgName]=\"cardIcon\"\n                svgWidth=\"40px\"></app-icon>\n    </div>\n    <div class=\"card-action-content\">\n      <h4 class=\"text-subtitle-1 mb-3\">\n        <ng-content select=\"[card-title]\"></ng-content>\n      </h4>\n      <p class=\"text-caption text-gray-5 mb-0\">\n        <ng-content select=\"[card-description]\"></ng-content>\n      </p>\n    </div>\n    <div class=\"card-action-arrow\">\n      <app-icon fontName=\"keyboard_arrow_right\"\n                fontSize=\"24px\"></app-icon>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "CardRadioComponent",
            "id": "component-CardRadioComponent-85ffaa6ec14120ea1105576c51f03897",
            "file": "src/app/core/molecules/cards/card-radio/card-radio.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card-radio",
            "styleUrls": [
                "./card-radio.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-radio.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "radioClass",
                    "line": 11,
                    "type": "any",
                    "inheritance": {
                        "file": "RadioComponent"
                    }
                },
                {
                    "name": "radioValue",
                    "line": 10,
                    "type": "any",
                    "inheritance": {
                        "file": "RadioComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ngControl",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "_radioDisabled",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        114
                    ],
                    "inheritance": {
                        "file": "RadioComponent"
                    }
                },
                {
                    "name": "_radioName",
                    "defaultValue": "'radio'",
                    "type": "string | number",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        114
                    ],
                    "inheritance": {
                        "file": "RadioComponent"
                    }
                },
                {
                    "name": "_radioValue",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ],
                    "inheritance": {
                        "file": "RadioComponent"
                    }
                },
                {
                    "name": "ngControl",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        114
                    ],
                    "inheritance": {
                        "file": "RadioComponent"
                    }
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "inheritance": {
                        "file": "RadioComponent"
                    }
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "inheritance": {
                        "file": "RadioComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                },
                {
                    "name": "chooseRadio",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "inheritance": {
                        "file": "RadioComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "inheritance": {
                        "file": "RadioComponent"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "RadioComponent"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "RadioComponent"
                    }
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "RadioComponent"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "RadioComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Optional, Self } from '@angular/core';\nimport { RadioComponent } from '@atoms/radio/radio.component';\nimport { NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-card-radio',\n  templateUrl: './card-radio.component.html',\n  styleUrls: ['./card-radio.component.scss']\n})\nexport class CardRadioComponent extends RadioComponent implements OnInit {\n\n  constructor(@Optional() @Self() public ngControl: NgControl) {\n    super(ngControl);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables/colors\";\n@import \"src/sass/utilities/text\";\n\n:host .card-radio {\n  ::ng-deep .card-radio {\n    & + .radio-mark {\n      top: 12px;\n      left: 12px;\n    }\n\n    & ~ .radio-content {\n      background-color: $white;\n      border: 1px solid $gray-3;\n      border-radius: 4px;\n      padding: 32px 12px;\n      text-align: center;\n      max-width: 153px;\n    }\n\n    &:checked ~ .radio-content {\n      .card-radio-title {\n        color: $gray-6;\n        @extend .text-button\n      }\n    }\n\n  }\n}\n\n.card-radio {\n  .card-radio-title {\n    color: $gray-5;\n    margin-bottom: 10px;\n    @extend .text-label\n  }\n\n  .card-radio-description {\n    color: $gray-4;\n    margin-bottom: 0;\n    @extend .text-caption\n  }\n}\n",
                    "styleUrl": "./card-radio.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "ngControl",
                        "type": "NgControl"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "ngControl",
                        "type": "NgControl",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "RadioComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"card-radio\">\n  <app-radio [radioValue]=\"radioValue\"\n             radioClass=\"card-radio\"\n             name=\"card-radio\"\n             [(ngModel)]=\"_radioValue\"\n             (change)=\"chooseRadio()\">\n    <h4 class=\"card-radio-title\">\n      <ng-content select=\"[card-title]\"></ng-content>\n    </h4>\n    <p class=\"card-radio-description\">\n      <ng-content select=\"[card-description]\"></ng-content>\n    </p>\n  </app-radio>\n</div>\n"
        },
        {
            "name": "CardStaticInformationComponent",
            "id": "component-CardStaticInformationComponent-dc5affe33ce479327cfa401278f4263d",
            "file": "src/app/core/molecules/cards/card-static-information/card-static-information.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card-static-information",
            "styleUrls": [
                "./card-static-information.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-static-information.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "iconName",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-card-static-information',\n    templateUrl: './card-static-information.component.html',\n    styleUrls: ['./card-static-information.component.scss']\n})\nexport class CardStaticInformationComponent implements OnInit {\n\n    @Input() iconName: string;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./card-static-information.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"card-static-information d-flex\">\n\n    <div class=\"static-information-avatar mr-4\">\n        <app-icon [fontName]=\"iconName\"\n                  fontSize=\"24px\"\n                  innerClass=\"text-gray-5\"></app-icon>\n    </div>\n\n    <div class=\"static-information-information\">\n        <div class=\"static-information-title mb-1\">\n            <p class=\"text-caption text-gray-5 mb-0\">\n                <ng-content select=\"[information-title]\"></ng-content>\n            </p>\n        </div>\n        <div class=\"static-information-caption\">\n            <p class=\"text-label mb-0\">\n                <ng-content select=\"[information-caption]\"></ng-content>\n            </p>\n        </div>\n    </div>\n</div>\n"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-dfa3c97ff958f64dbab21cd9009259dd",
            "file": "src/app/core/atoms/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox",
            "styleUrls": [
                "./checkbox.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "line": 19,
                    "type": "boolean"
                },
                {
                    "name": "disabled",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "indeterminate",
                    "line": 28,
                    "type": "boolean"
                },
                {
                    "name": "innerClass",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "name",
                    "defaultValue": "'checkbox'",
                    "line": 15
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_checked",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "_indeterminate",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "ngControl",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "onClick",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "checkboxClick",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "chooseCheckbox",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, Optional, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n    selector: 'app-checkbox',\n    templateUrl: './checkbox.component.html',\n    styleUrls: ['./checkbox.component.sass']\n})\nexport class CheckboxComponent implements OnInit, ControlValueAccessor {\n\n    public _checked: boolean;\n    public _indeterminate: boolean;\n\n    @Input() disabled: boolean;\n    @Input() name = 'checkbox';\n    @Input() innerClass: string;\n\n    @Input('checked')\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    set checked(checked) {\n        this._checked = checked;\n    }\n\n    @Input('indeterminate')\n    get indeterminate(): boolean {\n        return this._indeterminate;\n    }\n\n    set indeterminate(checked) {\n        this._indeterminate = checked;\n    }\n\n    onChange = (_: any) => {};\n\n    onClick = (_: any) => {};\n    onTouched = () => {};\n\n\n    constructor(@Optional() @Self() public ngControl: NgControl) {\n        if (ngControl) {\n            ngControl.valueAccessor = this;\n        }\n    }\n\n    ngOnInit(): void {\n    }\n\n    checkboxClick(event) {\n        this.onClick(event);\n    }\n\n    chooseCheckbox() {\n        this.onChange(this._checked);\n        this._indeterminate = false;\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    writeValue(obj: any): void {\n        this._checked = obj;\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables\"\n@import \"src/sass/mixins\"\n@import \"src/sass/utilities/text\"\n\n.checkbox-container\n  position: relative\n  cursor: pointer\n  display: inline-flex\n  margin: 0\n  @include non-selectable()\n\n  .checkbox\n    position: fixed\n    left: 99999px\n    opacity: 0\n\n    &:checked ~ .checkbox-mark:after\n      top: 2px\n      left: 2px\n      width: 10px\n      height: 10px\n      background-color: $primary\n\n    &.checkbox-indeterminate ~ .checkbox-mark:after\n      top: 5px\n      left: 2px\n      height: 4px\n      width: 10px\n      background-color: $primary\n\n    &[disabled] ~ .checkbox-mark\n      border: 1px solid $gray-2\n      pointer-events: none\n      cursor: default\n\n    &[disabled] ~ .checkbox-content\n      opacity: .5\n\n\n  .checkbox-mark\n    position: absolute\n    top: 0\n    left: 0\n    z-index: 2\n    height: 16px\n    width: 16px\n    border: 1px solid $gray-3\n    background-color: $white\n    border-radius: 2px\n\n    &:after\n      content: \"\"\n      position: absolute\n      top: 4px\n      left: 4px\n      width: 6px\n      height: 6px\n      background: white\n      border: 0\n      transition: top 0.3s, left 0.3s, width 0.3s, height 0.3s\n\n\n  .checkbox-content\n    display: inline-block\n    padding-left: 24px\n    min-height: 16px\n    @extend .text-label\n\n",
                    "styleUrl": "./checkbox.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "ngControl",
                        "type": "NgControl"
                    }
                ],
                "line": 39,
                "jsdoctags": [
                    {
                        "name": "ngControl",
                        "type": "NgControl",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "ControlValueAccessor"
            ],
            "accessors": {
                "checked": {
                    "name": "checked",
                    "setSignature": {
                        "name": "checked",
                        "type": "void",
                        "args": [
                            {
                                "name": "checked",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 23,
                        "jsdoctags": [
                            {
                                "name": "checked",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "indeterminate": {
                    "name": "indeterminate",
                    "setSignature": {
                        "name": "indeterminate",
                        "type": "void",
                        "args": [
                            {
                                "name": "checked",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 32,
                        "jsdoctags": [
                            {
                                "name": "checked",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<label class=\"checkbox-container\">\n  <input\n    type=\"checkbox\"\n    class=\"checkbox\"\n    [class.checkbox-indeterminate]=\"_indeterminate\"\n    [ngClass]=\"innerClass\"\n    [name]=\"name\"\n    [disabled]=\"disabled\"\n    [checked]=\"_checked\"\n    [(ngModel)]=\"_checked\"\n    (change)=\"chooseCheckbox()\"\n    (click)=\"checkboxClick($event)\">\n\n  <span class=\"checkbox-mark\"></span>\n\n  <span class=\"checkbox-content\">\n      <ng-content></ng-content>\n  </span>\n</label>\n"
        },
        {
            "name": "DatepickerHeaderComponent",
            "id": "component-DatepickerHeaderComponent-cd81b7d54bc80d96630102e58579c486",
            "file": "src/app/core/atoms/input-datepicker/components/datepicker-header/datepicker-header.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-datepicker-header",
            "styleUrls": [
                "./datepicker-header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./datepicker-header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_destroyed",
                    "defaultValue": "new Subject<void>()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "nextClicked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                },
                {
                    "name": "previousClicked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, OnDestroy } from '@angular/core';\nimport { MatCalendar } from '@angular/material/datepicker';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-datepicker-header',\n    templateUrl: './datepicker-header.component.html',\n    styleUrls: ['./datepicker-header.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DatepickerHeaderComponent<Moment> implements OnDestroy {\n    private _destroyed = new Subject<void>();\n\n    constructor(\n        private _calendar: MatCalendar<Moment>,\n        private _dateAdapter: DateAdapter<Moment>,\n        @Inject(MAT_DATE_FORMATS) private _dateFormats: any,\n        private changeDetectorRef: ChangeDetectorRef) {\n        _calendar.stateChanges\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => changeDetectorRef.markForCheck());\n    }\n\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n\n    get periodLabel() {\n        return this._dateAdapter\n            .format(this._calendar.activeDate, this._dateFormats.display.monthYearLabel)\n            .toLocaleUpperCase();\n    }\n\n    previousClicked() {\n        this._calendar.activeDate = this._dateAdapter.addCalendarMonths(this._calendar.activeDate, -1);\n    }\n\n    nextClicked() {\n        this._calendar.activeDate = this._dateAdapter.addCalendarMonths(this._calendar.activeDate, 1);\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables/colors\";\n@import \"src/sass/utilities/text\";\n\n.datepicker-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px;\n}\n\n.datepicker-header-actions {\n  display: inline-flex;\n\n  .datepicker-header-previous {\n    margin-right: 16px;\n  }\n\n  .datepicker-header-previous,\n  .datepicker-header-next {\n    cursor: pointer;\n    display: inline-flex;\n  }\n}\n\n.datepicker-header-label {\n  color: $black;\n  @extend .text-subtitle-2;\n}\n\n.example-double-arrow .mat-icon {\n  margin: -22%;\n}\n",
                    "styleUrl": "./datepicker-header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_calendar",
                        "type": "MatCalendar<Moment>"
                    },
                    {
                        "name": "_dateAdapter",
                        "type": "DateAdapter<Moment>"
                    },
                    {
                        "name": "_dateFormats",
                        "type": "any"
                    },
                    {
                        "name": "changeDetectorRef",
                        "type": "ChangeDetectorRef"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "_calendar",
                        "type": "MatCalendar<Moment>",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_dateAdapter",
                        "type": "DateAdapter<Moment>",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_dateFormats",
                        "type": "any",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "changeDetectorRef",
                        "type": "ChangeDetectorRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnDestroy"
            ],
            "accessors": {
                "periodLabel": {
                    "name": "periodLabel",
                    "getSignature": {
                        "name": "periodLabel",
                        "type": "",
                        "returnType": "",
                        "line": 31
                    }
                }
            },
            "templateData": "<div class=\"datepicker-header\">\n\n  <span class=\"datepicker-header-label\">{{periodLabel}}</span>\n\n  <div class=\"datepicker-header-actions\">\n    <span class=\"datepicker-header-previous\"\n      (click)=\"previousClicked()\">\n      <app-icon fontName=\"keyboard_arrow_left\"\n                fontSize=\"24px\"\n                innerClass=\"text-gray-6\"></app-icon>\n    </span>\n    <span class=\"datepicker-header-next\"\n          (click)=\"nextClicked()\">\n      <app-icon fontName=\"keyboard_arrow_right\"\n                fontSize=\"24px\"\n                innerClass=\"text-gray-6\"></app-icon>\n    </span>\n  </div>\n\n</div>\n"
        },
        {
            "name": "FormFieldComponent",
            "id": "component-FormFieldComponent-7822e7301603c478eea59c2e4f2e528e",
            "file": "src/app/core/molecules/form-field/form-field.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-field",
            "styleUrls": [
                "./form-field.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-field.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "formFieldError",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "formFieldErrorComponent",
                    "type": "FormFieldErrorComponent",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "FormFieldErrorComponent, {static: false}"
                        }
                    ]
                },
                {
                    "name": "formFieldLabel",
                    "type": "FormFieldLabelComponent",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "FormFieldLabelComponent"
                        }
                    ]
                },
                {
                    "name": "ngControl",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "NgControl"
                        }
                    ],
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { AfterContentInit, Component, ContentChild } from '@angular/core';\nimport { FormFieldLabelComponent } from '@molecules/form-field/form-field-label/form-field-label.component';\nimport { FormFieldErrorComponent } from '@molecules/form-field/form-field-error/form-field-error.component';\nimport { NgControl } from '@angular/forms';\nimport { InputComponent } from '@atoms/inputs/input/input.component';\n\n@Component({\n    selector: 'app-form-field',\n    templateUrl: './form-field.component.html',\n    styleUrls: ['./form-field.component.scss']\n})\nexport class FormFieldComponent implements AfterContentInit {\n\n    @ContentChild(FormFieldLabelComponent) formFieldLabel!: FormFieldLabelComponent;\n    @ContentChild(FormFieldErrorComponent, {static: false}) formFieldErrorComponent!: FormFieldErrorComponent;\n\n    @ContentChild(NgControl) public ngControl: NgControl;\n\n    public formFieldError: boolean;\n\n    constructor() {\n    }\n\n    ngAfterContentInit(): void {\n        this.ngControl?.valueChanges.subscribe(() => {\n            const valueAccessor = this.ngControl.valueAccessor as InputComponent;\n\n            if (this.ngControl.invalid && this.ngControl.dirty) {\n                this.formFieldError = !!this.formFieldErrorComponent;\n                this.formFieldLabel?.errorField();\n                valueAccessor.error = true;\n            } else {\n                this.formFieldError = false;\n                this.formFieldLabel?.removeErrorField();\n                valueAccessor.error = false;\n            }\n        });\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./form-field.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 19
            },
            "implements": [
                "AfterContentInit"
            ],
            "templateData": "<div class=\"form-field\">\n    <div class=\"form-field-label\" *ngIf=\"formFieldLabel\">\n        <ng-content select=\"app-form-field-label\"></ng-content>\n    </div>\n    <div class=\"form-field-content\">\n        <ng-content></ng-content>\n    </div>\n    <div class=\"form-field-error\" *ngIf=\"formFieldError\">\n        <ng-content select=\"app-form-field-error\"></ng-content>\n    </div>\n</div>\n"
        },
        {
            "name": "FormFieldErrorComponent",
            "id": "component-FormFieldErrorComponent-b634353562b810ae1367b3398ca2ffef",
            "file": "src/app/core/molecules/form-field/form-field-error/form-field-error.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-field-error",
            "styleUrls": [
                "./form-field-error.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-field-error.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-form-field-error',\n    templateUrl: './form-field-error.component.html',\n    styleUrls: ['./form-field-error.component.scss']\n})\nexport class FormFieldErrorComponent {\n\n    constructor() {\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables/colors\";\n\n:host {\n  color: $danger;\n\n  .form-field-error {\n    color: inherit;\n  }\n\n  ::ng-deep app-icon {\n    color: inherit;\n  }\n}\n",
                    "styleUrl": "./form-field-error.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "templateData": "<label class=\"text-caption form-field-error mt-2 mb-0\">\n    <ng-content></ng-content>\n</label>\n"
        },
        {
            "name": "FormFieldLabelComponent",
            "id": "component-FormFieldLabelComponent-eaa0feb43399b3921007bda21fb99f39",
            "file": "src/app/core/molecules/form-field/form-field-label/form-field-label.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-field-label",
            "styleUrls": [
                "./form-field-label.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-field-label.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "elementRef",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "errorField",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                },
                {
                    "name": "removeErrorField",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, Renderer2 } from '@angular/core';\n\n@Component({\n    selector: 'app-form-field-label',\n    templateUrl: './form-field-label.component.html',\n    styleUrls: ['./form-field-label.component.scss']\n})\nexport class FormFieldLabelComponent {\n\n    constructor(\n        public elementRef: ElementRef,\n        private renderer: Renderer2\n    ) {\n    }\n\n    errorField(): void {\n        this.renderer.addClass(this.elementRef.nativeElement, 'text-danger');\n    }\n\n    removeErrorField(): void {\n        this.renderer.removeClass(this.elementRef.nativeElement, 'text-danger');\n\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables/colors\";\n\n:host {\n  color: $gray-5;\n\n  .form-field-label {\n    color: inherit;\n  }\n\n  ::ng-deep app-icon {\n    color: inherit;\n  }\n}\n",
                    "styleUrl": "./form-field-label.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef"
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2"
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<label class=\"text-label form-field-label mb-2\">\n    <ng-content></ng-content>\n</label>\n"
        },
        {
            "name": "HrefComponent",
            "id": "component-HrefComponent-bc5a65b6d8851323cb787af2071f5c28",
            "file": "src/app/core/atoms/links/href/href.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-href",
            "styleUrls": [
                "./href.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./href.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hrefClass",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "hrefTarget",
                    "defaultValue": "'_self'",
                    "line": 16,
                    "type": "\"_blank\" | \"_self\" | \"_parent\" | \"_top\" | \"framename\""
                },
                {
                    "name": "hrefUrl",
                    "line": 13,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-href',\n    templateUrl: './href.component.html',\n    styleUrls: ['./href.component.sass']\n})\nexport class HrefComponent {\n    @Input()\n    hrefClass: string;\n\n    @Input()\n    hrefUrl: string;\n\n    @Input()\n    hrefTarget: '_blank' | '_self' | '_parent' | '_top' | 'framename' = '_self';\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables/colors\"\n\n.href,\n.href:hover\n  text-decoration: none\n  color: $black\n",
                    "styleUrl": "./href.component.sass"
                }
            ],
            "stylesData": "",
            "templateData": "<a class=\"href\"\n   [ngClass]=\"hrefClass\"\n   [href]=\"hrefUrl\"\n   [target]=\"hrefTarget\">\n  <ng-content></ng-content>\n</a>\n"
        },
        {
            "name": "IconsComponent",
            "id": "component-IconsComponent-66d898be92a8a4d8a086e8e1a94adbe4",
            "file": "src/app/core/atoms/icons/icons.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon",
            "styleUrls": [
                "./icon.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "fontColor",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "fontName",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "fontSize",
                    "defaultValue": "'16px'",
                    "line": 12,
                    "type": "\"16px\" | \"24px\" | \"32px\" | \"48px\" | string"
                },
                {
                    "name": "innerClass",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "svgHeight",
                    "line": 16,
                    "type": "\"16px\" | \"24px\" | \"32px\" | \"48px\" | string"
                },
                {
                    "name": "svgName",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "svgWidth",
                    "defaultValue": "'16px'",
                    "line": 15,
                    "type": "\"16px\" | \"24px\" | \"32px\" | \"48px\" | string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-icon',\n    templateUrl: './icon.component.html',\n    styleUrls: ['./icon.component.scss']\n})\nexport class IconsComponent {\n\n    @Input() fontName: string;\n    @Input() fontColor: string;\n    @Input() fontSize: '16px' | '24px' | '32px' | '48px' | string = '16px';\n\n    @Input() svgName: string;\n    @Input() svgWidth: '16px' | '24px' | '32px' | '48px' | string = '16px';\n    @Input() svgHeight: '16px' | '24px' | '32px' | '48px' | string;\n\n    @Input() innerClass: string;\n\n    constructor() {\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables/colors\";\n\n:host {\n  display: contents;\n  color: $black;\n}\n\n.icon-font {\n  width: fit-content;\n  height: fit-content;\n  color: inherit;\n}\n\n.icon-svg {\n  display: inline-flex;\n}\n",
                    "styleUrl": "./icon.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 18
            },
            "templateData": "<ng-container *ngIf=\"fontName\">\n  <mat-icon aria-hidden=\"false\"\n            class=\"icon-font\"\n            [ngClass]=\"innerClass\"\n            [style.color]=\"fontColor\"\n            [style.font-size]=\"fontSize\">{{fontName}}</mat-icon>\n</ng-container>\n\n<ng-container *ngIf=\"svgName\">\n  <mat-icon class=\"icon-svg\"\n            [ngClass]=\"innerClass\"\n            [svgIcon]=\"svgName\"\n            [style.width]=\"svgWidth\"\n            [style.height]=\"(svgHeight || svgWidth)\"></mat-icon>\n</ng-container>\n"
        },
        {
            "name": "InnerSidenavComponent",
            "id": "component-InnerSidenavComponent-c9002a6be43c75a733256c96d9789383",
            "file": "src/app/core/organisms/inner-sidenav/inner-sidenav.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-inner-sidenav",
            "styleUrls": [
                "./inner-sidenav.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./inner-sidenav.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "innerSidenavExpanded",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "line": 16,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_breakpointObserver",
                    "type": "BreakpointObserver",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "innerSidenavMode",
                    "defaultValue": "'side'",
                    "type": "MatDrawerMode",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "matDrawer",
                    "type": "MatDrawer",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'innerSidenav', {static: true}"
                        }
                    ]
                },
                {
                    "name": "subscriptions",
                    "defaultValue": "[]",
                    "type": "Subscription[]",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "innerSidenavClosedEvent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43
                },
                {
                    "name": "innerSidenavOpenedEvent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { MatDrawer, MatDrawerMode } from '@angular/material/sidenav/drawer';\nimport { BreakpointObserver } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-inner-sidenav',\n  templateUrl: './inner-sidenav.component.html',\n  styleUrls: ['./inner-sidenav.component.scss']\n})\nexport class InnerSidenavComponent implements OnInit, OnDestroy {\n  public subscriptions: Subscription[] = [];\n\n  public innerSidenavMode: MatDrawerMode = 'side';\n\n  @Output() innerSidenavExpanded = new EventEmitter<boolean>();\n  @ViewChild('innerSidenav', {static: true}) matDrawer: MatDrawer;\n\n  constructor(\n    public _breakpointObserver: BreakpointObserver,\n  ) {\n  }\n\n  ngOnInit(): void {\n    const subscription = this._breakpointObserver.observe([\n      `(min-width: 1024px)`\n    ]).subscribe((state) => {\n      this.innerSidenavMode = !state.matches ? 'over' : 'side';\n      this.matDrawer.close();\n    });\n    this.subscriptions.push(subscription);\n  }\n\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n  innerSidenavOpenedEvent() {\n    this.innerSidenavExpanded.emit(true);\n  }\n\n  innerSidenavClosedEvent() {\n    this.innerSidenavExpanded.emit(false);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables\";\n@import \"src/sass/mixins/breakpoints\";\n\n.inner-sidenav-container {\n  height: 100%;\n\n  .inner-sidenav {\n    overflow-y: initial;\n    transform: none;\n  }\n\n  .mat-drawer-content {\n    margin-left: 84px !important;\n    @include media-breakpoint-up(lg) {\n      margin-left: 240px !important;\n    }\n  }\n\n  .inner-sidenav-content-close {\n    margin-left: 84px !important;\n  }\n\n  .inner-sidenav-close {\n    visibility: visible !important;\n    transform: none;\n\n    .inner-sidenav-menu {\n      width: 84px;\n    }\n  }\n}\n\n\n.inner-sidenav-menu {\n  width: 240px;\n  height: 100%;\n  background: $gray-1;\n  transition: width .5s;\n  visibility: visible !important;\n\n  .inner-sidenav-button {\n    position: absolute;\n    cursor: pointer;\n    border-radius: 50%;\n    border: 1px solid $gray-3;\n    background-color: $white;\n    height: 24px;\n    width: 24px;\n    right: -12px;\n    top: 58px;\n    z-index: 10;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0;\n    outline: none;\n\n    &.inner-sidenav-button-close {\n      transform: rotate(180deg);\n    }\n\n    .inner-sidenav-icon {\n      color: $gray-4;\n    }\n  }\n}\n",
                    "styleUrl": "./inner-sidenav.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_breakpointObserver",
                        "type": "BreakpointObserver"
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "_breakpointObserver",
                        "type": "BreakpointObserver",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<mat-drawer-container class=\"inner-sidenav-container\">\n  <mat-drawer #innerSidenav\n              [mode]=\"innerSidenavMode\"\n              class=\"inner-sidenav\"\n              (openedStart)=\"innerSidenavOpenedEvent()\"\n              (closedStart)=\"innerSidenavClosedEvent()\"\n              [class.inner-sidenav-close]=\"!innerSidenav.opened\">\n    <div class=\"inner-sidenav-menu\">\n      <button class=\"inner-sidenav-button\"\n              [class.inner-sidenav-button-close]=\"!innerSidenav.opened\"\n              (click)=\"innerSidenav.toggle()\">\n        <app-icon class=\"inner-sidenav-icon\"\n                  fontName=\"keyboard_arrow_right\"></app-icon>\n      </button>\n      <ng-content select=\"[sidenav]\"></ng-content>\n    </div>\n  </mat-drawer>\n  <mat-drawer-content\n    [class.inner-sidenav-content-close]=\"!innerSidenav.opened\">\n    <ng-content select=\"[sidenav-content]\"></ng-content>\n  </mat-drawer-content>\n</mat-drawer-container>\n"
        },
        {
            "name": "InnerSidenavNavigationComponent",
            "id": "component-InnerSidenavNavigationComponent-b37349bd9070a7002082bc8188bb4238",
            "file": "src/app/core/organisms/inner-sidenav/components/inner-sidenav-navigation/inner-sidenav-navigation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-inner-sidenav-navigation",
            "styleUrls": [
                "./inner-sidenav-navigation.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./inner-sidenav-navigation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "navigationIcon",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "navigationRoute",
                    "line": 12,
                    "type": "string[] | string"
                },
                {
                    "name": "navigationText",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-inner-sidenav-navigation',\n    templateUrl: './inner-sidenav-navigation.component.html',\n    styleUrls: ['./inner-sidenav-navigation.component.scss']\n})\nexport class InnerSidenavNavigationComponent implements OnInit {\n\n    @Input() navigationIcon: string;\n    @Input() navigationText: string;\n    @Input() navigationRoute: string[] | string;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables/colors\";\n\n:host .inner-sidenav-navigation-container {\n  .inner-sidenav-text {\n    color: $gray-6;\n    margin-left: 8px;\n  }\n\n  .inner-sidenav-navigation-expansion-icon {\n    color: $gray-6;\n  }\n\n\n  .inner-sidenav-navigation {\n    display: flex;\n    align-items: center;\n    padding: 12px 16px;\n    border-radius: 4px;\n\n    &:hover {\n      background: rgba(0, 61, 153, 0.04);\n    }\n  }\n\n  ::ng-deep .inner-sidenav-navigation-active {\n    .inner-sidenav-navigation {\n      background: rgba(0, 61, 153, 0.04);\n    }\n\n    .inner-sidenav-text,\n    .inner-sidenav-navigation-expansion-icon{\n      color: $primary;\n    }\n  }\n}\n",
                    "styleUrl": "./inner-sidenav-navigation.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-router [router]=\"navigationRoute\"\n            routerActive=\"inner-sidenav-navigation-active\"\n            [routerActiveOptions]=\"{exact: true}\"\n            class=\"inner-sidenav-navigation-container\">\n  <div class=\"inner-sidenav-navigation\">\n    <app-icon class=\"inner-sidenav-navigation-expansion-icon\"\n              [fontName]=\"navigationIcon\"></app-icon>\n    <span class=\"inner-sidenav-text text-label text-truncate\">{{navigationText}}</span>\n  </div>\n</app-router>\n"
        },
        {
            "name": "InnerSidenavNavigationExpansionComponent",
            "id": "component-InnerSidenavNavigationExpansionComponent-613a4bdec5dbb509ade8fa44ae143951",
            "file": "src/app/core/organisms/inner-sidenav/components/inner-sidenav-navigation-expansion/inner-sidenav-navigation-expansion.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-inner-sidenav-navigation-expansion",
            "styleUrls": [
                "./inner-sidenav-navigation-expansion.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./inner-sidenav-navigation-expansion.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "navigationDisabledChildren",
                    "line": 24,
                    "type": "boolean"
                },
                {
                    "name": "navigationIcon",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "navigationRoute",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "navigationRouteOptions",
                    "defaultValue": "{exact: true}",
                    "line": 21,
                    "type": "literal type"
                },
                {
                    "name": "navigationText",
                    "line": 19,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeRoute",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "matExpansionPanel",
                    "type": "MatExpansionPanel",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatExpansionPanel, {static: true}"
                        }
                    ]
                },
                {
                    "name": "navigationDisabledChildren",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "router",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "unsubscribe$",
                    "defaultValue": "new Subject<void>()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34
                },
                {
                    "name": "openMatExpansionPanel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { MatExpansionPanel } from '@angular/material/expansion';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-inner-sidenav-navigation-expansion',\n  templateUrl: './inner-sidenav-navigation-expansion.component.html',\n  styleUrls: ['./inner-sidenav-navigation-expansion.component.scss']\n})\nexport class InnerSidenavNavigationExpansionComponent implements OnInit, OnDestroy {\n\n  private unsubscribe$ = new Subject<void>();\n  public activeRoute: boolean;\n  public navigationDisabledChildren: boolean;\n\n  @Input() navigationIcon: string;\n  @Input() navigationText: string;\n  @Input() navigationRoute: string;\n  @Input() navigationRouteOptions: { exact: boolean; } = {exact: true};\n\n  @Input('navigationDisabledChildren')\n  set navigationDisabledChildren$(disabled: boolean) {\n    this.navigationDisabledChildren = disabled;\n    this.openMatExpansionPanel();\n  }\n\n  @ViewChild(MatExpansionPanel, {static: true}) matExpansionPanel: MatExpansionPanel;\n\n  constructor(public router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.openMatExpansionPanel();\n    this.router.events\n      .pipe(\n        takeUntil(this.unsubscribe$),\n        filter(event => event instanceof NavigationEnd))\n      .subscribe(() => {\n        this.openMatExpansionPanel();\n      });\n  }\n\n  openMatExpansionPanel() {\n    this.activeRoute = this.router.url.includes(this.navigationRoute);\n    if (this.activeRoute && !this.navigationDisabledChildren) {\n      this.matExpansionPanel.open();\n    }\n    if (this.navigationDisabledChildren ||\n      !this.activeRoute && this.matExpansionPanel && this.matExpansionPanel.expanded) {\n      this.matExpansionPanel.close();\n    }\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables/colors\";\n\n:host .inner-sidenav-navigation-expansion-container {\n  ::ng-deep .mat-expansion-panel-body {\n    padding: 0 0 0 40px;\n  }\n\n  ::ng-deep .inner-sidenav-navigation-expansion-content .inner-sidenav-navigation-expansion-child {\n    padding: 13px 0;\n    display: block;\n    color: $gray-4;\n\n    &:hover {\n      color: $gray-6\n    }\n\n    &.inner-sidenav-navigation-active {\n      color: $primary;\n    }\n  }\n}\n\n\n:host .inner-sidenav-navigation-expansion-container {\n  .inner-sidenav-text {\n    color: $gray-6;\n    margin-left: 8px;\n  }\n\n  .inner-sidenav-navigation-expansion-icon {\n    color: $gray-6;\n    transition: transform .3s ease-in-out;\n    display: inline-flex;\n  }\n\n  .inner-sidenav-navigation-expansion-icon-close {\n    transform: rotate(180deg);\n  }\n\n  .inner-sidenav-navigation-expansion {\n    border-radius: 4px;\n    background-color: transparent;\n    box-shadow: none;\n\n    &:hover {\n      background: rgba(0, 61, 153, 0.04);\n    }\n\n    .inner-sidenav-navigation-expansion-header {\n      background: transparent;\n      padding: 12px 16px;\n    }\n\n    .mat-expansion-panel-header-description {\n      display: flex;\n      justify-content: flex-end;\n      margin: 0;\n    }\n  }\n\n  ::ng-deep .inner-sidenav-navigation-expansion-active {\n    .inner-sidenav-navigation-expansion {\n      background: rgba(0, 61, 153, 0.04);\n    }\n\n    .inner-sidenav-text,\n    .inner-sidenav-navigation-expansion-icon {\n      color: $primary;\n    }\n  }\n}\n",
                    "styleUrl": "./inner-sidenav-navigation-expansion.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "navigationDisabledChildren$": {
                    "name": "navigationDisabledChildren$",
                    "setSignature": {
                        "name": "navigationDisabledChildren$",
                        "type": "void",
                        "args": [
                            {
                                "name": "disabled",
                                "type": "boolean"
                            }
                        ],
                        "returnType": "void",
                        "line": 24,
                        "jsdoctags": [
                            {
                                "name": "disabled",
                                "type": "boolean",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<app-router [router]=\"navigationRoute\"\n            routerActive=\"inner-sidenav-navigation-expansion-active\"\n            [routerActiveOptions]=\"navigationRouteOptions\"\n            class=\"inner-sidenav-navigation-expansion-container\">\n  <mat-expansion-panel hideToggle=\"true\"\n                       #innerSidenavNavigationExpansion\n                       [disabled]=\"navigationDisabledChildren\"\n                       class=\"inner-sidenav-navigation-expansion\">\n    <mat-expansion-panel-header collapsedHeight=\"40px\"\n                                expandedHeight=\"40px\"\n                                class=\"inner-sidenav-navigation-expansion-header\">\n      <mat-panel-title class=\"align-items-center\">\n        <app-icon class=\"inner-sidenav-navigation-expansion-icon\"\n                  [fontName]=\"navigationIcon\"></app-icon>\n        <span class=\"inner-sidenav-text text-label text-truncate\">{{navigationText}}</span>\n      </mat-panel-title>\n      <mat-panel-description *ngIf=\"activeRoute\">\n        <app-icon class=\"inner-sidenav-navigation-expansion-icon\"\n                  [class.inner-sidenav-navigation-expansion-icon-close]=\"!innerSidenavNavigationExpansion.expanded\"\n                  fontName=\"keyboard_arrow_down\"></app-icon>\n      </mat-panel-description>\n    </mat-expansion-panel-header>\n\n    <div class=\"inner-sidenav-navigation-expansion-content\"\n         (click)=\"$event.stopPropagation()\">\n      <ng-content></ng-content>\n    </div>\n  </mat-expansion-panel>\n</app-router>\n"
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-7b6fcb729b4363f1dca44d535095eaef",
            "file": "src/app/core/atoms/inputs/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-input",
            "styleUrls": [
                "./input.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "behavior",
                    "defaultValue": "'text'",
                    "line": 20,
                    "type": "\"number\" | \"text\" | \"search\" | \"password\""
                },
                {
                    "name": "error",
                    "line": 24,
                    "type": "boolean"
                },
                {
                    "name": "id",
                    "defaultValue": "'input'",
                    "line": 18
                },
                {
                    "name": "innerClass",
                    "defaultValue": "''",
                    "line": 22
                },
                {
                    "name": "labelClass",
                    "defaultValue": "''",
                    "line": 23
                },
                {
                    "name": "name",
                    "defaultValue": "'input'",
                    "line": 19,
                    "type": "string | number"
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'placeholder'",
                    "line": 21
                },
                {
                    "name": "value",
                    "line": 27,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "inputDisabled",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "inputValue",
                    "defaultValue": "''",
                    "type": "string | number",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "ngControl",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "onBlur",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "onFocus",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "onTouch",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "subscriptions",
                    "defaultValue": "[]",
                    "type": "Subscription[]",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeInputValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean"
                        }
                    ],
                    "optional": true,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string | number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string | number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnDestroy, OnInit, Optional, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n    selector: 'app-input',\n    templateUrl: './input.component.html',\n    styleUrls: ['./input.component.sass']\n})\n\nexport class InputComponent implements ControlValueAccessor, OnInit, OnDestroy {\n\n    public subscriptions: Subscription[] = [];\n    public inputValue: string | number = '';\n    public inputDisabled: boolean;\n\n    @Input() id = 'input';\n    @Input() name: string | number = 'input';\n    @Input() behavior: 'number' | 'text' | 'search' | 'password' = 'text';\n    @Input() placeholder = 'placeholder';\n    @Input() innerClass = '';\n    @Input() labelClass = '';\n    @Input() error: boolean;\n\n    @Input('value')\n    set value(value: string) {\n        this.inputValue = value;\n    }\n\n    onTouch = () => {};\n    onChange = (value: string | number) => {};\n    onBlur = (_: any) => {};\n    onFocus = (_: any) => {};\n\n\n    constructor(@Optional() @Self() public ngControl: NgControl) {\n        if (ngControl) {\n            ngControl.valueAccessor = this;\n        }\n    }\n\n\n    ngOnInit(): void {\n        if (this.ngControl) {\n            if (this.ngControl.name) {\n                this.name = this.ngControl.name;\n            }\n\n            const subscription = this.ngControl.control.valueChanges\n                .subscribe((value) => {\n                    if (this.inputValue === value) {\n                        return;\n                    }\n                    this.writeValue(value);\n                });\n            this.subscriptions.push(subscription);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n    }\n\n    writeValue(value: string | number): void {\n        this.inputValue = `${value}` || '';\n    }\n\n    registerOnChange(fn: () => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouch = fn;\n    }\n\n    setDisabledState?(isDisabled: boolean): void {\n        this.inputDisabled = isDisabled;\n    }\n\n    changeInputValue(): void {\n        this.onChange(this.inputValue);\n        this.onTouch();\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables\"\n@import \"src/sass/utilities/text\"\n@import \"src/sass/mixins\"\n\n.input-label\n  margin-bottom: 0\n\n.input-basic\n  background-color: $white\n  padding: 12px 16px\n  border: 1px solid $gray-3\n  border-radius: 4px\n  width: 100%\n  color: $black\n  height: 38px\n  @extend .text-label\n\n  @include placeholder\n    color: $gray-4\n    @extend .text-label\n\n  &:-webkit-autofill\n    -webkit-text-fill-color: $black\n\n  &.input-error\n    border-color: $danger\n    color: $danger\n\n    &:focus\n      border-color: $danger\n      color: $black\n\n  &:disabled\n    background-color: $gray-2\n    border-color: $gray-3\n    color: $gray-4\n\n\n",
                    "styleUrl": "./input.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "ngControl",
                        "type": "NgControl"
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "ngControl",
                        "type": "NgControl",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor",
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "value": {
                    "name": "value",
                    "setSignature": {
                        "name": "value",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "string"
                            }
                        ],
                        "returnType": "void",
                        "line": 27,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<label class=\"input-label\"\n       [ngClass]=\"labelClass\">\n  <input\n    class=\"input-basic\"\n    [class.input-error]=\"error\"\n    [ngClass]=\"innerClass\"\n    [id]=\"id\"\n    [name]=\"name\"\n    [type]=\"behavior\"\n    [placeholder]=\"placeholder\"\n    [disabled]=\"inputDisabled\"\n    [(ngModel)]=\"inputValue\"\n    (ngModelChange)=\"changeInputValue()\"\n\n    (blur)=\"onBlur($event)\"\n    (focus)=\"onFocus($event)\"/>\n</label>\n"
        },
        {
            "name": "InputDatepickerComponent",
            "id": "component-InputDatepickerComponent-f50b79e9ff6636b92cb382658b8746dd",
            "file": "src/app/core/atoms/input-datepicker/input-datepicker/input-datepicker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: DateAdapter, useClass: CustomDateAdapter, deps: [MAT_DATE_LOCALE] }"
                },
                {
                    "name": "{ provide: MAT_DATE_FORMATS, useValue: MY_FORMATS }"
                }
            ],
            "selector": "app-input-datepicker",
            "styleUrls": [
                "./input-datepicker.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input-datepicker.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "inputFormat",
                    "defaultValue": "'DD/MM/YYYY'",
                    "line": 51
                },
                {
                    "name": "maxDate",
                    "line": 54,
                    "type": "moment.Moment"
                },
                {
                    "name": "minDate",
                    "defaultValue": "moment()",
                    "line": 53
                },
                {
                    "name": "outputFormat",
                    "defaultValue": "'DD/MM/YYYY'",
                    "line": 52
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'dd/mm/aaaa'",
                    "line": 50
                },
                {
                    "name": "value",
                    "line": 57,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "datepickerHeader",
                    "defaultValue": "DatepickerHeaderComponent",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "datepickerName",
                    "defaultValue": "'input-datepicker'",
                    "type": "string | number",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "datepickerSubscribe",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        113
                    ]
                },
                {
                    "name": "datepickerValue",
                    "type": "moment.Moment",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "ngControl",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62
                }
            ],
            "methodsClass": [
                {
                    "name": "changeDatepicker",
                    "args": [
                        {
                            "name": "value",
                            "type": "MatDatepickerInputEvent<moment.Moment>"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "MatDatepickerInputEvent<moment.Moment>",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnDestroy, OnInit, Optional, Self } from '@angular/core';\nimport * as  moment from 'moment';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { DatepickerHeaderComponent } from '../components/datepicker-header/datepicker-header.component';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { Subscription } from 'rxjs';\n\n\nexport class CustomDateAdapter extends MomentDateAdapter {\n    getDayOfWeekNames(style: 'long' | 'short' | 'narrow') {\n        return ['D', 'L', 'M', 'M', 'J', 'V', 'S'];\n    }\n\n    getFirstDayOfWeek(): number {\n        return 1;\n    }\n}\n\nexport const MY_FORMATS = {\n    parse: {\n        dateInput: 'DD/MM/YYYY',\n    },\n    display: {\n        dateInput: 'DD/MM/YYYY',\n        monthYearLabel: 'MMMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n@Component({\n    selector: 'app-input-datepicker',\n    templateUrl: './input-datepicker.component.html',\n    styleUrls: ['./input-datepicker.component.scss'],\n    providers: [\n        {provide: DateAdapter, useClass: CustomDateAdapter, deps: [MAT_DATE_LOCALE]},\n        {provide: MAT_DATE_FORMATS, useValue: MY_FORMATS},\n    ],\n})\nexport class InputDatepickerComponent implements ControlValueAccessor, OnInit, OnDestroy {\n\n    protected datepickerSubscribe: Subscription;\n\n    public datepickerHeader = DatepickerHeaderComponent;\n    public datepickerName: string | number = 'input-datepicker';\n    public datepickerValue: moment.Moment;\n\n    @Input() placeholder = 'dd/mm/aaaa';\n    @Input() inputFormat = 'DD/MM/YYYY';\n    @Input() outputFormat = 'DD/MM/YYYY';\n    @Input() minDate = moment();\n    @Input() maxDate: moment.Moment;\n\n    @Input('value')\n    set _value(value: string) {\n        this.datepickerValue = value ? moment(value, this.inputFormat) : null;\n    }\n\n    onChange = (_: any) => {};\n    onTouched = (_: any) => {};\n\n    constructor(@Optional() @Self() public ngControl: NgControl) {\n        if (ngControl) {\n            ngControl.valueAccessor = this;\n        }\n    }\n\n    ngOnInit(): void {\n        if (this.ngControl) {\n            if (this.ngControl.name) {\n                this.datepickerName = this.ngControl.name;\n            }\n\n            this.datepickerSubscribe = this.ngControl.control.valueChanges.subscribe((value: string) => {\n                const datepickerInput = value ? moment(value, this.inputFormat) : null;\n                if (this.datepickerValue === datepickerInput) {\n                    return;\n                }\n                this.writeValue(value);\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        this.datepickerSubscribe.unsubscribe();\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    writeValue(value: string): void {\n        this.datepickerValue = value ? moment(value, this.inputFormat) : null;\n    }\n\n\n    changeDatepicker(value: MatDatepickerInputEvent<moment.Moment>) {\n        this.datepickerValue = value.value;\n        const datepickerOutput = value ? moment(value.value).format(this.outputFormat) : null;\n        this.onChange(datepickerOutput);\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables/colors\";\n@import \"src/sass/utilities/text\";\n@import \"src/sass/mixins\";\n\n.input-datepicker-container {\n  .input-datepicker-label {\n    margin: 0;\n    position: relative;\n  }\n\n  .input-datepicker-input {\n    background-color: $white;\n    padding: 12px 40px 12px 16px;\n    border: 1px solid $gray-3;\n    border-radius: 4px;\n    color: $black;\n    height: 38px;\n    @extend .text-label;\n\n    @include placeholder {\n      color: $gray-4;\n      @extend .text-label;\n    }\n  }\n}\n\n:host {\n  .input-datepicker-container {\n    .input-datepicker-icon {\n      position: absolute;\n      right: 0;\n      top: 0;\n\n      ::ng-deep {\n        .mat-icon-button {\n          height: 38px;\n          width: auto;\n          padding-right: 16px;\n          padding-left: 12px;\n          outline: none;\n        }\n\n        .mat-button-focus-overlay {\n          display: none;\n        }\n      }\n    }\n  }\n}\n\n",
                    "styleUrl": "./input-datepicker.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "ngControl",
                        "type": "NgControl"
                    }
                ],
                "line": 62,
                "jsdoctags": [
                    {
                        "name": "ngControl",
                        "type": "NgControl",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor",
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "_value": {
                    "name": "_value",
                    "setSignature": {
                        "name": "_value",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "string"
                            }
                        ],
                        "returnType": "void",
                        "line": 57,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<div class=\"input-datepicker-container\">\n  <label class=\"input-datepicker-label\">\n    <input class=\"input-datepicker-input\"\n           [placeholder]=\"placeholder\"\n           [matDatepicker]=\"picker\"\n           [name]=\"datepickerName\"\n           [min]=\"minDate\"\n           [max]=\"maxDate\"\n           [value]=\"datepickerValue\"\n           (dateChange)=\"changeDatepicker($event)\">\n    <mat-datepicker-toggle class=\"input-datepicker-icon\"\n                           [for]=\"picker\"\n                           [disableRipple]=\"true\">\n      <app-icon svgName=\"datepicker\"\n                svgWidth=\"12px\"\n                matDatepickerToggleIcon></app-icon>\n    </mat-datepicker-toggle>\n  </label>\n  <mat-datepicker #picker\n                  [calendarHeaderComponent]=\"datepickerHeader\">\n  </mat-datepicker>\n</div>\n"
        },
        {
            "name": "InputDatepickerRangeComponent",
            "id": "component-InputDatepickerRangeComponent-8ddae36757deb3dcaea2d9b5c9458597",
            "file": "src/app/core/atoms/input-datepicker/input-datepicker-range/input-datepicker-range.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: DateAdapter, useClass: CustomDateAdapter, deps: [MAT_DATE_LOCALE] }"
                },
                {
                    "name": "{ provide: MAT_DATE_FORMATS, useValue: MY_FORMATS }"
                }
            ],
            "selector": "app-input-datepicker-range",
            "styleUrls": [
                "./input-datepicker-range.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input-datepicker-range.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "line": 42
                },
                {
                    "name": "endValue",
                    "line": 52,
                    "type": "string"
                },
                {
                    "name": "iconDisabled",
                    "defaultValue": "false",
                    "line": 43
                },
                {
                    "name": "inputFormat",
                    "defaultValue": "'DD/MM/YYYY'",
                    "line": 38
                },
                {
                    "name": "maxDate",
                    "line": 41,
                    "type": "moment.Moment"
                },
                {
                    "name": "minDate",
                    "defaultValue": "moment()",
                    "line": 40
                },
                {
                    "name": "outputFormat",
                    "defaultValue": "'DD/MM/YYYY'",
                    "line": 39
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'dd/mm/aaaa'",
                    "line": 37
                },
                {
                    "name": "startValue",
                    "line": 46,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "datepickerRangeGroup",
                    "defaultValue": "new FormGroup({\n    startDate: new FormControl(),\n    endDate: new FormControl()\n  })",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "datepickerRangeHeader",
                    "defaultValue": "DatepickerHeaderComponent",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "datepickerRangeName",
                    "defaultValue": "'input-datepicker'",
                    "type": "string | number",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "datepickerRangeSubscribe",
                    "defaultValue": "[]",
                    "type": "Subscription[]",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "datepickerRangeValue",
                    "defaultValue": "{} as IDatepickerRange",
                    "type": "IDatepickerRange",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "ngControl",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 60
                }
            ],
            "methodsClass": [
                {
                    "name": "changeDatepickerRangeValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "IDatepickerRange"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "IDatepickerRange",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnDestroy, OnInit, Optional, Self } from '@angular/core';\nimport { CustomDateAdapter, MY_FORMATS } from '../input-datepicker/input-datepicker.component';\nimport { ControlValueAccessor, FormControl, FormGroup, NgControl } from '@angular/forms';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport * as moment from 'moment';\nimport { Subscription } from 'rxjs';\nimport { DatepickerHeaderComponent } from '../components/datepicker-header/datepicker-header.component';\n\nexport interface IDatepickerRange {\n  startDate: string;\n  endDate: string;\n}\n\n@Component({\n  selector: 'app-input-datepicker-range',\n  templateUrl: './input-datepicker-range.component.html',\n  styleUrls: ['./input-datepicker-range.component.scss'],\n  providers: [\n    {provide: DateAdapter, useClass: CustomDateAdapter, deps: [MAT_DATE_LOCALE]},\n    {provide: MAT_DATE_FORMATS, useValue: MY_FORMATS},\n  ],\n})\nexport class InputDatepickerRangeComponent implements ControlValueAccessor, OnInit, OnDestroy {\n\n  public datepickerRangeSubscribe: Subscription[] = [];\n\n  public datepickerRangeHeader = DatepickerHeaderComponent;\n  public datepickerRangeName: string | number = 'input-datepicker';\n  private datepickerRangeValue: IDatepickerRange = {} as IDatepickerRange;\n\n  public datepickerRangeGroup: FormGroup = new FormGroup({\n    startDate: new FormControl(),\n    endDate: new FormControl()\n  });\n\n\n  @Input() placeholder = 'dd/mm/aaaa';\n  @Input() inputFormat = 'DD/MM/YYYY';\n  @Input() outputFormat = 'DD/MM/YYYY';\n  @Input() minDate = moment();\n  @Input() maxDate: moment.Moment;\n  @Input() disabled = false;\n  @Input() iconDisabled = false;\n\n  @Input('startValue')\n  set _startValue(value: string) {\n    this.datepickerRangeStartControl\n      .setValue(value ? moment(value, this.inputFormat) : null);\n  }\n\n  @Input('endValue')\n  set _endValue(value: string) {\n    this.datepickerRangeEndControl\n      .setValue(value ? moment(value, this.inputFormat) : null);\n  }\n\n\n  onChange = (_: any) => {\n  }\n  onTouched = (_: any) => {\n  }\n\n  constructor(@Optional() @Self() public ngControl: NgControl) {\n    if (ngControl){\n      ngControl.valueAccessor = this;\n    }\n  }\n\n  ngOnInit(): void {\n    this.changeDatepickerRangeValue();\n\n    if (this.ngControl && this.ngControl.name) {\n      this.datepickerRangeName = this.ngControl.name;\n    }\n  }\n\n  ngOnDestroy() {\n    this.datepickerRangeSubscribe.forEach(subscribe => subscribe.unsubscribe());\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  writeValue(value: IDatepickerRange): void {\n    this.datepickerRangeStartControl\n      .setValue(value && value.startDate ? moment(value.startDate, this.inputFormat) : null);\n    this.datepickerRangeEndControl\n      .setValue(value && value.endDate ? moment(value.endDate, this.inputFormat) : null);\n  }\n\n  get datepickerRangeStartControl() {\n    return this.datepickerRangeGroup.get('startDate') as FormControl;\n  }\n\n\n  get datepickerRangeEndControl() {\n    return this.datepickerRangeGroup.get('endDate') as FormControl;\n  }\n\n\n  changeDatepickerRangeValue() {\n    const datepickerRangeSubscribe = this.datepickerRangeGroup.valueChanges\n      .subscribe((value) => {\n        this.datepickerRangeValue.startDate = value && value.startDate ?\n          moment(value.startDate, this.inputFormat).format(this.outputFormat) : null;\n        this.datepickerRangeValue.endDate = value && value.endDate ?\n          moment(value.endDate, this.inputFormat).format(this.outputFormat) : null;\n        this.onChange(this.datepickerRangeValue);\n      });\n    this.datepickerRangeSubscribe.push(datepickerRangeSubscribe);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables/colors\";\n@import \"src/sass/utilities/text\";\n@import \"src/sass/mixins\";\n\n.input-datepicker-range-container {\n  .input-datepicker-range-label {\n    margin: 0;\n    position: relative;\n    background-color: $white;\n    padding-right: 40px;\n    border: 1px solid $gray-3;\n    border-radius: 4px;\n    height: 38px;\n    width: 248px;\n  }\n\n\n  .input-datepicker-range-input {\n    color: $black;\n    height: 38px;\n    padding: 12px 0;\n\n    @include placeholder {\n      color: $gray-4;\n    }\n  }\n}\n\n\n:host {\n  .mat-date-range-input {\n    padding-left: 16px;\n  }\n  .input-datepicker-range-container {\n    .input-datepicker-range-icon {\n      position: absolute;\n      right: 0;\n      top: 0;\n\n      ::ng-deep {\n        .mat-icon-button {\n          height: 38px;\n          width: auto;\n          padding-right: 16px;\n          padding-left: 12px;\n          outline: none;\n        }\n\n        .mat-button-focus-overlay {\n          display: none;\n        }\n      }\n    }\n\n    ::ng-deep {\n      .mat-date-range-input-start-wrapper,\n      .mat-date-range-input-end-wrapper{\n        height: 38px;\n        min-width: 80px;\n      }\n\n      .mat-date-range-input-separator {\n        opacity: 1;\n        color: $gray-3;\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./input-datepicker-range.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "ngControl",
                        "type": "NgControl"
                    }
                ],
                "line": 61,
                "jsdoctags": [
                    {
                        "name": "ngControl",
                        "type": "NgControl",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor",
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "_startValue": {
                    "name": "_startValue",
                    "setSignature": {
                        "name": "_startValue",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "string"
                            }
                        ],
                        "returnType": "void",
                        "line": 46,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "_endValue": {
                    "name": "_endValue",
                    "setSignature": {
                        "name": "_endValue",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "string"
                            }
                        ],
                        "returnType": "void",
                        "line": 52,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "datepickerRangeStartControl": {
                    "name": "datepickerRangeStartControl",
                    "getSignature": {
                        "name": "datepickerRangeStartControl",
                        "type": "",
                        "returnType": "",
                        "line": 96
                    }
                },
                "datepickerRangeEndControl": {
                    "name": "datepickerRangeEndControl",
                    "getSignature": {
                        "name": "datepickerRangeEndControl",
                        "type": "",
                        "returnType": "",
                        "line": 101
                    }
                }
            },
            "templateData": "<div class=\"input-datepicker-range-container\">\n  <label class=\"input-datepicker-range-label\">\n\n    <mat-date-range-input [rangePicker]=\"pickerRange\"\n                          [min]=\"minDate\"\n                          [max]=\"maxDate\"\n                          [formGroup]=\"datepickerRangeGroup\"\n                          [disabled]=\"disabled\"\n                          separator=\"-\">\n      <input matStartDate\n             class=\"input-datepicker-range-input text-label\"\n             formControlName=\"startDate\"\n             [name]=\"datepickerRangeName\"\n             [placeholder]=\"placeholder\">\n      <input matEndDate\n             class=\"input-datepicker-range-input text-label\"\n             formControlName=\"endDate\"\n             [name]=\"datepickerRangeName\"\n             [placeholder]=\"placeholder\">\n    </mat-date-range-input>\n    <mat-datepicker-toggle class=\"input-datepicker-range-icon\"\n                           [for]=\"pickerRange\"\n                           [disableRipple]=\"true\">\n      <app-icon svgName=\"datepicker\"\n                svgWidth=\"12px\"\n                matDatepickerToggleIcon></app-icon>\n    </mat-datepicker-toggle>\n  </label>\n  <mat-date-range-picker #pickerRange\n                         [calendarHeaderComponent]=\"datepickerRangeHeader\"\n                         [disabled]=\"iconDisabled\">\n  </mat-date-range-picker>\n</div>\n"
        },
        {
            "name": "InputNumberComponent",
            "id": "component-InputNumberComponent-511d41c671fc22b2b600c6e185c5ec42",
            "file": "src/app/core/atoms/inputs/input-number/input-number.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-input-number",
            "styleUrls": [
                "./input-number.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./input-number.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "behavior",
                    "defaultValue": "'text'",
                    "line": 20,
                    "type": "\"number\" | \"text\" | \"search\" | \"password\"",
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "error",
                    "line": 24,
                    "type": "boolean",
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "'input'",
                    "line": 18,
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "innerClass",
                    "defaultValue": "''",
                    "line": 22,
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "labelClass",
                    "defaultValue": "''",
                    "line": 23,
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "'input'",
                    "line": 19,
                    "type": "string | number",
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'placeholder'",
                    "line": 21,
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "value",
                    "line": 27,
                    "type": "string",
                    "inheritance": {
                        "file": "InputComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ngControl",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "inputDisabled",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        114
                    ],
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "inputValue",
                    "defaultValue": "''",
                    "type": "string | number",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        114
                    ],
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "ngControl",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        114
                    ],
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "onBlur",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "onFocus",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "onTouch",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "subscriptions",
                    "defaultValue": "[]",
                    "type": "Subscription[]",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ],
                    "inheritance": {
                        "file": "InputComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "changeInputValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeInputValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean"
                        }
                    ],
                    "optional": true,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string | number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string | number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "InputComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit, Optional, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { InputComponent } from '../input/input.component';\n\n\n@Component({\n    selector: 'app-input-number',\n    templateUrl: './input-number.component.html',\n    styleUrls: ['./input-number.component.sass']\n})\n\nexport class InputNumberComponent extends InputComponent implements OnInit, OnDestroy {\n\n    constructor(@Optional() @Self() public ngControl: NgControl) {\n        super(ngControl);\n        if (ngControl) {\n            ngControl.valueAccessor = this;\n        }\n    }\n\n    ngOnInit() {\n        if (this.ngControl) {\n            if (this.ngControl.name) {\n                this.name = this.ngControl.name;\n            }\n            if (this.ngControl.control) {\n                const subscription = this.ngControl.control.valueChanges\n                    .subscribe((value) => {\n                        if (this.inputValue === value) {\n                            return;\n                        }\n                        this.writeValue(value);\n                    });\n                this.subscriptions.push(subscription);\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n\n    writeValue(value: number): void {\n        this.inputValue = value;\n    }\n\n\n    changeInputValue() {\n        if (typeof this.inputValue === 'string') {\n            const parseNumber = parseInt(this.inputValue, 10);\n            this.inputValue = isNaN(parseNumber) ? null : parseNumber;\n        }\n        this.onChange(this.inputValue);\n        this.onTouch();\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables\"\n@import \"src/sass/utilities/text\"\n@import \"src/sass/mixins\"\n\n\\:host .input-number-container\n  margin-bottom: 0\n\n  ::ng-deep .input-number::-webkit-inner-spin-button\n    display: none\n\n",
                    "styleUrl": "./input-number.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "ngControl",
                        "type": "NgControl"
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "ngControl",
                        "type": "NgControl",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "InputComponent",
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<label class=\"input-number-container\"\n       [ngClass]=\"labelClass\">\n  <app-input\n          [labelClass]=\"'input-number-label ' + labelClass\"\n    [innerClass]=\"'input-number ' + innerClass\"\n          [error]=\"error\"\n    [id]=\"id\"\n    [name]=\"name\"\n    behavior=\"number\"\n    [disabled]=\"inputDisabled\"\n    [(ngModel)]=\"inputValue\"\n    (ngModelChange)=\"changeInputValue()\"\n    [placeholder]=\"placeholder\"\n    (blur)=\"onBlur($event)\"\n    (focus)=\"onFocus($event)\"\n    appDigitsOnly>\n  </app-input>\n\n</label>\n"
        },
        {
            "name": "InputSearchComponent",
            "id": "component-InputSearchComponent-11250bd1292d37f049e1e0fee61e13bc",
            "file": "src/app/core/atoms/inputs/input-search/input-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-input-search",
            "styleUrls": [
                "./input-search.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./input-search.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "behavior",
                    "defaultValue": "'text'",
                    "line": 20,
                    "type": "\"number\" | \"text\" | \"search\" | \"password\"",
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "error",
                    "line": 24,
                    "type": "boolean",
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "'input'",
                    "line": 18,
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "innerClass",
                    "defaultValue": "''",
                    "line": 22,
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "labelClass",
                    "defaultValue": "''",
                    "line": 23,
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "'input'",
                    "line": 19,
                    "type": "string | number",
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'placeholder'",
                    "line": 21,
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "value",
                    "line": 27,
                    "type": "string",
                    "inheritance": {
                        "file": "InputComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ngControl",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "inputDisabled",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        114
                    ],
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "inputValue",
                    "defaultValue": "''",
                    "type": "string | number",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        114
                    ],
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "ngControl",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        114
                    ],
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "onBlur",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "onFocus",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "onTouch",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "subscriptions",
                    "defaultValue": "[]",
                    "type": "Subscription[]",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ],
                    "inheritance": {
                        "file": "InputComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                },
                {
                    "name": "changeInputValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean"
                        }
                    ],
                    "optional": true,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "InputComponent"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string | number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string | number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "InputComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Optional, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { InputComponent } from '../input/input.component';\n\n@Component({\n    selector: 'app-input-search',\n    templateUrl: './input-search.component.html',\n    styleUrls: ['./input-search.component.sass']\n})\nexport class InputSearchComponent extends InputComponent implements OnInit {\n\n    constructor(@Optional() @Self() public ngControl: NgControl) {\n        super(ngControl);\n        if (ngControl) {\n            ngControl.valueAccessor = this;\n        }\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables\"\n@import \"src/sass/utilities/text\"\n@import \"src/sass/mixins\"\n\n.input-search-container\n  position: relative\n  margin: 0\n\n  .input-search-icon\n    display: inline-flex\n    position: absolute\n    left: 16px\n    top: 13px\n\n\\:host .input-search-container\n  ::ng-deep .input-search\n    padding: 12px 16px 12px 36px\n\n    &:disabled::-webkit-search-cancel-button\n      display: none\n\n",
                    "styleUrl": "./input-search.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "ngControl",
                        "type": "NgControl"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "ngControl",
                        "type": "NgControl",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "InputComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<label class=\"input-search-container\"\n       [ngClass]=\"labelClass\">\n    <app-input\n            labelClass=\"input-search-label\"\n            behavior=\"search\"\n            [innerClass]=\"'input-search ' + innerClass\"\n            [error]=\"error\"\n            [id]=\"id\"\n            [name]=\"name\"\n            [(ngModel)]=\"inputValue\"\n            (ngModelChange)=\"changeInputValue()\"\n            [placeholder]=\"placeholder\"\n            (blur)=\"onBlur($event)\"\n            (focus)=\"onFocus($event)\">\n    </app-input>\n\n    <app-icon class=\"input-search-icon\"\n              svgName=\"search\"\n              svgWidth=\"12px\"></app-icon>\n</label>\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-47bac0bba32d7a2ff2c8dfbe9d8fc373",
            "file": "src/app/business/account/views/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "LoginForm"
                }
            ],
            "styleUrls": [
                "./login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "capsLock",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "loginForm",
                    "type": "LoginForm",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "resetPasswordPath",
                    "defaultValue": "CONCAT_PATH.recoverPassword",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "submitLogin",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "errorFormRequest",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43
                },
                {
                    "name": "loginFormSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                },
                {
                    "name": "resetFormValidators",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { LoginForm } from '../../form/login.form';\nimport { CONCAT_PATH } from '@parameters/concat-router-path.parameter';\nimport { AuthImplementService } from '@implements/auth/auth-implement.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n    providers: [LoginForm]\n})\nexport class LoginComponent implements OnInit {\n\n    public capsLock: boolean;\n    public submitLogin: boolean;\n\n    public resetPasswordPath = CONCAT_PATH.recoverPassword;\n\n    constructor(\n        public loginForm: LoginForm,\n        private authImplement: AuthImplementService,\n        private router: Router,\n    ) {\n    }\n\n    ngOnInit(): void {\n    }\n\n\n    loginFormSubmit() {\n        this.submitLogin = true;\n        this.authImplement.signIn(\n            this.loginForm.usernameControl.value,\n            this.loginForm.passwordControl.value,\n        )\n            .subscribe(() => {\n                this.router.navigate([CONCAT_PATH.operations]);\n            }, () => {\n                this.errorFormRequest();\n            });\n    }\n\n    errorFormRequest() {\n        this.submitLogin = false;\n        this.loginForm.passwordControl.settingWrongDataValidator();\n        this.loginForm.usernameControl.settingWrongDataValidator();\n        this.resetFormValidators();\n    }\n\n    resetFormValidators() {\n        const subscription = this.loginForm.form$.valueChanges.subscribe(() => {\n            subscription.unsubscribe();\n            this.loginForm.resetFormValidators();\n        });\n    }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./login.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "loginForm",
                        "type": "LoginForm"
                    },
                    {
                        "name": "authImplement",
                        "type": "AuthImplementService"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "loginForm",
                        "type": "LoginForm",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authImplement",
                        "type": "AuthImplementService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-account-card>\n    <ng-container account-card-title>Inicia sesión</ng-container>\n\n    <ng-container account-card-content>\n        <form [formGroup]=\"loginForm.form$\"\n              (ngSubmit)=\"loginFormSubmit()\"\n              [class.container-loader]=\"submitLogin\"\n              class=\"mb-5\">\n\n            <div class=\"user mb-5\">\n                <app-form-field>\n                    <app-form-field-label>Usuario</app-form-field-label>\n                    <app-input formControlName=\"username\"\n                               labelClass=\"d-block\"\n                               id=\"user\"\n                               placeholder=\"Escribe aquí tu usuario\">\n                    </app-input>\n                    <app-form-field-error>{{loginForm.usernameControl.controlError}}</app-form-field-error>\n                </app-form-field>\n            </div>\n\n            <div class=\"password mb-7\">\n                <app-form-field>\n                    <app-form-field-label>Contraseña</app-form-field-label>\n                    <app-input\n                            (appCapsLock)=\"capsLock=$event\"\n                            formControlName=\"password\"\n                            labelClass=\"d-block\"\n                            behavior=\"password\"\n                            id=\"password\"\n                            placeholder=\"Escribe aquí tu contraseña\">\n                    </app-input>\n                    <ng-container *ngIf=\"!!loginForm.passwordControl.hasWrongDataError\">\n                        <app-form-field-error>{{loginForm.passwordControl.controlError}}</app-form-field-error>\n                    </ng-container>\n                </app-form-field>\n                <label *ngIf=\"capsLock\"\n                       class=\"d-flex-vertical-center mt-2\">\n                    <app-icon fontName=\"warning\"\n                              fontSize=\"16px\"\n                              innerClass=\"text-warning\"\n                              class=\"d-inline-flex mr-2\"></app-icon>\n                    <span class=\"text-caption text-warning\">Las mayúsculas están activadas</span>\n                </label>\n            </div>\n\n            <div class=\"submit\">\n                <app-button [disabled]=\"loginForm.form$.invalid\"\n                            innerClass=\"w-100\"\n                            appearance=\"primary\"\n                            behavior=\"submit\">\n                    Ingresa a tu cuenta\n                </app-button>\n            </div>\n\n\n        </form>\n        <div class=\"forgot-password\">\n            <app-router [router]=\"resetPasswordPath\">\n                <app-button innerClass=\"w-100\"\n                            appearance=\"secondary\">\n                    ¿Olvidaste tu contraseña?\n                </app-button>\n            </app-router>\n        </div>\n    </ng-container>\n\n</app-account-card>\n\n\n"
        },
        {
            "name": "MainLoaderComponent",
            "id": "component-MainLoaderComponent-2ba7e684200277ad6e87b7e69a89a2f5",
            "file": "src/app/core/pages/main-loader/main-loader.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-main-loader",
            "styleUrls": [
                "./main-loader.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./main-loader.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isLoaded",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { MainLoaderService } from '@pages/main-loader/main-loader.service';\n\n@Component({\n  selector: 'app-main-loader',\n  templateUrl: './main-loader.component.html',\n  styleUrls: ['./main-loader.component.scss']\n})\nexport class MainLoaderComponent {\n\n  public isLoaded = true;\n\n  constructor(\n    private mainLoaderService: MainLoaderService,\n  ) {\n    this.mainLoaderService.isLoaded$.subscribe(isLoaded => {\n      this.isLoaded = isLoaded;\n    });\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables/colors\";\n\n.app-main-loader {\n  position: fixed;\n  left: 0;\n  top: 0;\n  z-index: 3;\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background-color: $white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  .loader-content {\n    margin-bottom: 15vh;\n\n    .loader-animation {\n      -webkit-animation: 3s rotate linear infinite;\n      animation: 3s rotate linear infinite;\n    }\n\n    .loader-image {\n      height: 100px;\n    }\n\n  }\n\n\n  @keyframes rotate {\n    from {\n      transform: rotate(0deg)\n    }\n\n    to {\n      transform: rotate(360deg)\n    }\n  }\n\n\n  @-webkit-keyframes rotate {\n    from {\n      -webkit-transform: rotate(0deg)\n    }\n\n    to {\n      -webkit-transform: rotate(360deg)\n    }\n  }\n}\n",
                    "styleUrl": "./main-loader.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "mainLoaderService",
                        "type": "MainLoaderService"
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "mainLoaderService",
                        "type": "MainLoaderService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"app-main-loader\" *ngIf=\"isLoaded\">\n  <div class=\"loader-content\">\n    <img src=\"assets/icons/main-logo.svg\"\n         class=\"loader-image d-inline-block mb-4\"\n         alt=\"inkafarma-loading.svg\">\n\n    <p class=\"text-center text-body text-gray-6 m-0\">\n      Cargando...\n    </p>\n  </div>\n</div>\n"
        },
        {
            "name": "NotFoundComponent",
            "id": "component-NotFoundComponent-b1a88fa6fba2daac3112da5692c9c00a",
            "file": "src/app/core/pages/not-found/not-found.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-not-found",
            "styleUrls": [
                "./not-found.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./not-found.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./not-found.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>not-found works!</p>\n"
        },
        {
            "name": "NotSupportedComponent",
            "id": "component-NotSupportedComponent-162cd1d4739cb9b72864d57121ae02b2",
            "file": "src/app/core/pages/not-supported/not-supported.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-not-supported",
            "styleUrls": [
                "./not-supported.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./not-supported.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-supported',\n  templateUrl: './not-supported.component.html',\n  styleUrls: ['./not-supported.component.scss']\n})\nexport class NotSupportedComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./not-supported.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>not-supported works!</p>\n"
        },
        {
            "name": "OpCapacitiesLocalDefaultCapacityCardComponent",
            "id": "component-OpCapacitiesLocalDefaultCapacityCardComponent-e037ebe62bb93d3e668d33cac8e2ced8",
            "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-local-default-capacity-card/op-capacities-local-default-capacity-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-op-capacities-local-default-capacity-card",
            "styleUrls": [
                "./op-capacities-local-default-capacity-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./op-capacities-local-default-capacity-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "localCapacityDetail",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "localCapacityDisabled",
                    "line": 13,
                    "type": "boolean"
                },
                {
                    "name": "localCapacityName",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "localCapacityQuantity",
                    "line": 11,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "localCapacityEditService",
                    "defaultValue": "new EventEmitter()",
                    "line": 16,
                    "type": "EventEmitter"
                },
                {
                    "name": "localCapacityViewMore",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "localCapacityEditServiceEmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                },
                {
                    "name": "localCapacityViewMoreEmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'app-op-capacities-local-default-capacity-card',\n    templateUrl: './op-capacities-local-default-capacity-card.component.html',\n    styleUrls: ['./op-capacities-local-default-capacity-card.component.scss']\n})\nexport class OpCapacitiesLocalDefaultCapacityCardComponent {\n\n    @Input() localCapacityName: string;\n    @Input() localCapacityQuantity: number;\n    @Input() localCapacityDetail: boolean;\n    @Input() localCapacityDisabled: boolean;\n\n    @Output() localCapacityViewMore = new EventEmitter();\n    @Output() localCapacityEditService = new EventEmitter();\n\n    constructor() {\n    }\n\n    localCapacityViewMoreEmit() {\n        this.localCapacityViewMore.emit();\n    }\n\n    localCapacityEditServiceEmit() {\n        this.localCapacityEditService.emit();\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables/colors\";\n\n.local-default-capacity-card {\n  padding: 30px 24px 24px;\n  background-color: $white;\n  border: 1px solid $gray-1;\n  border-radius: 8px;\n  text-align: center;\n\n  &:hover {\n    box-shadow: 0 20px 40px rgba(9, 39, 85, 0.08);\n  }\n\n  .capacity-card-name {\n    color: $gray-5;\n  }\n\n  .capacity-card-quantity,\n  .capacity-card-text {\n    color: $black;\n  }\n\n  &.capacity-card-disabled {\n    background-color: $gray-1;\n    border-color: $gray-2;\n    pointer-events: none;\n\n    .capacity-card-name,\n    .capacity-card-quantity,\n    .capacity-card-text {\n      color: $gray-4;\n    }\n  }\n}\n",
                    "styleUrl": "./op-capacities-local-default-capacity-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 16
            },
            "templateData": "<div class=\"local-default-capacity-card\" [class.capacity-card-disabled]=\"localCapacityDisabled\">\n  <div class=\"row\">\n    <div class=\"col-12 mb-5\">\n      <h5 class=\"text-subtitle-1 capacity-card-name mb-0\">{{localCapacityName}}</h5>\n    </div>\n    <div class=\"col-12 mb-4\">\n      <ng-container *ngIf=\"!localCapacityDisabled\">\n        <h4 class=\"text-h3 capacity-card-quantity mb-0\">{{localCapacityQuantity}}</h4>\n      </ng-container>\n      <ng-container *ngIf=\"localCapacityDisabled\">\n        <h4 class=\"text-h3 capacity-card-quantity mb-0\">--</h4>\n      </ng-container>\n    </div>\n    <div class=\"col-12 mb-6\">\n      <p class=\"text-caption capacity-card-text mb-0\">pedidos por día</p>\n    </div>\n    <div class=\"col-12\">\n      <ng-container *ngIf=\"localCapacityDetail\">\n        <app-tooltip\n          tooltipValue=\"Más detalles\"\n          class=\"d-inline-block mr-4\">\n          <app-button-action-icon iconName=\"launch\"\n                                  (click)=\"localCapacityViewMoreEmit()\"\n                                  [disabled]=\"localCapacityDisabled\"></app-button-action-icon>\n        </app-tooltip>\n      </ng-container>\n\n      <app-tooltip tooltipValue=\"Editar\">\n        <app-button-action-icon iconName=\"edit\"\n                                (click)=\"localCapacityEditServiceEmit()\"\n                                [disabled]=\"localCapacityDisabled\"></app-button-action-icon>\n      </app-tooltip>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "OpCapacitiesLocalDefaultCapacityComponent",
            "id": "component-OpCapacitiesLocalDefaultCapacityComponent-5e73aa22267c636c0ba0fd9389bb880d",
            "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-local-default-capacity/op-capacities-local-default-capacity.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "OpCapacitiesLocalDefaultCapacityDialogService"
                }
            ],
            "selector": "app-op-capacities-local-default-capacity",
            "styleUrls": [
                "./op-capacities-local-default-capacity.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./op-capacities-local-default-capacity.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "capacitiesLocalList",
                    "defaultValue": "[]",
                    "type": "CapacitiesLocal[]",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "capacitiesLocalSelection",
                    "type": "CapacitiesLocal",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "capacitiesServiceType",
                    "defaultValue": "ECapacitiesServiceType",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "capacitiesServiceTypeSelection",
                    "type": "CapacitiesServiceType",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "capacityLocalServiceAmPm",
                    "type": "CapacitiesLocalServiceDefaultCapacity",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "capacityLocalServiceExpress",
                    "type": "CapacitiesLocalServiceDefaultCapacity",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "capacityLocalServiceRet",
                    "type": "CapacitiesLocalServiceDefaultCapacity",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "capacityLocalServiceScheduled",
                    "type": "CapacitiesLocalServiceDefaultCapacity",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "localDefaultCapacitySelection",
                    "type": "CapacitiesLocalServiceDefaultCapacity",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "subscriptions",
                    "defaultValue": "[]",
                    "type": "Subscription[]",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeCapacitiesLocalSelection",
                    "args": [
                        {
                            "name": "capacitiesLocal",
                            "type": "CapacitiesLocal"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "jsdoctags": [
                        {
                            "name": "capacitiesLocal",
                            "type": "CapacitiesLocal",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "localDefaultCapacityEditService",
                    "args": [
                        {
                            "name": "localService",
                            "type": "CapacitiesLocalServiceDefaultCapacity"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 130,
                    "jsdoctags": [
                        {
                            "name": "localService",
                            "type": "CapacitiesLocalServiceDefaultCapacity",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "localDefaultCapacityViewMore",
                    "args": [
                        {
                            "name": "localService",
                            "type": "CapacitiesLocalServiceDefaultCapacity"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 125,
                    "jsdoctags": [
                        {
                            "name": "localService",
                            "type": "CapacitiesLocalServiceDefaultCapacity",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43
                },
                {
                    "name": "openServiceDefaultCapacity",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108
                },
                {
                    "name": "resetLocalServiceList",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92
                },
                {
                    "name": "updateDefaultCapacityLocalList",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53
                },
                {
                    "name": "updateDefaultCapacityLocalServiceList",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68
                },
                {
                    "name": "updateLocalCapacitiesServiceType",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit, Optional, SkipSelf } from '@angular/core';\nimport { OpCapacitiesLocalDefaultCapacityService } from './op-capacities-local-default-capacity.service';\nimport { Subscription } from 'rxjs';\nimport { CapacitiesLocal, CapacitiesLocalServiceDefaultCapacity, CapacitiesServiceType } from '../../models/operations-capacities-responses.model';\nimport { CCapacitiesServiceTypeRoute, ECapacitiesServiceType } from '@models/capacities/capacities-service-type.model';\nimport { OpCapacitiesLocalDefaultCapacityDialogService } from '../op-capacities-local-default-capacity-dialog/op-capacities-local-default-capacity-dialog.service';\nimport { Router } from '@angular/router';\nimport { ECapacityStepGroupOrLocal } from '../op-capacities-step-group-or-local/op-capacities-step-group-or-local.service';\nimport { ECapacitiesStepEditionMode } from '../op-capacities-step-edition-mode/op-capacities-step-edition-mode.service';\nimport { IOpCapacitiesServiceTypeQueryParams } from '../../models/operations-capacities-service-type-query-params.model';\nimport { CONCAT_PATH } from '@parameters/concat-router-path.parameter';\n\n@Component({\n    selector: 'app-op-capacities-local-default-capacity',\n    templateUrl: './op-capacities-local-default-capacity.component.html',\n    styleUrls: ['./op-capacities-local-default-capacity.component.scss'],\n    providers: [\n        OpCapacitiesLocalDefaultCapacityDialogService\n    ]\n})\nexport class OpCapacitiesLocalDefaultCapacityComponent implements OnInit, OnDestroy {\n\n    private subscriptions: Subscription[] = [];\n\n    public capacitiesServiceType = ECapacitiesServiceType;\n    public capacitiesLocalList: CapacitiesLocal[] = [];\n    public capacitiesLocalSelection: CapacitiesLocal;\n    public localDefaultCapacitySelection: CapacitiesLocalServiceDefaultCapacity;\n    public capacitiesServiceTypeSelection: CapacitiesServiceType;\n\n    public capacityLocalServiceAmPm: CapacitiesLocalServiceDefaultCapacity;\n    public capacityLocalServiceExpress: CapacitiesLocalServiceDefaultCapacity;\n    public capacityLocalServiceScheduled: CapacitiesLocalServiceDefaultCapacity;\n    public capacityLocalServiceRet: CapacitiesLocalServiceDefaultCapacity;\n\n    constructor(\n        @Optional() @SkipSelf() private _opCapacitiesLocalDefaultCapacity: OpCapacitiesLocalDefaultCapacityService,\n        private _opCapacitiesLocalDefaultCapacityDialog: OpCapacitiesLocalDefaultCapacityDialogService,\n        private _router: Router\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.updateDefaultCapacityLocalList();\n        this.updateDefaultCapacityLocalServiceList();\n        this.updateLocalCapacitiesServiceType();\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n    }\n\n    updateDefaultCapacityLocalList() {\n        const subscription = this._opCapacitiesLocalDefaultCapacity.localDefaultCapacityLocalList$\n            .subscribe((capacitiesLocalList) => {\n                this.capacitiesLocalList = capacitiesLocalList;\n                this.changeCapacitiesLocalSelection(capacitiesLocalList[0]);\n            });\n        this.subscriptions.push(subscription);\n    }\n\n    changeCapacitiesLocalSelection(capacitiesLocal: CapacitiesLocal) {\n        this.capacitiesLocalSelection = capacitiesLocal;\n        this._opCapacitiesLocalDefaultCapacity.localDefaultCapacityLocalSelection = capacitiesLocal;\n        this.resetLocalServiceList();\n    }\n\n    updateDefaultCapacityLocalServiceList() {\n        const subscription = this._opCapacitiesLocalDefaultCapacity.localDefaultCapacityLocalServiceList$\n            .subscribe((localServiceList: CapacitiesLocalServiceDefaultCapacity[]) => {\n                this.resetLocalServiceList();\n                localServiceList.forEach((localService) => {\n                    switch (localService.serviceType) {\n                        case ECapacitiesServiceType.amPm:\n                            this.capacityLocalServiceAmPm = localService;\n                            break;\n                        case ECapacitiesServiceType.express:\n                            this.capacityLocalServiceExpress = localService;\n                            break;\n                        case ECapacitiesServiceType.scheduled:\n                            this.capacityLocalServiceScheduled = localService;\n                            break;\n                        case ECapacitiesServiceType.ret:\n                            this.capacityLocalServiceRet = localService;\n                            break;\n                    }\n                });\n            });\n        this.subscriptions.push(subscription);\n    }\n\n    resetLocalServiceList() {\n        this.capacityLocalServiceAmPm = null;\n        this.capacityLocalServiceExpress = null;\n        this.capacityLocalServiceScheduled = null;\n        this.capacityLocalServiceRet = null;\n    }\n\n    updateLocalCapacitiesServiceType() {\n        const subscription = this._opCapacitiesLocalDefaultCapacity.localDefaultCapacityList$\n            .subscribe((capacitiesServiceType: CapacitiesServiceType) => {\n                this.capacitiesServiceTypeSelection = capacitiesServiceType;\n                this.openServiceDefaultCapacity();\n            });\n        this.subscriptions.push(subscription);\n    }\n\n    openServiceDefaultCapacity() {\n        const serviceDefaultCapacityDialogRef = this._opCapacitiesLocalDefaultCapacityDialog\n            .openServiceDefaultCapacityDialog(\n                this.capacitiesLocalSelection,\n                this.localDefaultCapacitySelection,\n                this.capacitiesServiceTypeSelection\n            );\n        const subscription = serviceDefaultCapacityDialogRef.afterClosed()\n            .subscribe((editService) => {\n                if (editService) {\n                    this.localDefaultCapacityEditService(this.localDefaultCapacitySelection);\n                }\n            });\n        this.subscriptions.push(subscription);\n    }\n\n\n    localDefaultCapacityViewMore(localService: CapacitiesLocalServiceDefaultCapacity) {\n        this.localDefaultCapacitySelection = localService;\n        this._opCapacitiesLocalDefaultCapacity.localDefaultCapacityLocalServiceTypeSelection = localService;\n    }\n\n    localDefaultCapacityEditService(localService: CapacitiesLocalServiceDefaultCapacity) {\n        const localServiceTypePath = `${CONCAT_PATH.operationCapacities}/${CCapacitiesServiceTypeRoute[localService.serviceType]}`;\n        const localServiceTypeParams = {\n            groupOrLocal: ECapacityStepGroupOrLocal.local,\n            localCode: this.capacitiesLocalSelection.localCode,\n            editionMode: ECapacitiesStepEditionMode.default\n        } as IOpCapacitiesServiceTypeQueryParams;\n        this._router.navigate([localServiceTypePath], {queryParams: localServiceTypeParams});\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".local-capacity-select {\n  display: inline-block;\n  min-width: 200px;\n}\n",
                    "styleUrl": "./op-capacities-local-default-capacity.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_opCapacitiesLocalDefaultCapacity",
                        "type": "OpCapacitiesLocalDefaultCapacityService"
                    },
                    {
                        "name": "_opCapacitiesLocalDefaultCapacityDialog",
                        "type": "OpCapacitiesLocalDefaultCapacityDialogService"
                    },
                    {
                        "name": "_router",
                        "type": "Router"
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "_opCapacitiesLocalDefaultCapacity",
                        "type": "OpCapacitiesLocalDefaultCapacityService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_opCapacitiesLocalDefaultCapacityDialog",
                        "type": "OpCapacitiesLocalDefaultCapacityDialogService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<section class=\"op-capacities-home-local-capacity\">\n  <div class=\"row mb-6\">\n    <div class=\"col-12\">\n      <app-select-search class=\"local-capacity-select\"\n                         placeholder=\"Elije un local\"\n                         [value]=\"capacitiesLocalSelection\"\n                         [optionList]=\"capacitiesLocalList\"\n                         (optionSelected)=\"changeCapacitiesLocalSelection($event)\">\n        <ng-template #optionSelectedTemplate\n                     let-optionSelected>{{optionSelected?.localCode}} {{optionSelected?.name}}</ng-template>\n        <ng-template #optionTemplate\n                     let-option>{{option.localCode}} {{option.name}}</ng-template>\n      </app-select-search>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 col-xl-3 mb-6 mb-xl-0\">\n      <app-op-capacities-local-default-capacity-card\n        localCapacityName=\"AM/PM\"\n        (localCapacityViewMore)=\"localDefaultCapacityViewMore(this.capacityLocalServiceAmPm)\"\n        (localCapacityEditService)=\"localDefaultCapacityEditService(this.capacityLocalServiceAmPm)\"\n        [localCapacityQuantity]=\"capacityLocalServiceAmPm?.capacityQuantity\"\n        [localCapacityDisabled]=\"!capacityLocalServiceAmPm\"\n        [localCapacityDetail]=\"true\">\n      </app-op-capacities-local-default-capacity-card>\n    </div>\n    <div class=\"col-6 col-xl-3 mb-6 mb-xl-0\">\n      <app-op-capacities-local-default-capacity-card\n        localCapacityName=\"Programado\"\n        (localCapacityViewMore)=\"localDefaultCapacityViewMore(this.capacityLocalServiceScheduled)\"\n        (localCapacityEditService)=\"localDefaultCapacityEditService(this.capacityLocalServiceScheduled)\"\n        [localCapacityQuantity]=\"capacityLocalServiceScheduled?.capacityQuantity\"\n        [localCapacityDisabled]=\"!capacityLocalServiceScheduled\"\n        [localCapacityDetail]=\"true\">\n      </app-op-capacities-local-default-capacity-card>\n    </div>\n    <div class=\"col-6 col-xl-3\">\n      <app-op-capacities-local-default-capacity-card\n        localCapacityName=\"Express\"\n        (localCapacityEditService)=\"localDefaultCapacityEditService(this.capacityLocalServiceExpress)\"\n        [localCapacityQuantity]=\"capacityLocalServiceExpress?.capacityQuantity\"\n        [localCapacityDisabled]=\"!capacityLocalServiceExpress\">\n      </app-op-capacities-local-default-capacity-card>\n    </div>\n    <div class=\"col-6 col-xl-3\">\n      <app-op-capacities-local-default-capacity-card\n        localCapacityName=\"RET\"\n        (localCapacityViewMore)=\"localDefaultCapacityViewMore(this.capacityLocalServiceRet)\"\n        (localCapacityEditService)=\"localDefaultCapacityEditService(this.capacityLocalServiceRet)\"\n        [localCapacityQuantity]=\"capacityLocalServiceRet?.capacityQuantity\"\n        [localCapacityDisabled]=\"!capacityLocalServiceRet\"\n        [localCapacityDetail]=\"true\">\n      </app-op-capacities-local-default-capacity-card>\n    </div>\n  </div>\n</section>\n"
        },
        {
            "name": "OpCapacitiesLocalDefaultCapacityDialogComponent",
            "id": "component-OpCapacitiesLocalDefaultCapacityDialogComponent-618a66f3ed637f68fc4521e87deccad0",
            "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-local-default-capacity-dialog/op-capacities-local-default-capacity-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-op-capacities-local-default-capacity-dialog",
            "styleUrls": [
                "./op-capacities-local-default-capacity-dialog.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./op-capacities-local-default-capacity-dialog.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "capacitiesLocal",
                    "line": 16,
                    "type": "CapacitiesLocal"
                },
                {
                    "name": "defaultCapacityTableDataSource",
                    "line": 18,
                    "type": "CapacityServiceTypeSegment[]"
                },
                {
                    "name": "localServiceTypeTable",
                    "line": 17,
                    "type": "CapacitiesLocalServiceDefaultCapacity"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "capacityServiceTypeName",
                    "defaultValue": "CCapacitiesServiceTypeName",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "defaultCapacityTableDisplayedColumns",
                    "defaultValue": "['hour', 'capacity']",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "eCapacityServiceType",
                    "defaultValue": "ECapacitiesServiceType",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CCapacitiesServiceTypeName, ECapacitiesServiceType } from '@models/capacities/capacities-service-type.model';\nimport { CapacitiesLocal, CapacitiesLocalServiceDefaultCapacity, CapacityServiceTypeSegment } from '../../models/operations-capacities-responses.model';\n\n@Component({\n    selector: 'app-op-capacities-local-default-capacity-dialog',\n    templateUrl: './op-capacities-local-default-capacity-dialog.component.html',\n    styleUrls: ['./op-capacities-local-default-capacity-dialog.component.scss']\n})\nexport class OpCapacitiesLocalDefaultCapacityDialogComponent {\n    defaultCapacityTableDisplayedColumns: string[] = ['hour', 'capacity'];\n\n    public capacityServiceTypeName = CCapacitiesServiceTypeName;\n    public eCapacityServiceType = ECapacitiesServiceType;\n\n    @Input() capacitiesLocal: CapacitiesLocal;\n    @Input() localServiceTypeTable: CapacitiesLocalServiceDefaultCapacity;\n    @Input() defaultCapacityTableDataSource: CapacityServiceTypeSegment[];\n\n    constructor() {\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host .operations-capacities-local-default-capacity-dialog .dialog-tab-group {\n  ::ng-deep .mat-tab-labels {\n    padding: 0 40px;\n  }\n}\n\n.operations-capacities-local-default-capacity-dialog {\n  padding: 35px 0 24px;\n\n  .dialog-edit-action {\n    position: absolute;\n    right: 24px;\n    z-index: 2;\n    bottom: 42px;\n  }\n\n  .dialog-tab-group {\n    .dialog-tab-body {\n      padding: 28px 40px;\n      max-height: 260px;\n      overflow-x: auto;\n    }\n\n    .dialog-tab-table {\n      padding-right: 100px;\n    }\n  }\n\n  .dialog-table {\n    .mat-column-capacity {\n      width: 140px;\n      text-align: center;\n    }\n  }\n\n}\n\n\n",
                    "styleUrl": "./op-capacities-local-default-capacity-dialog.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 18
            },
            "templateData": "<section class=\"operations-capacities-local-default-capacity-dialog\">\n\n  <div class=\"dialog-close\">\n    <app-icon fontName=\"close\"\n              fontSize=\"24px\"\n              innerClass=\"text-gray-5 cursor-pointer\"\n              mat-dialog-close></app-icon>\n  </div>\n\n  <div class=\"dialog-edit-action\">\n    <app-button-action-icon iconName=\"edit\"\n                            innerClass=\"cursor-pointer\"\n                            [inlineStyle]=\"{width: '32px', height: '32px'}\"\n                            [mat-dialog-close]=\"true\"></app-button-action-icon>\n  </div>\n\n  <div class=\"content mb-6\">\n    <div class=\"row\">\n      <div class=\"col-2\">\n        <app-icon svgName=\"book\"\n                  svgWidth=\"40px\"></app-icon>\n      </div>\n      <div class=\"col pl-0\">\n        <h1 class=\"text-h5 mb-2\">Por defecto</h1>\n        <p class=\"text-caption text-gray-5 mb-0\">Detalle de capacidad</p>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"dialog-content\">\n    <mat-tab-group class=\"dialog-tab-group\"\n                   [disableRipple]=\"true\">\n      <mat-tab label=\"General\" *ngIf=\"capacitiesLocal && localServiceTypeTable\">\n        <div class=\"dialog-tab-body\">\n          <div class=\"row\">\n            <div class=\"col-12 d-flex\">\n              <app-icon fontName=\"store\"\n                        fontSize=\"24px\"\n                        innerClass=\"text-gray-5\"></app-icon>\n\n              <div class=\"ml-4\">\n                <h5 class=\"text-caption text-gray-5 mb-2\">Local</h5>\n                <p class=\"text-label text-black mb-0\">{{capacitiesLocal.localCode}} {{capacitiesLocal.name}}</p>\n              </div>\n            </div>\n            <div class=\"col-12 d-flex mt-5\">\n              <app-icon fontName=\"motorcycle\"\n                        fontSize=\"24px\"\n                        innerClass=\"text-gray-5\"></app-icon>\n              <div class=\"ml-4\">\n                <h5 class=\"text-caption text-gray-5 mb-2\">Tipo de despacho</h5>\n                <p class=\"text-label text-black mb-0\">{{capacityServiceTypeName[localServiceTypeTable.serviceType]}}</p>\n              </div>\n            </div>\n            <div class=\"col-12 d-flex mt-5\">\n              <app-icon fontName=\"assignment\"\n                        fontSize=\"24px\"\n                        innerClass=\"text-gray-5\"></app-icon>\n              <div class=\"ml-4\">\n                <h5 class=\"text-caption text-gray-5 mb-2\">Total del día</h5>\n                <p class=\"text-label text-black mb-0\">{{localServiceTypeTable.capacityQuantity}} pedidos</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </mat-tab>\n      <mat-tab label=\"Tabla\" *ngIf=\"defaultCapacityTableDataSource\">\n        <div class=\"dialog-tab-body dialog-tab-table\">\n          <table mat-table [dataSource]=\"defaultCapacityTableDataSource\"\n                 class=\"dialog-table\">\n\n            <ng-container matColumnDef=\"hour\">\n              <th mat-header-cell *matHeaderCellDef>Bloque horario</th>\n              <td mat-cell *matCellDef=\"let element; let first = first;\">\n                {{element.segmentHour}}\n              </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"capacity\">\n              <th mat-header-cell *matHeaderCellDef>Capacidad</th>\n              <td mat-cell *matCellDef=\"let element\">\n                <span class=\"text-button\">{{element.segmentCapacity}}</span>\n              </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"defaultCapacityTableDisplayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: defaultCapacityTableDisplayedColumns;\"></tr>\n          </table>\n        </div>\n      </mat-tab>\n    </mat-tab-group>\n  </div>\n\n</section>\n"
        },
        {
            "name": "OpCapacitiesStepCapacityTableComponent",
            "id": "component-OpCapacitiesStepCapacityTableComponent-84a82dc4322c7e0695ed6d18e38b7a7f",
            "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-capacity-table/op-capacities-step-capacity-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "OpCapacitiesStepCapacityTableService"
                },
                {
                    "name": "OpCapacitiesStepCapacityTableFormService"
                }
            ],
            "selector": "app-op-capacities-step-capacity-table",
            "styleUrls": [
                "./op-capacities-step-capacity-table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./op-capacities-step-capacity-table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_opCapacitiesStepCapacityTableForm",
                    "type": "OpCapacitiesStepCapacityTableFormService",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "capacityTableDateRange",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "capacityTableMaxDateRange",
                    "defaultValue": "addUnitOfTime(getDate(), 2, 'M')",
                    "type": "moment.Moment",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "capacityTableMinDateRange",
                    "defaultValue": "getDate()",
                    "type": "moment.Moment",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "capacityTableSaveLoad",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "capacityTableSegments",
                    "type": "ICapacityStepCapacityTableSegments",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "capacityTableStepStatus",
                    "defaultValue": "ECapacityStepStatus.disabled",
                    "type": "ECapacityStepStatus",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "eCapacityStepStatus",
                    "defaultValue": "ECapacityStepStatus",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "subscriptions",
                    "defaultValue": "[]",
                    "type": "Subscription[]",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "cancelCapacityTable",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68
                },
                {
                    "name": "closeCapacityTableStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39
                },
                {
                    "name": "openCapacityTableStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51
                },
                {
                    "name": "resetCapacityTableStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83
                },
                {
                    "name": "saveCapacityTable",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59
                },
                {
                    "name": "updateCapacityTableFormView",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 133
                },
                {
                    "name": "updateCapacityTableRangeLimit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 118
                },
                {
                    "name": "updateCapacityTableSegments",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94
                },
                {
                    "name": "updateCapacityTableStepStatus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit, Optional, SkipSelf } from '@angular/core';\nimport { OpCapacitiesStepCapacityTableFormService } from '../op-capacities-step-capacity-table-form/form/op-capacities-step-capacity-table-form.service';\nimport { ECapacitiesStepCapacityTable, OpCapacitiesStepCapacityTableService } from './op-capacities-step-capacity-table.service';\nimport { Subscription } from 'rxjs';\nimport { ECapacityStepStatus } from '../../models/operations-capacity-step-status.model';\nimport * as moment from 'moment';\nimport { FromFormToCapacityStepCapacityTableSegments, ICapacityStepCapacityTableFormValue, ICapacityStepCapacityTableSegments } from './models/op-capacities-step-capacity-table.model';\nimport { CapacityRangeLimit } from '../../models/operations-capacity-converter.model';\nimport { addUnitOfTime, getDate } from '@helpers/dates.helper';\n\n@Component({\n    selector: 'app-op-capacities-step-capacity-table',\n    templateUrl: './op-capacities-step-capacity-table.component.html',\n    styleUrls: ['./op-capacities-step-capacity-table.component.scss'],\n    providers: [\n        OpCapacitiesStepCapacityTableService,\n        OpCapacitiesStepCapacityTableFormService\n    ]\n})\nexport class OpCapacitiesStepCapacityTableComponent implements OnInit, OnDestroy {\n\n    private subscriptions: Subscription[] = [];\n\n    public capacityTableSaveLoad: boolean;\n    public eCapacityStepStatus = ECapacityStepStatus;\n    public capacityTableStepStatus: ECapacityStepStatus = ECapacityStepStatus.disabled;\n\n    public capacityTableDateRange: boolean;\n    public capacityTableMinDateRange: moment.Moment = getDate();\n    public capacityTableMaxDateRange: moment.Moment = addUnitOfTime(getDate(), 2, 'M');\n    public capacityTableSegments: ICapacityStepCapacityTableSegments;\n\n    constructor(\n        @Optional() @SkipSelf() private _opCapacitiesStepCapacityTable: OpCapacitiesStepCapacityTableService,\n        public _opCapacitiesStepCapacityTableForm: OpCapacitiesStepCapacityTableFormService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.updateCapacityTableFormView();\n        this.updateCapacityTableSegments();\n        this.updateCapacityTableRangeLimit();\n        this.resetCapacityTableStep();\n        this.updateCapacityTableStepStatus();\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n    }\n\n    openCapacityTableStep() {\n        this._opCapacitiesStepCapacityTable.capacityTableStepStatus = this.eCapacityStepStatus.open;\n    }\n\n    closeCapacityTableStep() {\n        this._opCapacitiesStepCapacityTable.capacityTableStepStatus = this.eCapacityStepStatus.close;\n    }\n\n    saveCapacityTable() {\n        if (this._opCapacitiesStepCapacityTableForm.capacityTableForm$.valid) {\n            this.capacityTableSaveLoad = true;\n            this._opCapacitiesStepCapacityTable.capacityTableSave = new FromFormToCapacityStepCapacityTableSegments(\n                this._opCapacitiesStepCapacityTableForm.capacityTableForm$.value as ICapacityStepCapacityTableFormValue\n            );\n        }\n    }\n\n    cancelCapacityTable() {\n        this._opCapacitiesStepCapacityTable.capacityTableCancel = true;\n    }\n\n\n    updateCapacityTableStepStatus() {\n        const subscription = this._opCapacitiesStepCapacityTable.capacityTableStepStatus$\n            .subscribe((eCapacityStepStatus: ECapacityStepStatus) => {\n                if (this.capacityTableStepStatus !== eCapacityStepStatus) {\n                    this.capacityTableStepStatus = eCapacityStepStatus;\n                }\n            });\n        this.subscriptions.push(subscription);\n    }\n\n    resetCapacityTableStep() {\n        const subscription = this._opCapacitiesStepCapacityTable.capacityTableResetStepStatus$\n            .subscribe(() => {\n                this.capacityTableDateRange = false;\n                this.capacityTableSaveLoad = false;\n                this.capacityTableSegments = null;\n                this._opCapacitiesStepCapacityTableForm.resetForm();\n            });\n        this.subscriptions.push(subscription);\n    }\n\n    updateCapacityTableSegments() {\n        const subscription = this._opCapacitiesStepCapacityTable.capacityTableSegments$\n            .subscribe((capacityTableSegments: ICapacityStepCapacityTableSegments) => {\n                this.capacityTableSegments = capacityTableSegments;\n                this._opCapacitiesStepCapacityTableForm.capacitySegmentList.clear();\n\n                if (capacityTableSegments && capacityTableSegments.capacitySegmentList) {\n\n                    capacityTableSegments.capacitySegmentList.forEach(segment => {\n                        const capacitySegmentListGroup = this._opCapacitiesStepCapacityTableForm.capacitySegmentListGroup;\n                        this._opCapacitiesStepCapacityTableForm.segmentHourByGroup(capacitySegmentListGroup)\n                            .setValue(segment && segment.segmentHour ? segment.segmentHour : '');\n                        this._opCapacitiesStepCapacityTableForm.segmentCapacityByGroup(capacitySegmentListGroup)\n                            .setValue(segment && segment.segmentCapacity ? segment.segmentCapacity : 0);\n                        this._opCapacitiesStepCapacityTableForm.segmentValueByGroup(capacitySegmentListGroup)\n                            .setValue(segment && segment.segmentValue ? segment.segmentValue : '');\n\n                        this._opCapacitiesStepCapacityTableForm.capacitySegmentList.push(capacitySegmentListGroup);\n                    });\n                }\n            });\n        this.subscriptions.push(subscription);\n    }\n\n    updateCapacityTableRangeLimit() {\n        const subscription = this._opCapacitiesStepCapacityTable.capacityTableRangeLimit$\n            .subscribe((capacityRangeLimit: CapacityRangeLimit) => {\n                const minDate = getDate(capacityRangeLimit.startDate, 'YYYY-MM-DD');\n                const maxDate = getDate(capacityRangeLimit.endDate, 'YYYY-MM-DD');\n                if (minDate.isValid()) {\n                    this.capacityTableMinDateRange = minDate;\n                }\n                if (maxDate.isValid()) {\n                    this.capacityTableMaxDateRange = maxDate;\n                }\n            });\n        this.subscriptions.push(subscription);\n    }\n\n    updateCapacityTableFormView() {\n        const subscription = this._opCapacitiesStepCapacityTable.capacityTableFormView$\n            .subscribe((eCapacitiesStepCapacityTable: ECapacitiesStepCapacityTable) => {\n                switch (eCapacitiesStepCapacityTable) {\n                    case ECapacitiesStepCapacityTable.daysRange:\n                        this._opCapacitiesStepCapacityTableForm.capacityRange.enable();\n                        break;\n                    case ECapacitiesStepCapacityTable.hourlyCapacity:\n                        this._opCapacitiesStepCapacityTableForm.capacityRange.disable();\n                        break;\n                }\n                this.capacityTableDateRange = this._opCapacitiesStepCapacityTableForm.capacityRange.enabled;\n            });\n        this.subscriptions.push(subscription);\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card-step-content {\n  padding: 20px 16px;\n}\n\n.card-step-content-disabled {\n  pointer-events: none;\n  filter: grayscale(100%);\n  opacity: 0.8;\n  display: block;\n}\n",
                    "styleUrl": "./op-capacities-step-capacity-table.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_opCapacitiesStepCapacityTable",
                        "type": "OpCapacitiesStepCapacityTableService"
                    },
                    {
                        "name": "_opCapacitiesStepCapacityTableForm",
                        "type": "OpCapacitiesStepCapacityTableFormService"
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "_opCapacitiesStepCapacityTable",
                        "type": "OpCapacitiesStepCapacityTableService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_opCapacitiesStepCapacityTableForm",
                        "type": "OpCapacitiesStepCapacityTableFormService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<app-step stepId=\"3\"\n          stepTitle=\"Capacidad\"\n          [class.card-step-content-disabled]=\"capacityTableSaveLoad\"\n          [stepExpandedToggle]=\"capacityTableStepStatus === eCapacityStepStatus.open\"\n          [stepDisabled]=\"capacityTableStepStatus === eCapacityStepStatus.disabled  || capacityTableSaveLoad\"\n          [saveButtonDisabled]=\"!_opCapacitiesStepCapacityTableForm.capacityTableForm$.valid || capacityTableSaveLoad\"\n          (stepOpenEvent)=\"openCapacityTableStep()\"\n          (stepCloseEvent)=\"closeCapacityTableStep()\"\n          (saveButtonEvent)=\"saveCapacityTable()\"\n          (cancelButtonEvent)=\"cancelCapacityTable()\">\n  <div class=\"card-step-content\">\n    <form [formGroup]=\"_opCapacitiesStepCapacityTableForm.capacityTableForm$\">\n      <div class=\"row\">\n\n        <div class=\"col-12 mb-5\" *ngIf=\"capacityTableDateRange\">\n          <label class=\"text-caption text-gray-5 mb-2\">Selecciona días</label>\n          <app-input-datepicker-range\n            formControlName=\"capacityRange\"\n            outputFormat=\"DD-MM-YYYY\"\n            [minDate]=\"capacityTableMinDateRange\"\n            [maxDate]=\"capacityTableMaxDateRange\">\n          </app-input-datepicker-range>\n        </div>\n\n        <div class=\"col-12\">\n          <app-op-capacities-step-capacity-table-form>\n          </app-op-capacities-step-capacity-table-form>\n        </div>\n\n      </div>\n    </form>\n  </div>\n</app-step>\n"
        },
        {
            "name": "OpCapacitiesStepCapacityTableFormComponent",
            "id": "component-OpCapacitiesStepCapacityTableFormComponent-b3ae443bf7a2359c2b241069139490e4",
            "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-capacity-table-form/op-capacities-step-capacity-table-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "OpCapacitiesStepCapacityTableFormService"
                }
            ],
            "selector": "app-op-capacities-step-capacity-table-form",
            "styleUrls": [
                "./op-capacities-step-capacity-table-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./op-capacities-step-capacity-table-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_opCapacitiesStepCapacityTableForm",
                    "type": "OpCapacitiesStepCapacityTableFormService",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "SkipSelf",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "capacityTableDataSource",
                    "defaultValue": "new BehaviorSubject<FormGroup[]>([])",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "capacityTableDisplayedColumns",
                    "defaultValue": "['value', 'hour', 'capacity']",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "capacityTableSelection",
                    "defaultValue": "new SelectionModel<FormGroup>(true, [])",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "applyCapacity",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45
                },
                {
                    "name": "isAllSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 32
                },
                {
                    "name": "masterToggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                },
                {
                    "name": "updateView",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Optional, SkipSelf } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { OpCapacitiesStepCapacityTableFormService } from './form/op-capacities-step-capacity-table-form.service';\n\n@Component({\n  selector: 'app-op-capacities-step-capacity-table-form',\n  templateUrl: './op-capacities-step-capacity-table-form.component.html',\n  styleUrls: ['./op-capacities-step-capacity-table-form.component.scss'],\n  providers: [OpCapacitiesStepCapacityTableFormService]\n})\nexport class OpCapacitiesStepCapacityTableFormComponent implements OnInit {\n\n  capacityTableDisplayedColumns: string[] = ['value', 'hour', 'capacity'];\n  capacityTableDataSource = new BehaviorSubject<FormGroup[]>([]);\n  capacityTableSelection = new SelectionModel<FormGroup>(true, []);\n\n  constructor(\n    @Optional() @SkipSelf() public _opCapacitiesStepCapacityTableForm: OpCapacitiesStepCapacityTableFormService\n  ) {\n  }\n\n  ngOnInit() {\n    this._opCapacitiesStepCapacityTableForm.capacitySegmentList.valueChanges\n      .subscribe(() => {\n        this.updateView();\n        this.capacityTableSelection.clear();\n      });\n  }\n\n  isAllSelected() {\n    const numSelected = this.capacityTableSelection.selected.length;\n    const numRows = this._opCapacitiesStepCapacityTableForm.capacitySegmentList.controls.length;\n    return numSelected === numRows;\n  }\n\n  masterToggle() {\n    this.isAllSelected() ?\n      this.capacityTableSelection.clear() :\n      this._opCapacitiesStepCapacityTableForm.capacitySegmentList.controls\n        .forEach((formGroup: FormGroup) => this.capacityTableSelection.select(formGroup));\n  }\n\n  applyCapacity() {\n    this.capacityTableSelection.selected.forEach((row: FormGroup) => {\n      this._opCapacitiesStepCapacityTableForm.segmentCapacityByGroup(row)\n        .patchValue(this._opCapacitiesStepCapacityTableForm.capacityForSelection.value);\n    });\n  }\n\n  updateView() {\n    this.capacityTableDataSource.next(this._opCapacitiesStepCapacityTableForm.capacitySegmentList.controls as FormGroup[]);\n  }\n\n  get totalCapacity() {\n    return this._opCapacitiesStepCapacityTableForm.capacitySegmentList.controls.map((formGroup: FormGroup) => {\n      return this._opCapacitiesStepCapacityTableForm.segmentCapacityByGroup(formGroup);\n    })\n      .reduce((acc, value: FormControl) => acc + value.value, 0);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".capacity-table-input {\n  display: inline-block;\n  width: 75px;\n}\n\n.capacity-table {\n  .mat-column-value {\n    width: 64px;\n  }\n\n  .mat-column-capacity {\n    width: 110px;\n    text-align: center;\n  }\n}\n",
                    "styleUrl": "./op-capacities-step-capacity-table-form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_opCapacitiesStepCapacityTableForm",
                        "type": "OpCapacitiesStepCapacityTableFormService"
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "_opCapacitiesStepCapacityTableForm",
                        "type": "OpCapacitiesStepCapacityTableFormService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "totalCapacity": {
                    "name": "totalCapacity",
                    "getSignature": {
                        "name": "totalCapacity",
                        "type": "",
                        "returnType": "",
                        "line": 56
                    }
                }
            },
            "templateData": "<form [formGroup]=\"_opCapacitiesStepCapacityTableForm.capacityTableForm$\">\n  <div class=\"row\">\n\n    <div class=\"col-12\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <label class=\"text-caption text-gray-5 mb-2 d-block\">Edita capacidades</label>\n        </div>\n\n        <div class=\"col-4 mb-5\">\n          <app-input-number\n            formControlName=\"capacityForSelection\"\n            placeholder=\"10\"></app-input-number>\n        </div>\n\n        <div class=\"col-8 mb-5\">\n          <app-button appearance=\"outline\"\n                      [disabled]=\"_opCapacitiesStepCapacityTableForm.capacityForSelection.value === null ||\n                                  _opCapacitiesStepCapacityTableForm.capacityForSelection.invalid ||\n                                  !capacityTableSelection.selected.length\"\n                      (click)=\"applyCapacity()\">\n            Aplicar a selección\n          </app-button>\n        </div>\n      </div>\n    </div>\n\n\n    <div class=\"col-12 mb-5\" *ngIf=\"_opCapacitiesStepCapacityTableForm.capacitySegmentList?.controls.length\">\n      <table mat-table [dataSource]=\"capacityTableDataSource\"\n             class=\"capacity-table\"\n             formArrayName=\"capacitySegmentList\">\n\n        <ng-container matColumnDef=\"value\">\n          <th mat-header-cell *matHeaderCellDef>\n            <app-checkbox (change)=\"$event ? masterToggle() : null\"\n                          [checked]=\"capacityTableSelection.hasValue() && isAllSelected()\"\n                          [indeterminate]=\"capacityTableSelection.hasValue() && !isAllSelected()\">\n            </app-checkbox>\n          </th>\n          <td mat-cell *matCellDef=\"let row\">\n            <app-checkbox (click)=\"$event.stopPropagation()\"\n                          (change)=\"$event ? capacityTableSelection.toggle(row) : null\"\n                          [checked]=\"capacityTableSelection.isSelected(row)\">\n            </app-checkbox>\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"hour\">\n          <th mat-header-cell *matHeaderCellDef>Bloque horario</th>\n          <td mat-cell *matCellDef=\"let element; let index = index\" [formGroupName]=\"index\">{{element.value.segmentHour}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"capacity\">\n          <th mat-header-cell *matHeaderCellDef>Capacidad</th>\n          <td mat-cell *matCellDef=\"let element; let index = index\" [formGroupName]=\"index\">\n            <app-input-number class=\"capacity-table-input\"\n                              formControlName=\"segmentCapacity\"\n                              placeholder=\"10\"\n                              (click)=\"$event.stopPropagation()\">\n            </app-input-number>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"capacityTableDisplayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: capacityTableDisplayedColumns;\"\n            (click)=\"capacityTableSelection.toggle(row)\">\n        </tr>\n      </table>\n    </div>\n\n    <div class=\"col-12\">\n      <p class=\"text-subtitle-2 text-primary text-center mb-0\">Capacidad total <span class=\"ml-3\">{{totalCapacity}}</span></p>\n    </div>\n  </div>\n</form>\n"
        },
        {
            "name": "OpCapacitiesStepEditionModeComponent",
            "id": "component-OpCapacitiesStepEditionModeComponent-e42c67437f15e6440668254a3c17ef5b",
            "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-edition-mode/op-capacities-step-edition-mode.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "OpCapacitiesStepEditionModeService"
                }
            ],
            "selector": "app-op-capacities-step-edition-mode",
            "styleUrls": [
                "./op-capacities-step-edition-mode.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./op-capacities-step-edition-mode.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "eCapacityStepStatus",
                    "defaultValue": "ECapacityStepStatus",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "editionModeSaveLoad",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "editionModeSaveSelected",
                    "type": "ECapacitiesStepEditionMode",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "editionModeSelection",
                    "type": "ECapacitiesStepEditionMode",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "editionModeStepStatus",
                    "defaultValue": "ECapacityStepStatus.disabled",
                    "type": "ECapacityStepStatus",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "eEditionMode",
                    "defaultValue": "ECapacitiesStepEditionMode",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "eEditionModeName",
                    "defaultValue": "CCapacitiesStepEditionModeName",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "subscriptions",
                    "defaultValue": "[]",
                    "type": "Subscription[]",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "cancelEditionMode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88
                },
                {
                    "name": "closeEditionModeStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35
                },
                {
                    "name": "openEditionModeStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72
                },
                {
                    "name": "resetEditionModeStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62
                },
                {
                    "name": "saveEditionMode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82
                },
                {
                    "name": "updateEditionModeStepStatus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { ChangeDetectorRef, Component, OnDestroy, OnInit, Optional, SkipSelf } from '@angular/core';\nimport { ECapacitiesStepEditionMode, OpCapacitiesStepEditionModeService } from './op-capacities-step-edition-mode.service';\nimport { ECapacityStepStatus } from '../../models/operations-capacity-step-status.model';\nimport { Subscription } from 'rxjs';\n\nconst CCapacitiesStepEditionModeName = {\n  [ECapacitiesStepEditionMode.calendar]: 'Calendario',\n  [ECapacitiesStepEditionMode.default]: 'Por defecto',\n};\n\n@Component({\n  selector: 'app-op-capacities-step-edition-mode',\n  templateUrl: './op-capacities-step-edition-mode.component.html',\n  styleUrls: ['./op-capacities-step-edition-mode.component.scss'],\n  providers: [OpCapacitiesStepEditionModeService]\n})\nexport class OpCapacitiesStepEditionModeComponent implements OnInit, OnDestroy {\n\n  private subscriptions: Subscription[] = [];\n\n  eCapacityStepStatus = ECapacityStepStatus;\n  editionModeStepStatus: ECapacityStepStatus = ECapacityStepStatus.disabled;\n  eEditionMode = ECapacitiesStepEditionMode;\n  eEditionModeName = CCapacitiesStepEditionModeName;\n  editionModeSaveSelected: ECapacitiesStepEditionMode;\n  editionModeSelection: ECapacitiesStepEditionMode;\n  editionModeSaveLoad: boolean;\n\n  constructor(\n    @Optional() @SkipSelf() private _opCapacitiesStepEditionMode: OpCapacitiesStepEditionModeService,\n    private _changeDetectorRef: ChangeDetectorRef\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.updateEditionModeStepStatus();\n    this.resetEditionModeStep();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n  updateEditionModeStepStatus() {\n    const subscription = this._opCapacitiesStepEditionMode.editionModeStepStatus$\n      .subscribe((eCapacityStepStatus: ECapacityStepStatus) => {\n        if (this.editionModeStepStatus !== eCapacityStepStatus) {\n          this.editionModeStepStatus = eCapacityStepStatus;\n\n          if (this._opCapacitiesStepEditionMode.defaultEditionModeSelectionSaved && eCapacityStepStatus === ECapacityStepStatus.open) {\n            this._opCapacitiesStepEditionMode.defaultEditionModeSelectionSaved = false;\n            this.saveEditionMode();\n            this._opCapacitiesStepEditionMode.editionModeStepStatus = this.eCapacityStepStatus.readonly;\n          }\n\n          this._changeDetectorRef.detectChanges();\n        }\n      });\n    this.subscriptions.push(subscription);\n  }\n\n  resetEditionModeStep() {\n    const subscription = this._opCapacitiesStepEditionMode.editionModeResetStepStatus$\n      .subscribe(() => {\n        this.editionModeSaveLoad = false;\n        this.editionModeSaveSelected = null;\n        this.editionModeSelection = this._opCapacitiesStepEditionMode.defaultEditionModeSelection;\n      });\n    this.subscriptions.push(subscription);\n  }\n\n  openEditionModeStep() {\n    this._opCapacitiesStepEditionMode.editionModeStepStatus = this.eCapacityStepStatus.open;\n  }\n\n  closeEditionModeStep() {\n    this.editionModeSaveLoad = false;\n    this.editionModeSelection = this.editionModeSaveSelected || ECapacitiesStepEditionMode.calendar;\n    this._opCapacitiesStepEditionMode.editionModeStepStatus = this.eCapacityStepStatus.close;\n  }\n\n  saveEditionMode() {\n    this.editionModeSaveLoad = true;\n    this.editionModeSaveSelected = this.editionModeSelection;\n    this._opCapacitiesStepEditionMode.editionModeSave = this.editionModeSelection;\n  }\n\n  cancelEditionMode() {\n    this._opCapacitiesStepEditionMode.editionModeCancel = true;\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card-step-content {\n  padding: 20px 16px;\n}\n\n.card-step-content-disabled {\n  pointer-events: none;\n  filter: grayscale(100%);\n  opacity: 0.8;\n  display: block;\n}\n",
                    "styleUrl": "./op-capacities-step-edition-mode.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_opCapacitiesStepEditionMode",
                        "type": "OpCapacitiesStepEditionModeService"
                    },
                    {
                        "name": "_changeDetectorRef",
                        "type": "ChangeDetectorRef"
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "_opCapacitiesStepEditionMode",
                        "type": "OpCapacitiesStepEditionModeService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_changeDetectorRef",
                        "type": "ChangeDetectorRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<app-step stepId=\"2\"\n          stepTitle=\"Modo de edición\"\n          saveButtonText=\"Continuar\"\n          [class.card-step-content-disabled]=\"editionModeStepStatus === eCapacityStepStatus.open && editionModeSaveLoad\"\n          [stepExpandedToggle]=\"editionModeStepStatus === eCapacityStepStatus.open\"\n          [stepReadonly]=\"editionModeStepStatus === eCapacityStepStatus.readonly || editionModeSaveLoad\"\n          [stepDisabled]=\"editionModeStepStatus === eCapacityStepStatus.disabled || editionModeSaveLoad\"\n          [stepDescription]=\"eEditionModeName[editionModeSaveSelected]\"\n          [saveButtonDisabled]=\"!editionModeSelection || editionModeSaveLoad\"\n          (stepOpenEvent)=\"openEditionModeStep()\"\n          (stepCloseEvent)=\"closeEditionModeStep()\"\n          (saveButtonEvent)=\"saveEditionMode()\"\n          (cancelButtonEvent)=\"cancelEditionMode()\">\n  <div class=\"card-step-content d-flex justify-content-around\">\n    <div class=\"mr-4\">\n      <app-card-radio [radioValue]=\"eEditionMode.default\"\n                      [(ngModel)]=\"editionModeSelection\">\n        <span card-title>{{eEditionModeName[eEditionMode.default]}}</span>\n        <span card-description>Capacidad default para un día</span>\n      </app-card-radio>\n    </div>\n    <div class=\" d-flex-horizontal-center\">\n      <app-card-radio [radioValue]=\"eEditionMode.calendar\"\n                      [(ngModel)]=\"editionModeSelection\">\n        <span card-title>{{eEditionModeName[eEditionMode.calendar]}}</span>\n        <span card-description>Capacidad programada</span>\n      </app-card-radio>\n    </div>\n  </div>\n</app-step>\n"
        },
        {
            "name": "OpCapacitiesStepExpressResourceComponent",
            "id": "component-OpCapacitiesStepExpressResourceComponent-0855865fa9e9ff9ccd353f5a59dbdc53",
            "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-express-resource/op-capacities-step-express-resource.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "OpCapacitiesStepExpressResourceService"
                },
                {
                    "name": "OpCapacitiesStepExpressResourceFormService"
                }
            ],
            "selector": "app-operations-capacities-step-express-resources",
            "styleUrls": [
                "./op-capacities-step-express-resource.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./op-capacities-step-express-resource.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_opCapacitiesStepExpressResourceForm",
                    "type": "OpCapacitiesStepExpressResourceFormService",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "eCapacityStepStatus",
                    "defaultValue": "ECapacityStepStatus",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "expressResourceDateRange",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "expressResourceMaxDateRange",
                    "defaultValue": "moment().add(2, 'M')",
                    "type": "moment.Moment",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "expressResourceMinDateRange",
                    "defaultValue": "moment()",
                    "type": "moment.Moment",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "expressResourceSaveLoad",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "expressResourceSegments",
                    "type": "ICapacityStepExpressResourceSegments",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "expressResourceStepStatus",
                    "defaultValue": "ECapacityStepStatus.disabled",
                    "type": "ECapacityStepStatus",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "subscriptions",
                    "defaultValue": "[]",
                    "type": "Subscription[]",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "cancelExpressResource",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69
                },
                {
                    "name": "closeExpressResourceStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40
                },
                {
                    "name": "openExpressResourceStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52
                },
                {
                    "name": "resetExpressResourceStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83
                },
                {
                    "name": "saveExpressResource",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60
                },
                {
                    "name": "updateExpressResourceFormView",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120
                },
                {
                    "name": "updateExpressResourceRangeLimit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105
                },
                {
                    "name": "updateExpressResourceSegments",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94
                },
                {
                    "name": "updateExpressResourceStepStatus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit, Optional, SkipSelf } from '@angular/core';\nimport { ECapacitiesStepExpressResource, OpCapacitiesStepExpressResourceService } from './op-capacities-step-express-resource.service';\nimport { OpCapacitiesStepExpressResourceFormService } from './form/op-capacities-step-express-resource-form.service';\nimport * as moment from 'moment';\nimport { Subscription } from 'rxjs';\nimport { ECapacityStepStatus } from '../../models/operations-capacity-step-status.model';\nimport { FromFormToCapacityStepExpressResourceSegments, ICapacityStepExpressResourceSegments } from './models/op-capacities-step-express-resource.model';\nimport { CapacityRangeLimit } from '../../models/operations-capacity-converter.model';\n\n@Component({\n  selector: 'app-operations-capacities-step-express-resources',\n  templateUrl: './op-capacities-step-express-resource.component.html',\n  styleUrls: ['./op-capacities-step-express-resource.component.scss'],\n  providers: [\n    OpCapacitiesStepExpressResourceService,\n    OpCapacitiesStepExpressResourceFormService\n  ]\n})\nexport class OpCapacitiesStepExpressResourceComponent implements OnInit, OnDestroy {\n\n  private subscriptions: Subscription[] = [];\n\n  public expressResourceSaveLoad: boolean;\n  public eCapacityStepStatus = ECapacityStepStatus;\n  public expressResourceStepStatus: ECapacityStepStatus = ECapacityStepStatus.disabled;\n\n\n  public expressResourceDateRange: boolean;\n\n  public expressResourceMinDateRange: moment.Moment = moment();\n  public expressResourceMaxDateRange: moment.Moment = moment().add(2, 'M');\n  public expressResourceSegments: ICapacityStepExpressResourceSegments;\n\n  constructor(\n    @Optional() @SkipSelf() private _opCapacitiesStepExpressResource: OpCapacitiesStepExpressResourceService,\n    public _opCapacitiesStepExpressResourceForm: OpCapacitiesStepExpressResourceFormService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.updateExpressResourceFormView();\n    this.updateExpressResourceSegments();\n    this.updateExpressResourceRangeLimit();\n    this.resetExpressResourceStep();\n    this.updateExpressResourceStepStatus();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n  openExpressResourceStep() {\n    this._opCapacitiesStepExpressResource.expressResourceStepStatus = this.eCapacityStepStatus.open;\n  }\n\n  closeExpressResourceStep() {\n    this._opCapacitiesStepExpressResource.expressResourceStepStatus = this.eCapacityStepStatus.close;\n  }\n\n  saveExpressResource() {\n    if (this._opCapacitiesStepExpressResourceForm.expressResourceForm$.valid) {\n      this.expressResourceSaveLoad = true;\n      this._opCapacitiesStepExpressResource.expressResourceSave = new FromFormToCapacityStepExpressResourceSegments(\n        this._opCapacitiesStepExpressResourceForm.expressResourceForm$.value as ICapacityStepExpressResourceSegments\n      );\n    }\n  }\n\n  cancelExpressResource() {\n    this._opCapacitiesStepExpressResource.expressResourceCancel = true;\n  }\n\n  updateExpressResourceStepStatus() {\n    const subscription = this._opCapacitiesStepExpressResource.expressResourceStepStatus$\n      .subscribe((eCapacityStepStatus: ECapacityStepStatus) => {\n        if (this.expressResourceStepStatus !== eCapacityStepStatus) {\n          this.expressResourceStepStatus = eCapacityStepStatus;\n        }\n      });\n    this.subscriptions.push(subscription);\n  }\n\n  resetExpressResourceStep() {\n    const subscription = this._opCapacitiesStepExpressResource.expressResourceResetStepStatus$\n      .subscribe(() => {\n        this.expressResourceDateRange = false;\n        this.expressResourceSaveLoad = false;\n        this.expressResourceSegments = null;\n        this._opCapacitiesStepExpressResourceForm.resetForm();\n      });\n    this.subscriptions.push(subscription);\n  }\n\n  updateExpressResourceSegments() {\n    const subscription = this._opCapacitiesStepExpressResource.expressResourceSegments$\n      .subscribe((expressResourceSegments: ICapacityStepExpressResourceSegments) => {\n        this.expressResourceSegments = expressResourceSegments;\n        if (expressResourceSegments) {\n          this._opCapacitiesStepExpressResourceForm.expressResource.setValue(expressResourceSegments.expressResource);\n        }\n      });\n    this.subscriptions.push(subscription);\n  }\n\n  updateExpressResourceRangeLimit() {\n    const subscription = this._opCapacitiesStepExpressResource.expressResourceRangeLimit$\n      .subscribe((capacityRangeLimit: CapacityRangeLimit) => {\n        const minDate = moment(capacityRangeLimit.startDate, 'YYYY-MM-DD');\n        const maxDate = moment(capacityRangeLimit.endDate, 'YYYY-MM-DD');\n        if (minDate.isValid()) {\n          this.expressResourceMinDateRange = minDate;\n        }\n        if (maxDate.isValid()) {\n          this.expressResourceMaxDateRange = moment(capacityRangeLimit.endDate, 'YYYY-MM-DD');\n        }\n      });\n    this.subscriptions.push(subscription);\n  }\n\n  updateExpressResourceFormView() {\n    const subscription = this._opCapacitiesStepExpressResource.expressResourceFormView$\n      .subscribe((eCapacitiesStepExpressResource: ECapacitiesStepExpressResource) => {\n        switch (eCapacitiesStepExpressResource) {\n          case ECapacitiesStepExpressResource.daysRange:\n            this._opCapacitiesStepExpressResourceForm.capacityRange.enable();\n            break;\n          case ECapacitiesStepExpressResource.hourlyCapacity:\n            this._opCapacitiesStepExpressResourceForm.capacityRange.disable();\n            break;\n        }\n        this.expressResourceDateRange = this._opCapacitiesStepExpressResourceForm.capacityRange.enabled;\n      });\n    this.subscriptions.push(subscription);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card-step-content {\n  padding: 20px 16px;\n}\n\n.card-step-content-disabled {\n  pointer-events: none;\n  filter: grayscale(100%);\n  opacity: 0.8;\n  display: block;\n}\n",
                    "styleUrl": "./op-capacities-step-express-resource.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_opCapacitiesStepExpressResource",
                        "type": "OpCapacitiesStepExpressResourceService"
                    },
                    {
                        "name": "_opCapacitiesStepExpressResourceForm",
                        "type": "OpCapacitiesStepExpressResourceFormService"
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "_opCapacitiesStepExpressResource",
                        "type": "OpCapacitiesStepExpressResourceService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_opCapacitiesStepExpressResourceForm",
                        "type": "OpCapacitiesStepExpressResourceFormService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<app-step stepId=\"3\"\n          stepTitle=\"recursos\"\n          [class.card-step-content-disabled]=\"expressResourceSaveLoad\"\n          [stepExpandedToggle]=\"expressResourceStepStatus === eCapacityStepStatus.open\"\n          [stepDisabled]=\"expressResourceStepStatus === eCapacityStepStatus.disabled  || expressResourceSaveLoad\"\n          [saveButtonDisabled]=\"!_opCapacitiesStepExpressResourceForm.expressResourceForm$.valid || expressResourceSaveLoad\"\n          (stepOpenEvent)=\"openExpressResourceStep()\"\n          (stepCloseEvent)=\"closeExpressResourceStep()\"\n          (saveButtonEvent)=\"saveExpressResource()\"\n          (cancelButtonEvent)=\"cancelExpressResource()\">\n  <div class=\"card-step-content\">\n    <form [formGroup]=\"_opCapacitiesStepExpressResourceForm.expressResourceForm$\">\n\n      <div class=\"row\">\n        <div class=\"col-12 mb-5\" *ngIf=\"expressResourceDateRange\">\n          <label class=\"text-caption text-gray-5 mb-2\">Selecciona días</label>\n          <app-input-datepicker-range\n            formControlName=\"capacityRange\"\n            outputFormat=\"DD-MM-YYYY\"\n            [minDate]=\"expressResourceMinDateRange\"\n            [maxDate]=\"expressResourceMaxDateRange\">\n          </app-input-datepicker-range>\n        </div>\n\n        <div class=\"col-12 mb-5\">\n          <label class=\"text-caption text-gray-5 mb-2 d-block\">Nro. de motorizados</label>\n          <app-input-number formControlName=\"expressResource\"\n                            placeholder=\"10\"></app-input-number>\n        </div>\n      </div>\n    </form>\n  </div>\n</app-step>\n"
        },
        {
            "name": "OpCapacitiesStepGroupOrLocalComponent",
            "id": "component-OpCapacitiesStepGroupOrLocalComponent-9387952008308be62684e2fc949ca8bf",
            "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-group-or-local/op-capacities-step-group-or-local.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "OpCapacitiesStepGroupOrLocalService"
                }
            ],
            "selector": "app-op-capacities-step-group-or-local",
            "styleUrls": [
                "./op-capacities-step-group-or-local.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./op-capacities-step-group-or-local.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "eCapacityStepStatus",
                    "defaultValue": "ECapacityStepStatus",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "groupOrLocalList",
                    "defaultValue": "[] as ICustomSelectOption[]",
                    "type": "ICustomSelectOption[]",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "groupOrLocalSavedSelection",
                    "type": "ICustomSelectOption",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "groupOrLocalSelection",
                    "type": "ICustomSelectOption",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "groupOrLocalStepDescription",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "groupOrLocalStepStatus",
                    "defaultValue": "ECapacityStepStatus.open",
                    "type": "ECapacityStepStatus",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "groupOrLocalTabList",
                    "defaultValue": "[ECapacityStepGroupOrLocal.group, ECapacityStepGroupOrLocal.local]",
                    "type": "ECapacityStepGroupOrLocal[]",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "groupOrLocalTabName",
                    "defaultValue": "CCapacityStepGroupOrLocalName",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "groupOrLocalTabReadonly",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "groupOrLocalTabSelection",
                    "type": "ECapacityStepGroupOrLocal",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "subscriptions",
                    "defaultValue": "[]",
                    "type": "Subscription[]",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "cancelGroupOrLocal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 115
                },
                {
                    "name": "changeGroupOrLocalSelection",
                    "args": [
                        {
                            "name": "value",
                            "type": "ICustomSelectOption"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 131,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "ICustomSelectOption",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeGroupOrLocalTab",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 119,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeGroupOrLocalTabSelection",
                    "args": [
                        {
                            "name": "groupOrLocalTabSelected",
                            "type": "ECapacityStepGroupOrLocal"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 127,
                    "jsdoctags": [
                        {
                            "name": "groupOrLocalTabSelected",
                            "type": "ECapacityStepGroupOrLocal",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "closeGroupOrLocalStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54
                },
                {
                    "name": "groupOrLocalSelectionName",
                    "args": [
                        {
                            "name": "option",
                            "type": "ICustomSelectOption"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 135,
                    "jsdoctags": [
                        {
                            "name": "option",
                            "type": "ICustomSelectOption",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36
                },
                {
                    "name": "openGroupOrLocalStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50
                },
                {
                    "name": "resetGroupOrLocalSelection",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99
                },
                {
                    "name": "saveGroupOrLocal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107
                },
                {
                    "name": "updateDefaultGroupOrLocalSelection",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84
                },
                {
                    "name": "updateEditionModeStepStatus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61
                },
                {
                    "name": "updateGroupOrLocalList",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { ChangeDetectorRef, Component, OnDestroy, OnInit, Optional, SkipSelf } from '@angular/core';\nimport { CCapacityStepGroupOrLocalName, ECapacityStepGroupOrLocal, OpCapacitiesStepGroupOrLocalService } from './op-capacities-step-group-or-local.service';\nimport { Subscription } from 'rxjs';\nimport { ICustomSelectOption } from '@interfaces/custom-controls.interface';\nimport { ECapacityStepStatus } from '../../models/operations-capacity-step-status.model';\n\n@Component({\n  selector: 'app-op-capacities-step-group-or-local',\n  templateUrl: './op-capacities-step-group-or-local.component.html',\n  styleUrls: ['./op-capacities-step-group-or-local.component.scss'],\n  providers: [OpCapacitiesStepGroupOrLocalService]\n})\nexport class OpCapacitiesStepGroupOrLocalComponent implements OnInit, OnDestroy {\n\n  public eCapacityStepStatus = ECapacityStepStatus;\n  public groupOrLocalStepStatus: ECapacityStepStatus = ECapacityStepStatus.open;\n\n  public groupOrLocalTabList: ECapacityStepGroupOrLocal[] = [ECapacityStepGroupOrLocal.group, ECapacityStepGroupOrLocal.local];\n  public groupOrLocalTabName = CCapacityStepGroupOrLocalName;\n  public groupOrLocalTabSelection: ECapacityStepGroupOrLocal;\n  public groupOrLocalTabReadonly = true;\n\n  public groupOrLocalList: ICustomSelectOption[] = [] as ICustomSelectOption[];\n  public groupOrLocalSavedSelection: ICustomSelectOption;\n  public groupOrLocalSelection: ICustomSelectOption;\n  public groupOrLocalStepDescription: string;\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    @Optional() @SkipSelf() private _opCapacitiesStepGroupOrLocal: OpCapacitiesStepGroupOrLocalService,\n    private _changeDetectorRef: ChangeDetectorRef\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.groupOrLocalTabSelection = this._opCapacitiesStepGroupOrLocal.defaultGroupOrLocalTabSelection;\n    this.groupOrLocalSavedSelection = this._opCapacitiesStepGroupOrLocal.defaultGroupOrLocalSelection;\n    this.groupOrLocalSelection = this._opCapacitiesStepGroupOrLocal.defaultGroupOrLocalSelection;\n\n    this.updateGroupOrLocalList();\n    this.updateEditionModeStepStatus();\n    this.changeGroupOrLocalTabSelection(this.groupOrLocalTabSelection);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n  openGroupOrLocalStep() {\n    this._opCapacitiesStepGroupOrLocal.groupOrLocalStepStatus = this.eCapacityStepStatus.open;\n  }\n\n  closeGroupOrLocalStep() {\n    if (this.groupOrLocalStepStatus === this.eCapacityStepStatus.open) {\n      this._opCapacitiesStepGroupOrLocal.groupOrLocalStepStatus = this.eCapacityStepStatus.close;\n    }\n    this.groupOrLocalSelection = this.groupOrLocalSavedSelection;\n  }\n\n  updateEditionModeStepStatus() {\n    const subscription = this._opCapacitiesStepGroupOrLocal.groupOrLocalStepStatus$\n      .subscribe((eCapacityStepStatus: ECapacityStepStatus) => {\n        if (this.groupOrLocalStepStatus !== eCapacityStepStatus) {\n          this.groupOrLocalStepStatus = eCapacityStepStatus;\n          this._changeDetectorRef.detectChanges();\n        }\n      });\n    this.subscriptions.push(subscription);\n  }\n\n  updateGroupOrLocalList() {\n    const subscription = this._opCapacitiesStepGroupOrLocal.groupOrLocalList$\n      .subscribe((local: ICustomSelectOption[]) => {\n        if (local) {\n          this.groupOrLocalList = local;\n          this.groupOrLocalTabReadonly = false;\n          this.updateDefaultGroupOrLocalSelection();\n        }\n      });\n    this.subscriptions.push(subscription);\n  }\n\n  updateDefaultGroupOrLocalSelection() {\n    if (this.groupOrLocalSelection && this.groupOrLocalList.length) {\n      const groupOrLocalSelection = this.groupOrLocalList\n        .find((groupOrLocal) => {\n          return groupOrLocal.fulfillmentCenterCode === this.groupOrLocalSelection.fulfillmentCenterCode;\n        });\n      this.changeGroupOrLocalSelection(groupOrLocalSelection);\n\n      if (this._opCapacitiesStepGroupOrLocal.defaultGroupOrLocalSelectionSaved) {\n        this.saveGroupOrLocal();\n        this._opCapacitiesStepGroupOrLocal.groupOrLocalStepStatus = this.eCapacityStepStatus.readonly;\n      }\n    }\n  }\n\n  resetGroupOrLocalSelection() {\n    // reset\n    this.groupOrLocalTabReadonly = false;\n    this.groupOrLocalSelection = null;\n    this.groupOrLocalSavedSelection = null;\n    this.groupOrLocalStepDescription = null;\n  }\n\n  saveGroupOrLocal() {\n    this.groupOrLocalSavedSelection = this.groupOrLocalSelection;\n    this._opCapacitiesStepGroupOrLocal.groupOrLocalSave = this.groupOrLocalSavedSelection;\n    if (this.groupOrLocalSavedSelection) {\n      this.groupOrLocalStepDescription = this.groupOrLocalSelectionName(this.groupOrLocalSavedSelection);\n    }\n  }\n\n  cancelGroupOrLocal() {\n    this._opCapacitiesStepGroupOrLocal.groupOrLocalCancel = true;\n  }\n\n  changeGroupOrLocalTab(event) {\n    this.resetGroupOrLocalSelection();\n\n    this.groupOrLocalTabReadonly = true;\n    this.groupOrLocalTabSelection = event.target.value;\n    this.changeGroupOrLocalTabSelection(event.target.value);\n  }\n\n  changeGroupOrLocalTabSelection(groupOrLocalTabSelected: ECapacityStepGroupOrLocal) {\n    this._opCapacitiesStepGroupOrLocal.groupOrLocalTab = groupOrLocalTabSelected;\n  }\n\n  changeGroupOrLocalSelection(value: ICustomSelectOption) {\n    this.groupOrLocalSelection = value;\n  }\n\n  groupOrLocalSelectionName(option: ICustomSelectOption) {\n    switch (this.groupOrLocalTabSelection) {\n      case ECapacityStepGroupOrLocal.local:\n        return `${option.code} - ${option.text}`;\n      case ECapacityStepGroupOrLocal.group :\n        return `${option.code}`;\n    }\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card-step-content {\n  padding: 20px 16px;\n}\n",
                    "styleUrl": "./op-capacities-step-group-or-local.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_opCapacitiesStepGroupOrLocal",
                        "type": "OpCapacitiesStepGroupOrLocalService"
                    },
                    {
                        "name": "_changeDetectorRef",
                        "type": "ChangeDetectorRef"
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "_opCapacitiesStepGroupOrLocal",
                        "type": "OpCapacitiesStepGroupOrLocalService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_changeDetectorRef",
                        "type": "ChangeDetectorRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<app-step stepId=\"1\"\n          stepTitle=\"Grupo o Local\"\n          saveButtonText=\"Continuar\"\n          [stepDescription]=\"groupOrLocalStepDescription\"\n          [saveButtonDisabled]=\"!groupOrLocalSelection || groupOrLocalTabReadonly\"\n          [stepExpandedToggle]=\"groupOrLocalStepStatus === eCapacityStepStatus.open\"\n          [stepDisabled]=\"groupOrLocalStepStatus === eCapacityStepStatus.disabled\"\n          [stepReadonly]=\"groupOrLocalStepStatus === eCapacityStepStatus.readonly\"\n          (stepOpenEvent)=\"openGroupOrLocalStep()\"\n          (stepCloseEvent)=\"closeGroupOrLocalStep()\"\n          (saveButtonEvent)=\"saveGroupOrLocal()\"\n          (cancelButtonEvent)=\"cancelGroupOrLocal()\">\n  <div class=\"card-step-content d-flex-vertical-center\">\n    <div class=\"mr-4\">\n      <app-select-tab [selectTabList]=\"groupOrLocalTabList\"\n                      [selectTabDisabled]=\"groupOrLocalTabReadonly\"\n                      [selectTabValue]=\"groupOrLocalTabSelection\"\n                      (change)=\"changeGroupOrLocalTab($event)\">\n        <ng-template let-tab>{{groupOrLocalTabName[tab]}}</ng-template>\n      </app-select-tab>\n    </div>\n    <div class=\"w-100\">\n      <app-select-search [placeholder]=\"'Elige un ' + groupOrLocalTabName[groupOrLocalTabSelection]\"\n                         [value]=\"groupOrLocalSelection\"\n                         [optionList]=\"groupOrLocalList\"\n                         (optionSelected)=\"changeGroupOrLocalSelection($event)\">\n        <ng-template #optionSelectedTemplate\n                     let-optionSelected>{{groupOrLocalSelectionName(optionSelected)}}</ng-template>\n        <ng-template #optionTemplate\n                     let-option>{{groupOrLocalSelectionName(option)}}</ng-template>\n      </app-select-search>\n    </div>\n  </div>\n</app-step>\n"
        },
        {
            "name": "OperationsCapacitiesComponent",
            "id": "component-OperationsCapacitiesComponent-207418ba5b1c94f775212b6cdb1252a4",
            "file": "src/app/business/operations/views/operations-capacities/operations-capacities.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<router-outlet></router-outlet>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    template: '<router-outlet></router-outlet>'\n})\nexport class OperationsCapacitiesComponent {\n\n    constructor() {\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 6
            }
        },
        {
            "name": "OperationsCapacityAmPmComponent",
            "id": "component-OperationsCapacityAmPmComponent-d891ab01b11d04a5f54a23fb932bd69d",
            "file": "src/app/business/operations/views/operations-capacities/views/operations-capacity-am-pm/operations-capacity-am-pm.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "OperationsCapacityAmPmService"
                },
                {
                    "name": "OperationsCapacityAmPmStoreService"
                },
                {
                    "name": "OpCapacitiesStepGroupOrLocalService"
                },
                {
                    "name": "OpCapacitiesStepEditionModeService"
                },
                {
                    "name": "OpCapacitiesStepCapacityTableService"
                }
            ],
            "selector": "app-operations-capacity-am-pm",
            "styleUrls": [
                "./operations-capacity-am-pm.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./operations-capacity-am-pm.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "subscriptions",
                    "defaultValue": "[]",
                    "type": "Subscription[]",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { OperationsCapacityAmPmStoreService } from './store/operations-capacity-am-pm-store.service';\nimport { OpCapacitiesStepGroupOrLocalService } from '../../components/op-capacities-step-group-or-local/op-capacities-step-group-or-local.service';\nimport { OpCapacitiesStepEditionModeService } from '../../components/op-capacities-step-edition-mode/op-capacities-step-edition-mode.service';\nimport { OpCapacitiesStepCapacityTableService } from '../../components/op-capacities-step-capacity-table/op-capacities-step-capacity-table.service';\nimport { IOpCapacitiesServiceTypeQueryParams } from '../../models/operations-capacities-service-type-query-params.model';\nimport { OperationsCapacityAmPmService } from './operations-capacity-am-pm.service';\nimport { objectHasElements } from '@helpers/objects-equal.helper';\n\n@Component({\n  selector: 'app-operations-capacity-am-pm',\n  templateUrl: './operations-capacity-am-pm.component.html',\n  styleUrls: ['./operations-capacity-am-pm.component.scss'],\n  providers: [\n    OperationsCapacityAmPmService,\n    OperationsCapacityAmPmStoreService,\n    OpCapacitiesStepGroupOrLocalService,\n    OpCapacitiesStepEditionModeService,\n    OpCapacitiesStepCapacityTableService\n  ]\n})\nexport class OperationsCapacityAmPmComponent implements OnInit, OnDestroy {\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private _operationsCapacityAmPm: OperationsCapacityAmPmService,\n    private _activatedRoute: ActivatedRoute\n  ) {\n  }\n\n  ngOnInit() {\n    const subscription = this._activatedRoute.queryParams\n      .subscribe((serviceTypeQueryParams: IOpCapacitiesServiceTypeQueryParams) => {\n        if (objectHasElements(serviceTypeQueryParams)) {\n          this._operationsCapacityAmPm.serviceQueryParams = serviceTypeQueryParams;\n        }\n      });\n    this.subscriptions.push(subscription);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '~sass/variables/colors';\n\n.operations-capacity-am-pm {\n  padding-top: 40px;\n  padding-bottom: 100px;\n}\n",
                    "styleUrl": "./operations-capacity-am-pm.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_operationsCapacityAmPm",
                        "type": "OperationsCapacityAmPmService"
                    },
                    {
                        "name": "_activatedRoute",
                        "type": "ActivatedRoute"
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "_operationsCapacityAmPm",
                        "type": "OperationsCapacityAmPmService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_activatedRoute",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<section class=\"operations-capacity-am-pm\">\n  <div class=\"row mb-4\">\n    <div class=\"col\">\n      <app-back-router>Opciones</app-back-router>\n    </div>\n  </div>\n\n  <div class=\"row mb-9\">\n    <div class=\"col\">\n      <h1 class=\"text-h3 text-black mb-5\">Editar capacidad AM/PM</h1>\n    </div>\n  </div>\n\n  <mat-accordion>\n    <div class=\"row\">\n      <div class=\"col-12 col-xl-6 mb-4 mb-xl-0\">\n        <div class=\"row\">\n          <div class=\"col-12 mb-4\">\n            <app-op-capacities-step-group-or-local>\n            </app-op-capacities-step-group-or-local>\n          </div>\n\n          <div class=\"col-12\">\n            <app-op-capacities-step-edition-mode>\n            </app-op-capacities-step-edition-mode>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-12 col-xl-6\">\n        <app-op-capacities-step-capacity-table>\n        </app-op-capacities-step-capacity-table>\n      </div>\n    </div>\n  </mat-accordion>\n</section>\n"
        },
        {
            "name": "OperationsCapacityExpressComponent",
            "id": "component-OperationsCapacityExpressComponent-5e41f502a75750b3aeec1f626717a681",
            "file": "src/app/business/operations/views/operations-capacities/views/operations-capacity-express/operations-capacity-express.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "OperationsCapacityExpressService"
                },
                {
                    "name": "OperationsCapacityExpressStoreService"
                },
                {
                    "name": "OpCapacitiesStepGroupOrLocalService"
                },
                {
                    "name": "OpCapacitiesStepEditionModeService"
                },
                {
                    "name": "OpCapacitiesStepExpressResourceService"
                }
            ],
            "selector": "app-operations-capacity-express",
            "styleUrls": [
                "./operations-capacity-express.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./operations-capacity-express.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "subscriptions",
                    "defaultValue": "[]",
                    "type": "Subscription[]",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { OperationsCapacityExpressStoreService } from './store/operations-capacity-express-store.service';\nimport { OpCapacitiesStepGroupOrLocalService } from '../../components/op-capacities-step-group-or-local/op-capacities-step-group-or-local.service';\nimport { OpCapacitiesStepEditionModeService } from '../../components/op-capacities-step-edition-mode/op-capacities-step-edition-mode.service';\nimport { OpCapacitiesStepExpressResourceService } from '../../components/op-capacities-step-express-resource/op-capacities-step-express-resource.service';\nimport { IOpCapacitiesServiceTypeQueryParams } from '../../models/operations-capacities-service-type-query-params.model';\nimport { objectHasElements } from '@helpers/objects-equal.helper';\nimport { OperationsCapacityExpressService } from './operations-capacity-express.service';\n\n@Component({\n  selector: 'app-operations-capacity-express',\n  templateUrl: './operations-capacity-express.component.html',\n  styleUrls: ['./operations-capacity-express.component.scss'],\n  providers: [\n    OperationsCapacityExpressService,\n    OperationsCapacityExpressStoreService,\n    OpCapacitiesStepGroupOrLocalService,\n    OpCapacitiesStepEditionModeService,\n    OpCapacitiesStepExpressResourceService\n  ]\n})\nexport class OperationsCapacityExpressComponent implements OnInit, OnDestroy {\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private _operationsCapacityExpress: OperationsCapacityExpressService,\n    private _activatedRoute: ActivatedRoute\n  ) {\n  }\n\n  ngOnInit() {\n    const subscription = this._activatedRoute.queryParams\n      .subscribe((serviceTypeQueryParams: IOpCapacitiesServiceTypeQueryParams) => {\n        if (objectHasElements(serviceTypeQueryParams)) {\n          this._operationsCapacityExpress.serviceQueryParams = serviceTypeQueryParams;\n        }\n      });\n    this.subscriptions.push(subscription);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '~sass/variables/colors';\n\n.operations-capacity-express {\n  padding-top: 40px;\n  padding-bottom: 100px;\n\n  .card-step-content {\n    padding: 20px 16px;\n  }\n}\n",
                    "styleUrl": "./operations-capacity-express.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_operationsCapacityExpress",
                        "type": "OperationsCapacityExpressService"
                    },
                    {
                        "name": "_activatedRoute",
                        "type": "ActivatedRoute"
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "_operationsCapacityExpress",
                        "type": "OperationsCapacityExpressService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_activatedRoute",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<section class=\"operations-capacity-express\">\n  <div class=\"row mb-4\">\n    <div class=\"col\">\n      <app-back-router>Opciones</app-back-router>\n    </div>\n  </div>\n\n  <div class=\"row mb-9\">\n    <div class=\"col\">\n      <h1 class=\"text-h3 text-black mb-5\">Editar capacidad Express</h1>\n    </div>\n  </div>\n\n  <mat-accordion>\n    <div class=\"row\">\n      <div class=\"col-12 col-xl-6 mb-4 mb-xl-0\">\n        <div class=\"row\">\n          <div class=\"col-12 mb-4\">\n            <app-op-capacities-step-group-or-local>\n            </app-op-capacities-step-group-or-local>\n          </div>\n\n          <div class=\"col-12\">\n            <app-op-capacities-step-edition-mode>\n            </app-op-capacities-step-edition-mode>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-12 col-xl-6\">\n        <app-operations-capacities-step-express-resources>\n        </app-operations-capacities-step-express-resources>\n      </div>\n    </div>\n  </mat-accordion>\n</section>\n"
        },
        {
            "name": "OperationsCapacityHomeComponent",
            "id": "component-OperationsCapacityHomeComponent-f27b727ff730f303b263bf4067e2cf35",
            "file": "src/app/business/operations/views/operations-capacities/views/operations-capacity-home/operations-capacity-home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "OperationsCapacityHomeStoreService"
                },
                {
                    "name": "OpCapacitiesLocalDefaultCapacityService"
                }
            ],
            "selector": "app-operations-capacity-home",
            "styleUrls": [
                "./operations-capacity-home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./operations-capacity-home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "concatPath",
                    "defaultValue": "CONCAT_PATH",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { OperationsCapacityHomeStoreService } from './store/operations-capacity-home-store.service';\nimport { OpCapacitiesLocalDefaultCapacityService } from '../../components/op-capacities-local-default-capacity/op-capacities-local-default-capacity.service';\nimport { CONCAT_PATH } from '@parameters/concat-router-path.parameter';\n\n@Component({\n    selector: 'app-operations-capacity-home',\n    templateUrl: './operations-capacity-home.component.html',\n    styleUrls: ['./operations-capacity-home.component.scss'],\n    providers: [\n        OperationsCapacityHomeStoreService,\n        OpCapacitiesLocalDefaultCapacityService\n    ]\n})\nexport class OperationsCapacityHomeComponent {\n\n    public concatPath = CONCAT_PATH;\n\n    constructor(\n        private _operationsCapacityHomeStoreService: OperationsCapacityHomeStoreService\n    ) {\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".operations-capacity-home {\n  padding-top: 40px;\n  padding-bottom: 100px;\n}\n",
                    "styleUrl": "./operations-capacity-home.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_operationsCapacityHomeStoreService",
                        "type": "OperationsCapacityHomeStoreService"
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "_operationsCapacityHomeStoreService",
                        "type": "OperationsCapacityHomeStoreService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<section class=\"operations-capacity-home\">\n    <div class=\"row mb-4\">\n        <div class=\"col\">\n            <app-back-router>Home</app-back-router>\n        </div>\n    </div>\n\n    <div class=\"row mb-10\">\n        <div class=\"col-12 mb-6\">\n            <h1 class=\"text-h3 text-black mb-0\">Capacidades por defecto</h1>\n        </div>\n\n        <div class=\"col-12 mb-6\">\n            <app-op-capacities-local-default-capacity></app-op-capacities-local-default-capacity>\n        </div>\n\n        <div class=\"col-12\">\n            <p class=\"text-label text-gray-6 mb-0\">Puedes revisar el consumo de capacidades semanal en la\n                <app-router [router]=\"concatPath.operationCapacitiesReport\">\n                    <span class=\"text-primary\">sección de reportes</span>\n                </app-router>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"row mb-4\">\n        <div class=\"col-12 mb-7\">\n            <h2 class=\"text-h4 text-black mb-0\">Más opciones de capacidades</h2>\n        </div>\n\n        <div class=\"col-12 col-xl-6 mb-4 mb-xl-0\">\n            <app-router [router]=\"concatPath.operationCapacitiesAmPm\">\n                <app-card-action cardIcon=\"ampm\">\n                    <span card-title>AM/PM</span>\n                    <span card-description>Edita las capacidades del rango de la mañana y tarde</span>\n                </app-card-action>\n            </app-router>\n        </div>\n        <div class=\"col-12 col-xl-6\">\n            <app-router [router]=\"concatPath.operationCapacitiesExpress\">\n                <app-card-action cardIcon=\"moto\">\n                    <span card-title>Express</span>\n                    <span card-description>Edita la disponibilidad de recursos para este servicio en el día</span>\n                </app-card-action>\n            </app-router>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-12 col-xl-6 mb-4 mb-xl-0\">\n            <app-router [router]=\"concatPath.operationCapacitiesScheduled\">\n                <app-card-action cardIcon=\"calendar\">\n                    <span card-title>Programado</span>\n                    <span card-description>Edita las capacidades por rangos de horas en el día</span>\n                </app-card-action>\n            </app-router>\n        </div>\n\n        <div class=\"col-12 col-xl-6\">\n            <app-router [router]=\"concatPath.operationCapacitiesRet\">\n                <app-card-action cardIcon=\"stores\">\n                    <span card-title>Retiro en tienda</span>\n                    <span card-description>Edita la cantidad de pedidos que podrás atender con este servicio</span>\n                </app-card-action>\n            </app-router>\n        </div>\n    </div>\n\n</section>\n"
        },
        {
            "name": "OperationsCapacityRetComponent",
            "id": "component-OperationsCapacityRetComponent-5944f4b3f357e9c3c18180746febdf4f",
            "file": "src/app/business/operations/views/operations-capacities/views/operations-capacity-ret/operations-capacity-ret.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "OperationsCapacityRetService"
                },
                {
                    "name": "OperationsCapacityRetStoreService"
                },
                {
                    "name": "OpCapacitiesStepGroupOrLocalService"
                },
                {
                    "name": "OpCapacitiesStepEditionModeService"
                },
                {
                    "name": "OpCapacitiesStepCapacityTableService"
                }
            ],
            "selector": "app-operations-capacity-ret",
            "styleUrls": [
                "./operations-capacity-ret.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./operations-capacity-ret.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "subscriptions",
                    "defaultValue": "[]",
                    "type": "Subscription[]",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { OperationsCapacityRetStoreService } from './store/operations-capacity-ret-store.service';\nimport { OpCapacitiesStepGroupOrLocalService } from '../../components/op-capacities-step-group-or-local/op-capacities-step-group-or-local.service';\nimport { OpCapacitiesStepEditionModeService } from '../../components/op-capacities-step-edition-mode/op-capacities-step-edition-mode.service';\nimport { OpCapacitiesStepCapacityTableService } from '../../components/op-capacities-step-capacity-table/op-capacities-step-capacity-table.service';\nimport { OperationsCapacityRetService } from './operations-capacity-ret.service';\nimport { IOpCapacitiesServiceTypeQueryParams } from '../../models/operations-capacities-service-type-query-params.model';\nimport { objectHasElements } from '@helpers/objects-equal.helper';\n\n@Component({\n    selector: 'app-operations-capacity-ret',\n    templateUrl: './operations-capacity-ret.component.html',\n    styleUrls: ['./operations-capacity-ret.component.scss'],\n    providers: [\n        OperationsCapacityRetService,\n        OperationsCapacityRetStoreService,\n        OpCapacitiesStepGroupOrLocalService,\n        OpCapacitiesStepEditionModeService,\n        OpCapacitiesStepCapacityTableService\n    ]\n})\nexport class OperationsCapacityRetComponent implements OnInit, OnDestroy {\n\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        private _operationsCapacityRet: OperationsCapacityRetService,\n        private _activatedRoute: ActivatedRoute\n    ) {\n    }\n\n    ngOnInit() {\n        const subscription = this._activatedRoute.queryParams\n            .subscribe((serviceTypeQueryParams: IOpCapacitiesServiceTypeQueryParams) => {\n                if (objectHasElements(serviceTypeQueryParams)) {\n                    this._operationsCapacityRet.serviceQueryParams = serviceTypeQueryParams;\n                }\n            });\n        this.subscriptions.push(subscription);\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '~sass/variables/colors';\n\n.operations-capacity-ret {\n  padding-top: 40px;\n  padding-bottom: 100px;\n\n  .card-step-content {\n    padding: 20px 16px;\n  }\n}\n",
                    "styleUrl": "./operations-capacity-ret.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_operationsCapacityRet",
                        "type": "OperationsCapacityRetService"
                    },
                    {
                        "name": "_activatedRoute",
                        "type": "ActivatedRoute"
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "_operationsCapacityRet",
                        "type": "OperationsCapacityRetService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_activatedRoute",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<section class=\"operations-capacity-ret\">\n  <div class=\"row mb-4\">\n    <div class=\"col\">\n      <app-back-router>Opciones</app-back-router>\n    </div>\n  </div>\n\n  <div class=\"row mb-9\">\n    <div class=\"col\">\n      <h1 class=\"text-h3 text-black mb-5\">Editar capacidad RET</h1>\n    </div>\n  </div>\n\n\n  <mat-accordion>\n    <div class=\"row\">\n      <div class=\"col-12 col-xl-6 mb-4 mb-xl-0\">\n        <div class=\"row\">\n          <div class=\"col-12 mb-4\">\n            <app-op-capacities-step-group-or-local>\n            </app-op-capacities-step-group-or-local>\n          </div>\n\n          <div class=\"col-12\">\n            <app-op-capacities-step-edition-mode>\n            </app-op-capacities-step-edition-mode>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-12 col-xl-6\">\n        <app-op-capacities-step-capacity-table>\n        </app-op-capacities-step-capacity-table>\n      </div>\n    </div>\n  </mat-accordion>\n</section>\n"
        },
        {
            "name": "OperationsCapacityScheduledComponent",
            "id": "component-OperationsCapacityScheduledComponent-bad02dade03312617073cd175b7e1fc7",
            "file": "src/app/business/operations/views/operations-capacities/views/operations-capacity-scheduled/operations-capacity-scheduled.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "OperationsCapacityScheduledService"
                },
                {
                    "name": "OperationsCapacityScheduledStoreService"
                },
                {
                    "name": "OpCapacitiesStepGroupOrLocalService"
                },
                {
                    "name": "OpCapacitiesStepEditionModeService"
                },
                {
                    "name": "OpCapacitiesStepCapacityTableService"
                }
            ],
            "selector": "app-operations-capacity-scheduled",
            "styleUrls": [
                "./operations-capacity-scheduled.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./operations-capacity-scheduled.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "subscriptions",
                    "defaultValue": "[]",
                    "type": "Subscription[]",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { OperationsCapacityScheduledStoreService } from './store/operations-capacity-scheduled-store.service';\nimport { OpCapacitiesStepGroupOrLocalService } from '../../components/op-capacities-step-group-or-local/op-capacities-step-group-or-local.service';\nimport { OpCapacitiesStepEditionModeService } from '../../components/op-capacities-step-edition-mode/op-capacities-step-edition-mode.service';\nimport { OpCapacitiesStepCapacityTableService } from '../../components/op-capacities-step-capacity-table/op-capacities-step-capacity-table.service';\nimport { OperationsCapacityScheduledService } from './operations-capacity-scheduled.service';\nimport { IOpCapacitiesServiceTypeQueryParams } from '../../models/operations-capacities-service-type-query-params.model';\nimport { objectHasElements } from '@helpers/objects-equal.helper';\n\n@Component({\n    selector: 'app-operations-capacity-scheduled',\n    templateUrl: './operations-capacity-scheduled.component.html',\n    styleUrls: ['./operations-capacity-scheduled.component.scss'],\n    providers: [\n        OperationsCapacityScheduledService,\n        OperationsCapacityScheduledStoreService,\n        OpCapacitiesStepGroupOrLocalService,\n        OpCapacitiesStepEditionModeService,\n        OpCapacitiesStepCapacityTableService\n    ]\n})\nexport class OperationsCapacityScheduledComponent implements OnInit, OnDestroy {\n\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        private _operationsCapacityScheduled: OperationsCapacityScheduledService,\n        private _activatedRoute: ActivatedRoute\n    ) {\n    }\n\n    ngOnInit() {\n        const subscription = this._activatedRoute.queryParams\n            .subscribe((serviceTypeQueryParams: IOpCapacitiesServiceTypeQueryParams) => {\n                if (objectHasElements(serviceTypeQueryParams)) {\n                    this._operationsCapacityScheduled.serviceQueryParams = serviceTypeQueryParams;\n                }\n            });\n        this.subscriptions.push(subscription);\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '~sass/variables/colors';\n\n.operations-capacity-scheduled {\n  padding-top: 40px;\n  padding-bottom: 100px;\n\n  .card-step-content {\n    padding: 20px 16px;\n  }\n}\n",
                    "styleUrl": "./operations-capacity-scheduled.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_operationsCapacityScheduled",
                        "type": "OperationsCapacityScheduledService"
                    },
                    {
                        "name": "_activatedRoute",
                        "type": "ActivatedRoute"
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "_operationsCapacityScheduled",
                        "type": "OperationsCapacityScheduledService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_activatedRoute",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<section class=\"operations-capacity-scheduled\">\n  <div class=\"row mb-4\">\n    <div class=\"col\">\n      <app-back-router>Opciones</app-back-router>\n    </div>\n  </div>\n\n  <div class=\"row mb-9\">\n    <div class=\"col\">\n      <h1 class=\"text-h3 text-black mb-5\">Editar capacidad Programada</h1>\n    </div>\n  </div>\n\n\n  <mat-accordion>\n    <div class=\"row\">\n      <div class=\"col-12 col-xl-6 mb-4 mb-xl-0\">\n        <div class=\"row\">\n          <div class=\"col-12 mb-4\">\n            <app-op-capacities-step-group-or-local>\n            </app-op-capacities-step-group-or-local>\n          </div>\n\n          <div class=\"col-12\">\n            <app-op-capacities-step-edition-mode>\n            </app-op-capacities-step-edition-mode>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-12 col-xl-6\">\n        <app-op-capacities-step-capacity-table>\n        </app-op-capacities-step-capacity-table>\n      </div>\n    </div>\n  </mat-accordion>\n</section>\n"
        },
        {
            "name": "OperationsComponent",
            "id": "component-OperationsComponent-e580395a89a212ae5e102cd77f864acb",
            "file": "src/app/business/operations/operations.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [
                "./operations.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./operations.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './operations.component.html',\n  styleUrls: ['./operations.component.scss']\n})\nexport class OperationsComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./operations.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<app-operations-sidenav>\n  <main class=\"container\">\n    <div class=\"row\">\n      <div class=\"col col-lg-10 offset-lg-1\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </main>\n</app-operations-sidenav>\n"
        },
        {
            "name": "OperationsHomeComponent",
            "id": "component-OperationsHomeComponent-90f48a0c8655da8d0a8cededffa79f33",
            "file": "src/app/business/operations/views/operations-home/operations-home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-operations-home",
            "styleUrls": [
                "./operations-home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./operations-home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-operations-home',\n    templateUrl: './operations-home.component.html',\n    styleUrls: ['./operations-home.component.scss']\n})\nexport class OperationsHomeComponent implements OnInit {\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".operations-home-container {\n  padding-top: 70px;\n  padding-bottom: 100px;\n}\n",
                    "styleUrl": "./operations-home.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"operations-home-container\">\n  <div class=\"row mb-9\">\n    <div class=\"col\">\n      <h1 class=\"text-h3 text-black mb-5\">Hola admin,</h1>\n      <p class=\"text-subtitle-1 text-gray-6\">¿Qué módulo quieres gestionar?</p>\n    </div>\n  </div>\n\n  <div class=\"row mb-4\">\n    <div class=\"col-12 col-xl-6 mb-4 mb-xl-0\">\n      <app-router router=\"locales\">\n        <app-card-action cardIcon=\"stores\">\n          <span card-title>Locales</span>\n          <span card-description>Visualiza todos los locales y edita algunos de sus características.</span>\n        </app-card-action>\n      </app-router>\n    </div>\n    <div class=\"col-12 col-xl-6\">\n      <app-router router=\"zonas\">\n        <app-card-action cardIcon=\"navigation\">\n          <span card-title>Zonas</span>\n          <span card-description>Visualiza todas las zonas, edita los tipos de despacho y exporta csv.</span>\n        </app-card-action>\n      </app-router>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-12 col-xl-6 mb-4 mb-xl-0\">\n      <app-router router=\"capacidades\">\n        <app-card-action cardIcon=\"truck\">\n          <span card-title>Capacidades</span>\n          <span card-description>Visualiza reportes y edita capacidades por tipo de despacho.</span>\n        </app-card-action>\n      </app-router>\n    </div>\n    <div class=\"col-12 col-xl-6\">\n      <app-router router=\"configuraciones\">\n        <app-card-action cardIcon=\"configuration\">\n          <span card-title>Configuraciones</span>\n          <span card-description>Conoce los parámentros generales acerca de los tipos de despacho.</span>\n        </app-card-action>\n      </app-router>\n    </div>\n  </div>\n</section>\n"
        },
        {
            "name": "OperationsSettingComponent",
            "id": "component-OperationsSettingComponent-abd2b84ac84a0d05d36148b9d90e0ac9",
            "file": "src/app/business/operations/views/operations-setting/operations-setting.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-operations-setting",
            "styleUrls": [
                "./operations-setting.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./operations-setting.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-operations-setting',\n  templateUrl: './operations-setting.component.html',\n  styleUrls: ['./operations-setting.component.scss']\n})\nexport class OperationsSettingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".operations-capacity-setting {\n  padding-top: 40px;\n  padding-bottom: 100px;\n}\n",
                    "styleUrl": "./operations-setting.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"operations-capacity-setting\">\n  <div class=\"row mb-4\">\n    <div class=\"col\">\n      <app-back-router>Home</app-back-router>\n    </div>\n  </div>\n\n  <div class=\"row mb-10\">\n    <div class=\"col-12 mb-6\">\n      <h1 class=\"text-h3 text-black mb-0\">Configuraciones</h1>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <app-under-construction></app-under-construction>\n    </div>\n  </div>\n</section>\n"
        },
        {
            "name": "OperationsSidenavComponent",
            "id": "component-OperationsSidenavComponent-381f075cd59f20aeba260702c87d8d12",
            "file": "src/app/business/operations/components/operations-sidenav/operations-sidenav.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-operations-sidenav",
            "styleUrls": [
                "./operations-sidenav.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./operations-sidenav.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_operationsSidenavTitle",
                    "defaultValue": "'Operaciones'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "concatPath",
                    "defaultValue": "CONCAT_PATH",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "innerSidenavExpanded",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "operationsInnerSidenavOpened",
                    "args": [
                        {
                            "name": "expanded",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "jsdoctags": [
                        {
                            "name": "expanded",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CONCAT_PATH } from '@parameters/concat-router-path.parameter';\n\n@Component({\n    selector: 'app-operations-sidenav',\n    templateUrl: './operations-sidenav.component.html',\n    styleUrls: ['./operations-sidenav.component.scss']\n})\nexport class OperationsSidenavComponent {\n\n    _operationsSidenavTitle = 'Operaciones';\n    innerSidenavExpanded: boolean;\n    public concatPath = CONCAT_PATH;\n\n    constructor() {\n    }\n\n    operationsInnerSidenavOpened(expanded: boolean) {\n        this.innerSidenavExpanded = expanded;\n    }\n\n    get operationsSidenavTitle() {\n        return this.innerSidenavExpanded ?\n            this._operationsSidenavTitle : this._operationsSidenavTitle.slice(0, 2);\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables/colors\";\n\n.separator {\n  border-top: 1px solid $gray-3;\n  margin: 0;\n}\n\n.operations-sidenav {\n\n  .operations-sidenav-header {\n    padding: 32px 32px 24px;\n  }\n\n  .operations-sidenav-content {\n    padding: 16px;\n  }\n\n}\n",
                    "styleUrl": "./operations-sidenav.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 13
            },
            "accessors": {
                "operationsSidenavTitle": {
                    "name": "operationsSidenavTitle",
                    "getSignature": {
                        "name": "operationsSidenavTitle",
                        "type": "",
                        "returnType": "",
                        "line": 22
                    }
                }
            },
            "templateData": "<app-inner-sidenav (innerSidenavExpanded)=\"operationsInnerSidenavOpened($event)\">\n  <section sidenav\n           class=\"operations-sidenav\">\n\n    <div class=\"operations-sidenav-header\">\n      <h1 class=\"text-subtitle-2 text-gray-6 mb-0\">\n        {{operationsSidenavTitle}}\n      </h1>\n    </div>\n    <hr class=\"separator\">\n\n    <div class=\"operations-sidenav-content\">\n      <app-inner-sidenav-navigation navigationIcon=\"home\"\n                                    [navigationRoute]=\"[concatPath.operations]\"\n                                    navigationText=\"Home\">\n      </app-inner-sidenav-navigation>\n\n      <app-inner-sidenav-navigation navigationIcon=\"store\"\n                                    [navigationRoute]=\"[concatPath.operationStores]\"\n                                    navigationText=\"Locales\">\n      </app-inner-sidenav-navigation>\n\n      <app-inner-sidenav-navigation navigationIcon=\"location_on\"\n                                    [navigationRoute]=\"[concatPath.operationZones]\"\n                                    navigationText=\"Zonas\">\n      </app-inner-sidenav-navigation>\n\n      <app-inner-sidenav-navigation-expansion navigationIcon=\"date_range\"\n                                              navigationText=\"Capacidades\"\n                                              [navigationRoute]=\"concatPath.operationCapacities\"\n                                              [navigationDisabledChildren]=\"!innerSidenavExpanded\"\n                                              [navigationRouteOptions]=\"{exact: false}\">\n        <app-router [router]=\"concatPath.operationCapacitiesAmPm\"\n                    routerActive=\"inner-sidenav-navigation-active\"\n                    routerClass=\"inner-sidenav-navigation-expansion-child\">\n          <span class=\"text-label\">Editar AM/PM</span>\n        </app-router>\n        <app-router [router]=\"concatPath.operationCapacitiesScheduled\"\n                    routerActive=\"inner-sidenav-navigation-active\"\n                    routerClass=\"inner-sidenav-navigation-expansion-child\">\n          <span class=\"text-label\">Editar Programado</span>\n        </app-router>\n        <app-router [router]=\"concatPath.operationCapacitiesExpress\"\n                    routerActive=\"inner-sidenav-navigation-active\"\n                    routerClass=\"inner-sidenav-navigation-expansion-child\">\n          <span class=\"text-label\">Editar Express</span>\n        </app-router>\n        <app-router [router]=\"concatPath.operationCapacitiesRet\"\n                    routerActive=\"inner-sidenav-navigation-active\"\n                    routerClass=\"inner-sidenav-navigation-expansion-child\">\n          <span class=\"text-label\">Editar RET</span>\n        </app-router>\n      </app-inner-sidenav-navigation-expansion>\n\n      <app-inner-sidenav-navigation navigationIcon=\"settings\"\n                                    [navigationRoute]=\"[concatPath.operationSettings]\"\n                                    navigationText=\"Configuraciones\">\n      </app-inner-sidenav-navigation>\n    </div>\n\n  </section>\n\n  <ng-content sidenav-content></ng-content>\n</app-inner-sidenav>\n"
        },
        {
            "name": "OperationsStoresComponent",
            "id": "component-OperationsStoresComponent-46ca18e417673734d0eab64e7037a423",
            "file": "src/app/business/operations/views/operations-stores/operations-stores.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-operations-stores",
            "styleUrls": [
                "./operations-stores.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./operations-stores.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-operations-stores',\n  templateUrl: './operations-stores.component.html',\n  styleUrls: ['./operations-stores.component.scss']\n})\nexport class OperationsStoresComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".operations-capacity-stores {\n  padding-top: 40px;\n  padding-bottom: 100px;\n}\n",
                    "styleUrl": "./operations-stores.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"operations-capacity-stores\">\n  <div class=\"row mb-4\">\n    <div class=\"col\">\n      <app-back-router>Home</app-back-router>\n    </div>\n  </div>\n\n  <div class=\"row mb-10\">\n    <div class=\"col-12 mb-6\">\n      <h1 class=\"text-h3 text-black mb-0\">Locales</h1>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <app-under-construction></app-under-construction>\n    </div>\n  </div>\n</section>\n"
        },
        {
            "name": "OperationsZonesComponent",
            "id": "component-OperationsZonesComponent-d048d3dac165248deb62a500c46a0e99",
            "file": "src/app/business/operations/views/operations-zones/operations-zones.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-operations-zones",
            "styleUrls": [
                "./operations-zones.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./operations-zones.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-operations-zones',\n  templateUrl: './operations-zones.component.html',\n  styleUrls: ['./operations-zones.component.scss']\n})\nexport class OperationsZonesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".operations-capacity-zones {\n  padding-top: 40px;\n  padding-bottom: 100px;\n}\n",
                    "styleUrl": "./operations-zones.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"operations-capacity-zones\">\n  <div class=\"row mb-4\">\n    <div class=\"col\">\n      <app-back-router>Home</app-back-router>\n    </div>\n  </div>\n\n  <div class=\"row mb-10\">\n    <div class=\"col-12 mb-6\">\n      <h1 class=\"text-h3 text-black mb-0\">Zonas</h1>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <app-under-construction></app-under-construction>\n    </div>\n  </div>\n</section>\n"
        },
        {
            "name": "PasswordValidatorComponent",
            "id": "component-PasswordValidatorComponent-9c0e737f7969ccc91a0233c9ad85c741",
            "file": "src/app/core/organisms/update-password-form/components/password-validator/password-validator.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-password-validator",
            "styleUrls": [
                "./password-validator.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./password-validator.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "valid",
                    "line": 10,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-password-validator',\n    templateUrl: './password-validator.component.html',\n    styleUrls: ['./password-validator.component.scss']\n})\nexport class PasswordValidatorComponent implements OnInit {\n\n    @Input() valid: boolean;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./password-validator.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p class=\"d-flex-vertical-center text-label text-gray-4 mb-3\">\n    <app-icon *ngIf=\"valid\"\n              fontName=\"check\"\n              innerClass=\"text-success\"\n              fontSize=\"16px\"\n              class=\"d-inline-block mr-2\"></app-icon>\n    <span [class.text-success]=\"valid\">\n        <ng-content></ng-content>\n    </span>\n</p>\n"
        },
        {
            "name": "ProfileComponent",
            "id": "component-ProfileComponent-0dbdaf866de4399a0a2806f5801baef1",
            "file": "src/app/core/organisms/profile/profile.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-profile",
            "styleUrls": [
                "./profile.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./profile.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "profileUpdatePasswordDialog",
                    "type": "ProfileUpdatePasswordDialogService",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "profileUserInformationDialog",
                    "type": "ProfileUserInformationDialogService",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                },
                {
                    "name": "openProfileUpdatePasswordDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39
                },
                {
                    "name": "openProfileUserInformationDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ProfileUserInformationDialogService } from '@organisms/profile/views/profile-user-information-dialog/profile-user-information-dialog.service';\nimport { ProfileUpdatePasswordDialogService } from '@organisms/profile/views/profile-update-password-dialog/profile-update-password-dialog.service';\nimport { EProfileDialogType } from '@organisms/profile/parameters/profile-dialog-type.parameter';\nimport { UserStoreService } from '@stores/user-store.service';\n\n@Component({\n    selector: 'app-profile',\n    templateUrl: './profile.component.html',\n    styleUrls: ['./profile.component.scss'],\n})\nexport class ProfileComponent implements OnInit {\n\n    constructor(\n        public profileUserInformationDialog: ProfileUserInformationDialogService,\n        public profileUpdatePasswordDialog: ProfileUpdatePasswordDialogService,\n        private userStore: UserStoreService\n    ) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    openProfileUserInformationDialog() {\n        this.profileUserInformationDialog.openProfileUserInformationDialog()\n            .beforeClosed()\n            .subscribe((profileDialogType: EProfileDialogType) => {\n                switch (profileDialogType) {\n                    case EProfileDialogType.updatePassword:\n                        this.openProfileUpdatePasswordDialog();\n                        break;\n                    case EProfileDialogType.logout:\n                        this.logout();\n                        break;\n                }\n            });\n    }\n\n    openProfileUpdatePasswordDialog() {\n        this.profileUpdatePasswordDialog.openProfileUpdatePasswordDialog();\n    }\n\n    logout() {\n        this.userStore.logout();\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./profile.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "profileUserInformationDialog",
                        "type": "ProfileUserInformationDialogService"
                    },
                    {
                        "name": "profileUpdatePasswordDialog",
                        "type": "ProfileUpdatePasswordDialogService"
                    },
                    {
                        "name": "userStore",
                        "type": "UserStoreService"
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "profileUserInformationDialog",
                        "type": "ProfileUserInformationDialogService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "profileUpdatePasswordDialog",
                        "type": "ProfileUpdatePasswordDialogService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userStore",
                        "type": "UserStoreService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"profile\">\n    <app-icon (click)=\"openProfileUserInformationDialog()\"\n              class=\"cursor-pointer\"\n              svgName=\"avatar\"\n              svgWidth=\"32px\"></app-icon>\n</section>\n"
        },
        {
            "name": "ProfileDialogHeaderComponent",
            "id": "component-ProfileDialogHeaderComponent-fc1c18ca5b90ab253f5bbc39050ed8a3",
            "file": "src/app/core/organisms/profile/components/profile-dialog-header/profile-dialog-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-profile-dialog-header",
            "styleUrls": [
                "./profile-dialog-header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./profile-dialog-header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile-dialog-header',\n  templateUrl: './profile-dialog-header.component.html',\n  styleUrls: ['./profile-dialog-header.component.scss']\n})\nexport class ProfileDialogHeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables/colors\";\n\n.profile-dialog-header {\n  padding: 34px 38px;\n  box-shadow: -4px -1px 6px rgba(102, 102, 102, 0.3);\n  display: flex;\n}\n",
                    "styleUrl": "./profile-dialog-header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"profile-dialog-header\">\n\n    <div class=\"user-avatar mr-5\">\n        <app-icon svgName=\"avatar\"\n                  svgWidth=\"40px\"></app-icon>\n    </div>\n\n    <div class=\"user-information\">\n        <div class=\"user-name mb-1\">\n            <h5 class=\"text-h5 mb-0\">\n                <ng-content select=\"[user-name]\"></ng-content>\n            </h5>\n        </div>\n        <div class=\"user-role\">\n            <span class=\"text-caption text-gray-5\">\n                <ng-content select=\"[user-role]\"></ng-content>\n            </span>\n        </div>\n    </div>\n\n</section>\n"
        },
        {
            "name": "ProfileUpdatePasswordDialogComponent",
            "id": "component-ProfileUpdatePasswordDialogComponent-a5a591b8e97f0d17d47661c8fc1b270a",
            "file": "src/app/core/organisms/profile/views/profile-update-password-dialog/profile-update-password-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-profile-update-password-dialog",
            "styleUrls": [
                "./profile-update-password-dialog.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./profile-update-password-dialog.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialogRef",
                    "type": "MatDialogRef<ProfileUpdatePasswordDialogComponent>",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "rolesNames",
                    "defaultValue": "RolesNames",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "submitForm",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "updatePasswordForm",
                    "type": "UpdatePasswordFormComponent",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'updatePasswordForm', {static: false}"
                        }
                    ]
                },
                {
                    "name": "user",
                    "type": "User",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "formCancelled",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57
                },
                {
                    "name": "formSubmitted",
                    "args": [
                        {
                            "name": "password",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "jsdoctags": [
                        {
                            "name": "password",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "invalidResetPassword",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31
                },
                {
                    "name": "validResetPassword",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { UserStoreService } from '@stores/user-store.service';\nimport { User } from '@models/auth/user.model';\nimport { RolesNames } from '@models/auth/role.model';\nimport { UpdatePasswordFormComponent } from '@organisms/update-password-form/update-password-form.component';\nimport { AuthImplementService } from '@implements/auth/auth-implement.service';\nimport { AlertService } from '@molecules/alert/alert.service';\nimport { CUpdatePasswordMessages } from '@organisms/update-password-form/parameters/update-password-messages.parameter';\n\n@Component({\n    selector: 'app-profile-update-password-dialog',\n    templateUrl: './profile-update-password-dialog.component.html',\n    styleUrls: ['./profile-update-password-dialog.component.scss']\n})\nexport class ProfileUpdatePasswordDialogComponent implements OnInit {\n\n    public submitForm: boolean;\n    public user: User;\n    public rolesNames = RolesNames;\n\n    @ViewChild('updatePasswordForm', {static: false}) updatePasswordForm: UpdatePasswordFormComponent;\n\n    constructor(\n        private authImplement: AuthImplementService,\n        private  alertService: AlertService,\n        public dialogRef: MatDialogRef<ProfileUpdatePasswordDialogComponent>,\n        private userStore: UserStoreService) {\n    }\n\n    ngOnInit(): void {\n        this.user = this.userStore.currentUser;\n    }\n\n    // TODO: Change reset Password Request\n    formSubmitted(password: string): void {\n        this.submitForm = true;\n        this.authImplement.resetPassword({\n            email: this.user.username,\n            code: '123456',\n            password\n        }).subscribe(\n            () => this.validResetPassword(),\n            () => this.invalidResetPassword());\n    }\n\n    validResetPassword() {\n        this.alertService.alertSuccess(CUpdatePasswordMessages.success);\n        this.formCancelled();\n    }\n\n    invalidResetPassword() {\n        this.alertService.alertError(CUpdatePasswordMessages.error);\n        this.formCancelled();\n    }\n\n    formCancelled() {\n        this.updatePasswordForm.resetPasswordForm();\n        this.dialogRef.close();\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".dialog-content {\n  padding: 24px 38px;\n}\n",
                    "styleUrl": "./profile-update-password-dialog.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "authImplement",
                        "type": "AuthImplementService"
                    },
                    {
                        "name": "alertService",
                        "type": "AlertService"
                    },
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<ProfileUpdatePasswordDialogComponent>"
                    },
                    {
                        "name": "userStore",
                        "type": "UserStoreService"
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "authImplement",
                        "type": "AuthImplementService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "alertService",
                        "type": "AlertService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<ProfileUpdatePasswordDialogComponent>",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userStore",
                        "type": "UserStoreService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"profile-update-password-dialog\">\n\n    <div class=\"dialog-close\">\n        <app-icon fontName=\"close\"\n                  fontSize=\"24px\"\n                  innerClass=\"text-gray-5 cursor-pointer\"\n                  mat-dialog-close></app-icon>\n    </div>\n\n    <app-profile-dialog-header>\n        <ng-container user-name>{{user.name}} {{user.firstLastName}} {{user.secondLastName}}</ng-container>\n        <ng-container user-role>{{rolesNames[user.role]}}</ng-container>\n    </app-profile-dialog-header>\n\n    <div class=\"dialog-content\">\n        <app-update-password-form appearance=\"dialog\"\n                                  class=\"d-block\"\n                                  [class.container-loader]=\"submitForm\"\n                                  #updatePasswordForm\n                                  (formSubmitEvent)=\"formSubmitted($event)\"\n                                  (formCancelEvent)=\"formCancelled()\">\n        </app-update-password-form>\n    </div>\n\n</section>\n"
        },
        {
            "name": "ProfileUserInformationDialogComponent",
            "id": "component-ProfileUserInformationDialogComponent-f2770c2ae67e225bd0abd72ba6eb8cfe",
            "file": "src/app/core/organisms/profile/views/profile-user-information-dialog/profile-user-information-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [
                "./profile-user-information-dialog.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./profile-user-information-dialog.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "profileDialogType",
                    "defaultValue": "EProfileDialogType",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "rolesNames",
                    "defaultValue": "RolesNames",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "user",
                    "type": "User",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { EProfileDialogType } from '@organisms/profile/parameters/profile-dialog-type.parameter';\nimport { UserStoreService } from '@stores/user-store.service';\nimport { User } from '@models/auth/user.model';\nimport { RolesNames } from '@models/auth/role.model';\n\n@Component({\n    templateUrl: './profile-user-information-dialog.component.html',\n    styleUrls: ['./profile-user-information-dialog.component.scss']\n})\nexport class ProfileUserInformationDialogComponent implements OnInit {\n\n    public profileDialogType = EProfileDialogType;\n\n    public user: User;\n    public rolesNames = RolesNames;\n\n    constructor(private userStore: UserStoreService) {\n    }\n\n    ngOnInit(): void {\n        this.user = this.userStore.currentUser;\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".dialog-content {\n  padding: 24px 38px;\n}\n\n.profile-dialog-information {\n  margin-bottom: 65px;\n}\n",
                    "styleUrl": "./profile-user-information-dialog.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "userStore",
                        "type": "UserStoreService"
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "userStore",
                        "type": "UserStoreService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"profile-dialog\">\n\n    <div class=\"dialog-close\">\n        <app-icon fontName=\"close\"\n                  fontSize=\"24px\"\n                  innerClass=\"text-gray-5 cursor-pointer\"\n                  mat-dialog-close></app-icon>\n    </div>\n\n    <app-profile-dialog-header>\n        <ng-container user-name>{{user.name}} {{user.firstLastName}} {{user.secondLastName}}</ng-container>\n        <ng-container user-role>{{rolesNames[user.role]}}</ng-container>\n    </app-profile-dialog-header>\n\n    <div class=\"dialog-content\">\n        <div class=\"profile-dialog-information\">\n\n            <app-card-static-information class=\"d-block mb-6\"\n                                         iconName=\"mail\">\n                <ng-container information-title>Correo</ng-container>\n                <ng-container information-caption>{{user.email}}</ng-container>\n            </app-card-static-information>\n\n            <app-card-static-information iconName=\"visibility\">\n                <ng-container information-title>Permisos</ng-container>\n                <ng-container information-caption>{{rolesNames[user.role]}}</ng-container>\n            </app-card-static-information>\n\n        </div>\n\n        <div class=\"profile-dialog-actions d-flex-horizontal-end\">\n            <app-button appearance=\"secondary\"\n                        innerClass=\"mr-4\"\n                        [mat-dialog-close]=\"profileDialogType.updatePassword\">\n                Cambiar de contraseña\n            </app-button>\n            <app-button appearance=\"primary\"\n                        [mat-dialog-close]=\"profileDialogType.logout\">\n                Cerrar sesión\n            </app-button>\n        </div>\n    </div>\n\n</section>\n"
        },
        {
            "name": "RadioComponent",
            "id": "component-RadioComponent-b7ca42e31c2500333447f9cefc34623a",
            "file": "src/app/core/atoms/radio/radio.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-radio",
            "styleUrls": [
                "./radio.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./radio.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "radioClass",
                    "line": 11,
                    "type": "any"
                },
                {
                    "name": "radioValue",
                    "line": 10,
                    "type": "any"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_radioDisabled",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "_radioName",
                    "defaultValue": "'radio'",
                    "type": "string | number",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "_radioValue",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "ngControl",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "chooseRadio",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, Optional, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n    selector: 'app-radio',\n    templateUrl: './radio.component.html',\n    styleUrls: ['./radio.component.sass']\n})\nexport class RadioComponent implements ControlValueAccessor, OnInit {\n    @Input() radioValue: any;\n    @Input() radioClass: any;\n\n    public _radioName: string | number = 'radio';\n    public _radioValue: any;\n    public _radioDisabled: any;\n\n    onChange = (_: any) => {};\n    onTouched = (_: any) => {};\n\n\n    constructor(@Optional() @Self() public ngControl: NgControl) {\n        if (ngControl) {\n            ngControl.valueAccessor = this;\n        }\n    }\n\n    ngOnInit(): void {\n        if (this.ngControl && this.ngControl.name) {\n            this._radioName = this.ngControl.name;\n        }\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    writeValue(value: any): void {\n        this._radioValue = value;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this._radioDisabled = isDisabled;\n    }\n\n    chooseRadio() {\n        this._radioValue = this.radioValue;\n        this.onChange(this._radioValue);\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables\"\n@import \"src/sass/mixins\"\n@import \"src/sass/utilities/text\"\n\n.radio-container\n  position: relative\n  cursor: pointer\n  display: inline-flex\n  margin: 0\n  @include non-selectable()\n\n  .radio\n    position: fixed\n    left: 99999px\n    opacity: 0\n\n    &:checked ~ .radio-mark:after\n      top: 2px\n      left: 2px\n      width: 10px\n      height: 10px\n      background-color: $primary\n\n\n    &[disabled] ~ .radio-mark\n      border: 1px solid $gray-2\n      pointer-events: none\n      cursor: default\n\n    &[disabled] ~ .radio-content\n      opacity: .5\n\n\n  .radio-mark\n    position: absolute\n    top: 0\n    left: 0\n    z-index: 2\n    height: 16px\n    width: 16px\n    border: 1px solid $gray-3\n    background-color: $white\n    border-radius: 50%\n\n    &:after\n      content: \"\"\n      position: absolute\n      top: 4px\n      left: 4px\n      width: 6px\n      height: 6px\n      border-radius: 50%\n      background: white\n      border: 0\n      transition: top 0.2s, left 0.2s, width 0.2s, height 0.2s\n\n\n  .radio-content\n    display: inline-block\n    padding-left: 24px\n    min-height: 16px\n    @extend .text-label\n\n",
                    "styleUrl": "./radio.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "ngControl",
                        "type": "NgControl"
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "ngControl",
                        "type": "NgControl",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor",
                "OnInit"
            ],
            "templateData": "<label class=\"radio-container\">\n  <input\n    type=\"radio\"\n    class=\"radio\"\n    [ngClass]=\"radioClass\"\n    [name]=\"_radioName\"\n    [value]=\"radioValue\"\n    [disabled]=\"_radioDisabled\"\n    [checked]=\"radioValue === _radioValue\"\n    (change)=\"chooseRadio()\">\n\n  <span class=\"radio-mark\"></span>\n\n  <span class=\"radio-content\">\n      <ng-content></ng-content>\n  </span>\n</label>\n"
        },
        {
            "name": "RecoverPasswordCodeComponent",
            "id": "component-RecoverPasswordCodeComponent-bb5e5d0a37b5c5b75e209643defe3d85",
            "file": "src/app/business/account/components/recover-password-code/recover-password-code.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "RecoverPasswordCodeForm"
                }
            ],
            "styleUrls": [
                "./recover-password-code.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./recover-password-code.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "recoverPasswordCodeForm",
                    "type": "RecoverPasswordCodeForm",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "submitForm",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "formCancel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66
                },
                {
                    "name": "formSubmitted",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37
                },
                {
                    "name": "invalidCode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54
                },
                {
                    "name": "invalidUsername",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29
                },
                {
                    "name": "resetFormValidators",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71
                },
                {
                    "name": "validCode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, SkipSelf } from '@angular/core';\nimport { RecoverPasswordCodeForm } from '../../form/recover-password-code.form';\nimport { Router } from '@angular/router';\nimport { CONCAT_PATH } from '@parameters/concat-router-path.parameter';\nimport { RecoveryPasswordStore } from '../../stores/recovery-password.store';\nimport { emailMasking } from '@helpers/email-mask.helper';\nimport { AuthImplementService } from '@implements/auth/auth-implement.service';\nimport { AlertService } from '@molecules/alert/alert.service';\nimport { RecoveryPasswordAlertMessages } from '../../parameters/recovery-password-alert-messages.parameter';\n\n@Component({\n    templateUrl: './recover-password-code.component.html',\n    styleUrls: ['./recover-password-code.component.scss'],\n    providers: [RecoverPasswordCodeForm]\n})\nexport class RecoverPasswordCodeComponent implements OnInit {\n\n    submitForm: boolean;\n\n    constructor(\n        private router: Router,\n        private authImplement: AuthImplementService,\n        private  alertService: AlertService,\n        public recoverPasswordCodeForm: RecoverPasswordCodeForm,\n        @SkipSelf() private recoveryPasswordStore: RecoveryPasswordStore,\n    ) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    get emailMasked() {\n        return emailMasking(this.recoveryPasswordStore.username);\n    }\n\n\n    formSubmitted() {\n        this.submitForm = true;\n        this.authImplement.validPasswordCode(\n            this.recoveryPasswordStore.username,\n            this.recoverPasswordCodeForm.codeControl.value\n        ).subscribe(\n            (validCode) => validCode ? this.validCode() : this.invalidCode(),\n            () => this.invalidUsername());\n    }\n\n    validCode() {\n        this.recoveryPasswordStore.code = this.recoverPasswordCodeForm.codeControl.value;\n        this.router.navigate(\n            [CONCAT_PATH.recoverPasswordReset],\n            {skipLocationChange: true});\n    }\n\n    invalidCode() {\n        this.submitForm = false;\n        this.recoverPasswordCodeForm.codeControl.settingWrongDataValidator();\n        this.resetFormValidators();\n    }\n\n    invalidUsername() {\n        this.recoveryPasswordStore.resetStore();\n        this.alertService.alertError(RecoveryPasswordAlertMessages.invalidUserName);\n        this.router.navigate([CONCAT_PATH.recoverPasswordUser]);\n    }\n\n    formCancel() {\n        this.recoveryPasswordStore.resetStore();\n        this.router.navigate([CONCAT_PATH.login]);\n    }\n\n    resetFormValidators() {\n        const subscription = this.recoverPasswordCodeForm.form$.valueChanges.subscribe(() => {\n            subscription.unsubscribe();\n            this.recoverPasswordCodeForm.resetFormValidators();\n        });\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./recover-password-code.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "authImplement",
                        "type": "AuthImplementService"
                    },
                    {
                        "name": "alertService",
                        "type": "AlertService"
                    },
                    {
                        "name": "recoverPasswordCodeForm",
                        "type": "RecoverPasswordCodeForm"
                    },
                    {
                        "name": "recoveryPasswordStore",
                        "type": "RecoveryPasswordStore"
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authImplement",
                        "type": "AuthImplementService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "alertService",
                        "type": "AlertService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "recoverPasswordCodeForm",
                        "type": "RecoverPasswordCodeForm",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "recoveryPasswordStore",
                        "type": "RecoveryPasswordStore",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "emailMasked": {
                    "name": "emailMasked",
                    "getSignature": {
                        "name": "emailMasked",
                        "type": "",
                        "returnType": "",
                        "line": 32
                    }
                }
            },
            "templateData": "<app-account-card>\n    <ng-container account-card-title>Recupera tu contraseña</ng-container>\n    <ng-container account-card-content>\n\n        <div class=\"recover-password-caption text-center mb-7\">\n            <p class=\"text-subtitle-1 text-gray-6 mb-4\">Revisa el código enviado a </p>\n            <p class=\"text-subtitle-2 text-gray-6 mb-0\">{{emailMasked}}</p>\n        </div>\n\n\n        <form [formGroup]=\"recoverPasswordCodeForm.form$\"\n              (ngSubmit)=\"formSubmitted()\"\n              [class.container-loader]=\"submitForm\">\n\n            <div class=\"user mb-10\">\n                <app-form-field>\n                    <app-form-field-label>Código enviado a tu usuario</app-form-field-label>\n                    <app-input formControlName=\"code\"\n                               labelClass=\"d-block\"\n                               id=\"code\"\n                               placeholder=\"Escribe aquí el código\">\n                    </app-input>\n                    <ng-container *ngIf=\"!!recoverPasswordCodeForm.codeControl.hasWrongDataError\">\n                        <app-form-field-error>{{recoverPasswordCodeForm.codeControl.controlError}}</app-form-field-error>\n                    </ng-container>\n                </app-form-field>\n            </div>\n\n\n            <div class=\"submit mb-4\">\n                <app-button [disabled]=\"recoverPasswordCodeForm.form$.invalid\"\n                            innerClass=\"w-100\"\n                            appearance=\"primary\"\n                            behavior=\"submit\">\n                    Validar código\n                </app-button>\n            </div>\n\n            <div class=\"cancel\">\n                <app-button (click)=\"formCancel()\"\n                            innerClass=\"w-100\"\n                            appearance=\"secondary\"\n                            behavior=\"button\">\n                    Cancelar\n                </app-button>\n            </div>\n\n        </form>\n\n    </ng-container>\n</app-account-card>\n"
        },
        {
            "name": "RecoverPasswordComponent",
            "id": "component-RecoverPasswordComponent-b7895d00ddf62909186e7da1b2e3c93c",
            "file": "src/app/business/account/views/recover-password/recover-password.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "RecoveryPasswordStore"
                }
            ],
            "styleUrls": [],
            "styles": [],
            "template": "<router-outlet></router-outlet>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LOGIN_PATH } from '@parameters/router-path.parameter';\nimport { RecoveryPasswordStore } from '../../stores/recovery-password.store';\n\n@Component({\n    template: '<router-outlet></router-outlet>',\n    providers: [RecoveryPasswordStore]\n})\nexport class RecoverPasswordComponent {\n\n    constructor(\n        private router: Router,\n        private activatedRoute: ActivatedRoute\n    ) {\n        this.router.navigate(\n            [LOGIN_PATH.recoverPasswordUser],\n            {skipLocationChange: true, relativeTo: activatedRoute});\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "RecoverPasswordResetComponent",
            "id": "component-RecoverPasswordResetComponent-f829b32ed8bc9fb5ab8a9b4feece030f",
            "file": "src/app/business/account/components/recover-password-reset/recover-password-reset.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [
                "./recover-password-reset.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./recover-password-reset.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "newPassword",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "submitForm",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "updatePasswordForm",
                    "type": "UpdatePasswordFormComponent",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'updatePasswordForm', {static: false}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "formCancelled",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72
                },
                {
                    "name": "formSubmitted",
                    "args": [
                        {
                            "name": "password",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "jsdoctags": [
                        {
                            "name": "password",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "internSignIn",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51
                },
                {
                    "name": "invalidResetPassword",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44
                },
                {
                    "name": "invalidSignIn",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29
                },
                {
                    "name": "validSignIn",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, SkipSelf, ViewChild } from '@angular/core';\nimport { CONCAT_PATH } from '@parameters/concat-router-path.parameter';\nimport { Router } from '@angular/router';\nimport { CUpdatePasswordMessages } from '@organisms/update-password-form/parameters/update-password-messages.parameter';\nimport { AuthImplementService } from '@implements/auth/auth-implement.service';\nimport { AlertService } from '@molecules/alert/alert.service';\nimport { RecoveryPasswordStore } from '../../stores/recovery-password.store';\nimport { UpdatePasswordFormComponent } from '@organisms/update-password-form/update-password-form.component';\n\n@Component({\n    templateUrl: './recover-password-reset.component.html',\n    styleUrls: ['./recover-password-reset.component.scss'],\n})\nexport class RecoverPasswordResetComponent implements OnInit {\n\n    submitForm: boolean;\n    newPassword: string;\n\n    @ViewChild('updatePasswordForm', {static: false}) updatePasswordForm: UpdatePasswordFormComponent;\n\n    constructor(\n        private router: Router,\n        private authImplement: AuthImplementService,\n        private  alertService: AlertService,\n        @SkipSelf() private recoveryPasswordStore: RecoveryPasswordStore,\n    ) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    formSubmitted(password: string): void {\n        this.submitForm = true;\n        this.newPassword = password;\n        this.authImplement.resetPassword({\n            email: this.recoveryPasswordStore.username,\n            code: this.recoveryPasswordStore.code,\n            password\n        }).subscribe(\n            () => this.internSignIn(),\n            () => this.invalidResetPassword());\n    }\n\n    invalidResetPassword() {\n        this.submitForm = false;\n        this.newPassword = '';\n        this.updatePasswordForm.resetPasswordForm();\n        this.alertService.alertError(CUpdatePasswordMessages.error);\n    }\n\n    internSignIn() {\n        this.authImplement.signIn(\n            this.recoveryPasswordStore.username,\n            this.newPassword,\n        ).subscribe(\n            () => this.validSignIn(),\n            () => this.invalidSignIn());\n    }\n\n    validSignIn() {\n        this.alertService.alertSuccess(CUpdatePasswordMessages.success);\n        this.recoveryPasswordStore.resetStore();\n        this.updatePasswordForm.resetPasswordForm();\n        this.router.navigate([CONCAT_PATH.operations]);\n    }\n\n    invalidSignIn() {\n        this.alertService.alertSuccess(CUpdatePasswordMessages.success);\n        this.formCancelled();\n    }\n\n    formCancelled(): void {\n        this.recoveryPasswordStore.resetStore();\n        this.updatePasswordForm.resetPasswordForm();\n        this.router.navigate([CONCAT_PATH.login]);\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./recover-password-reset.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "authImplement",
                        "type": "AuthImplementService"
                    },
                    {
                        "name": "alertService",
                        "type": "AlertService"
                    },
                    {
                        "name": "recoveryPasswordStore",
                        "type": "RecoveryPasswordStore"
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authImplement",
                        "type": "AuthImplementService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "alertService",
                        "type": "AlertService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "recoveryPasswordStore",
                        "type": "RecoveryPasswordStore",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-account-card>\n    <ng-container account-card-title>Cambia tu contraseña</ng-container>\n    <ng-container account-card-content>\n        <app-update-password-form class=\"d-block\"\n                                  [class.container-loader]=\"submitForm\"\n                                  #updatePasswordForm\n                                  (formSubmitEvent)=\"formSubmitted($event)\"\n                                  (formCancelEvent)=\"formCancelled()\">\n        </app-update-password-form>\n    </ng-container>\n</app-account-card>\n"
        },
        {
            "name": "RecoverPasswordUserComponent",
            "id": "component-RecoverPasswordUserComponent-8c4c9f18b6e8c0f6b57e73f1b619484d",
            "file": "src/app/business/account/components/recover-password-user/recover-password-user.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "RecoverPasswordUserForm"
                }
            ],
            "styleUrls": [
                "./recover-password-user.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./recover-password-user.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "recoverPasswordUserForm",
                    "type": "RecoverPasswordUserForm",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "submitForm",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "formCancel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56
                },
                {
                    "name": "formSubmitted",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                },
                {
                    "name": "invalidUsername",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                },
                {
                    "name": "resetFormValidators",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49
                },
                {
                    "name": "validUsername",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, SkipSelf } from '@angular/core';\nimport { RecoverPasswordUserForm } from '../../form/recover-password-user.form';\nimport { CONCAT_PATH } from '@parameters/concat-router-path.parameter';\nimport { Router } from '@angular/router';\nimport { AuthImplementService } from '@implements/auth/auth-implement.service';\nimport { RecoveryPasswordStore } from '../../stores/recovery-password.store';\n\n@Component({\n    templateUrl: './recover-password-user.component.html',\n    styleUrls: ['./recover-password-user.component.scss'],\n    providers: [RecoverPasswordUserForm]\n})\nexport class RecoverPasswordUserComponent implements OnInit {\n\n    submitForm: boolean;\n\n    constructor(\n        private router: Router,\n        private authImplement: AuthImplementService,\n        public recoverPasswordUserForm: RecoverPasswordUserForm,\n        @SkipSelf() private recoveryPasswordStore: RecoveryPasswordStore\n    ) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    formSubmitted() {\n        this.submitForm = true;\n        this.authImplement.sendPasswordCode(this.recoverPasswordUserForm.usernameControl.value)\n            .subscribe(\n                () => this.validUsername(),\n                () => this.invalidUsername());\n    }\n\n    validUsername() {\n        this.recoveryPasswordStore.username = this.recoverPasswordUserForm.usernameControl.value;\n        this.router.navigate(\n            [CONCAT_PATH.recoverPasswordCode],\n            {skipLocationChange: true});\n    }\n\n    invalidUsername() {\n        this.submitForm = false;\n        this.recoverPasswordUserForm.usernameControl.settingWrongDataValidator();\n        this.resetFormValidators();\n    }\n\n    resetFormValidators() {\n        const subscription = this.recoverPasswordUserForm.form$.valueChanges.subscribe(() => {\n            subscription.unsubscribe();\n            this.recoverPasswordUserForm.resetFormValidators();\n        });\n    }\n\n    formCancel() {\n        this.router.navigate([CONCAT_PATH.login]);\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./recover-password-user.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "authImplement",
                        "type": "AuthImplementService"
                    },
                    {
                        "name": "recoverPasswordUserForm",
                        "type": "RecoverPasswordUserForm"
                    },
                    {
                        "name": "recoveryPasswordStore",
                        "type": "RecoveryPasswordStore"
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authImplement",
                        "type": "AuthImplementService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "recoverPasswordUserForm",
                        "type": "RecoverPasswordUserForm",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "recoveryPasswordStore",
                        "type": "RecoveryPasswordStore",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-account-card>\n    <ng-container account-card-title>Recupera tu contraseña</ng-container>\n    <ng-container account-card-content>\n\n        <div class=\"recover-password-caption text-center mb-7\">\n            <p class=\"text-subtitle-1 text-gray-6 mb-0\">Enviaremos un código de acceso a tu usuario</p>\n        </div>\n\n\n        <form [formGroup]=\"recoverPasswordUserForm.form$\"\n              (ngSubmit)=\"formSubmitted()\"\n              [class.container-loader]=\"submitForm\">\n\n            <div class=\"user mb-10\">\n                <app-form-field>\n                    <app-form-field-label>Usuario</app-form-field-label>\n                    <app-input formControlName=\"username\"\n                               labelClass=\"d-block\"\n                               id=\"username\"\n                               placeholder=\"Escribe aquí tu usuario\">\n                    </app-input>\n                    <app-form-field-error>{{recoverPasswordUserForm.usernameControl.controlError}}</app-form-field-error>\n                </app-form-field>\n            </div>\n\n\n            <div class=\"submit mb-4\">\n                <app-button [disabled]=\"recoverPasswordUserForm.form$.invalid\"\n                            innerClass=\"w-100\"\n                            appearance=\"primary\"\n                            behavior=\"submit\">\n                    Enviar código\n                </app-button>\n            </div>\n\n            <div class=\"cancel\">\n                <app-button (click)=\"formCancel()\"\n                            innerClass=\"w-100\"\n                            appearance=\"secondary\"\n                            behavior=\"button\">\n                    Cancelar\n                </app-button>\n            </div>\n        </form>\n\n    </ng-container>\n</app-account-card>\n"
        },
        {
            "name": "RouterComponent",
            "id": "component-RouterComponent-60474176bc0ff3a5a0c4cbcbee6c88a0",
            "file": "src/app/core/atoms/links/router/router.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-router",
            "styleUrls": [
                "./router.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./router.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "router",
                    "line": 13,
                    "type": "any[] | string"
                },
                {
                    "name": "routerActive",
                    "defaultValue": "''",
                    "line": 16,
                    "type": "string[] | string"
                },
                {
                    "name": "routerActiveOptions",
                    "defaultValue": "{exact: false}",
                    "line": 19,
                    "type": "literal type"
                },
                {
                    "name": "routerClass",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "routerTarget",
                    "defaultValue": "'_self'",
                    "line": 22,
                    "type": "\"_blank\" | \"_self\" | \"_parent\" | \"_top\" | \"framename\""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "routerActiveTemplate",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'routerActiveTemplate', {static: false}"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n@Component({\n    selector: 'app-router',\n    templateUrl: './router.component.html',\n    styleUrls: ['./router.component.sass']\n})\nexport class RouterComponent {\n    @Input()\n    routerClass: string;\n\n    @Input()\n    router: any[] | string;\n\n    @Input()\n    routerActive: string[] | string = '';\n\n    @Input()\n    routerActiveOptions: { exact: boolean } = {exact: false};\n\n    @Input()\n    routerTarget: '_blank' | '_self' | '_parent' | '_top' | 'framename' = '_self';\n\n    @ContentChild('routerActiveTemplate', {static: false}) routerActiveTemplate: TemplateRef<any>;\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables/colors\"\n\n.router,\n.router:hover\n  text-decoration: none\n  color: $black\n  cursor: pointer\n  border: none\n  outline: none\n  display: unset\n",
                    "styleUrl": "./router.component.sass"
                }
            ],
            "stylesData": "",
            "templateData": "<a class=\"router\"\n   [ngClass]=\"routerClass\"\n   [routerLink]=\"router\"\n   [routerLinkActive]=\"routerActive\"\n   [routerLinkActiveOptions]=\"routerActiveOptions\"\n   [target]=\"routerTarget\"\n   #routerActiveVariable=\"routerLinkActive\">\n    <ng-container *ngIf=\"!routerActiveTemplate\">\n        <ng-content></ng-content>\n    </ng-container>\n    <ng-template [ngTemplateOutlet]=\"routerActiveTemplate\"\n                 [ngTemplateOutletContext]=\"{$implicit: routerActiveVariable}\">\n    </ng-template>\n</a>\n"
        },
        {
            "name": "SelectComponent",
            "id": "component-SelectComponent-c2f918466e2a12b5e0ea01fa04ae1f3c",
            "file": "src/app/core/atoms/select/select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-select",
            "styleUrls": [
                "./select.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./select.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "clearValue",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "optionList",
                    "line": 13,
                    "type": "Array<any>"
                },
                {
                    "name": "placeholder",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "value",
                    "line": 16,
                    "type": "T"
                }
            ],
            "outputsClass": [
                {
                    "name": "optionSelected",
                    "defaultValue": "new EventEmitter()",
                    "line": 18,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "ngControl",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "selectDisabled",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "templateRef",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "TemplateRef"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectionChange",
                    "args": [
                        {
                            "name": "option",
                            "type": "T"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "jsdoctags": [
                        {
                            "name": "option",
                            "type": "T",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "T"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "T",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ContentChild, EventEmitter, Input, OnInit, Optional, Output, Self, TemplateRef } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss']\n})\nexport class SelectComponent<T> implements ControlValueAccessor, OnInit {\n\n  public selectDisabled: boolean;\n\n  @Input() optionList: Array<any>;\n  @Input() placeholder: string;\n  @Input() clearValue: string;\n  @Input() value: T;\n\n  @Output() optionSelected = new EventEmitter();\n  @ContentChild(TemplateRef) templateRef: TemplateRef<any>;\n\n\n  onChange = (_: any) => {};\n  onTouched = (_: any) => {};\n\n\n  constructor(@Optional() @Self() public ngControl: NgControl) {\n    if (ngControl) {\n      ngControl.valueAccessor = this;\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  selectionChange(option: T) {\n    this.optionSelected.emit(option);\n    this.onChange(option);\n  }\n\n\n  writeValue(obj: T): void {\n    this.value = obj;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.selectDisabled = isDisabled;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables\";\n@import \"src/sass/utilities/text\";\n@import \"src/sass/utilities/position\";\n//@import \"src/sass/components/cards\"\n\n$select-height: 38px;\n\n.select {\n  position: relative;\n  height: $select-height;\n}\n\n.select-icon {\n  pointer-events: none;\n  right: 16px;\n  display: inline-flex;\n  @extend .position-vertical-center\n}\n\n:host {\n\n  ::ng-deep mat-select {\n\n    .mat-select-trigger {\n      background-color: $white;\n      padding: 12px 16px;\n      border: 1px solid $gray-3;\n      border-radius: 4px;\n      height: $select-height;\n      display: block;\n    }\n\n    .mat-select-value {\n      @extend .text-label;\n    }\n\n    .mat-select-arrow-wrapper {\n      visibility: hidden;\n    }\n\n    .mat-select-placeholder {\n      color: $gray-4;\n      @extend .text-label;\n    }\n\n    &.select-active .mat-select-placeholder {\n      color: $black;\n    }\n\n    &.select-focus:focus .mat-select-placeholder {\n      color: $black;\n    }\n\n    &.mat-select-disabled .mat-select-trigger {\n      background-color: $gray-2;\n    }\n  }\n}\n\n::ng-deep .mat-select-panel.select-component {\n  background-color: transparent;\n  border: 0;\n  box-shadow: none;\n  position: absolute;\n  top: 38px;\n  padding-right: 16px;\n  padding-left: 16px;\n  overflow: initial;\n\n\n  .option-container {\n    border-radius: 4px;\n    background-color: $white;\n    box-shadow: 0 20px 40px rgba(9, 39, 85, 0.08);\n    box-sizing: border-box;\n    overflow: auto;\n    max-height: 300px;\n  }\n  mat-option.select-basic-option,\n  mat-option.select-basic-option.mat-option.mat-active {\n    color: $black;\n    background-color: transparent;\n    height: $select-height;\n    @extend .text-label;\n\n    &:hover {\n      background-color: $gray-1;\n    }\n\n    &.mat-selected {\n      background-color: $light-primary;\n    }\n  }\n\n  mat-option.select-basic-option.select-basic-option-clear,\n  mat-option.select-basic-option.select-basic-option-clear.mat-active{\n    color: $gray-4;\n  }\n}\n",
                    "styleUrl": "./select.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "ngControl",
                        "type": "NgControl"
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "ngControl",
                        "type": "NgControl",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor",
                "OnInit"
            ],
            "templateData": "<div class=\"select\">\n  <mat-select\n    disableRipple\n    disableOptionCentering\n    panelClass=\"select-component\"\n    [disabled]=\"selectDisabled\"\n    [placeholder]=\"placeholder\"\n    [value]=\"value\"\n    (valueChange)=\"selectionChange($event)\">\n\n    <div class=\"option-container\">\n      <mat-option class=\"select-basic-option select-basic-option-clear\"\n                  *ngIf=\"clearValue\">{{clearValue}}</mat-option>\n      <mat-option\n        class=\"select-basic-option\"\n        *ngFor=\"let option of optionList\"\n        [value]=\"option\">\n        <ng-container *ngIf=\"!templateRef\">{{option}}</ng-container>\n        <ng-template [ngTemplateOutlet]=\"templateRef\"\n                     [ngTemplateOutletContext]=\"{$implicit: option}\">\n        </ng-template>\n      </mat-option>\n    </div>\n\n  </mat-select>\n\n  <app-icon class=\"select-icon\"\n            fontName=\"keyboard_arrow_down\"\n            innerClass=\"text-gray-5\"\n            fontSize=\"14px\"></app-icon>\n</div>\n"
        },
        {
            "name": "SelectSearchComponent",
            "id": "component-SelectSearchComponent-6673366fdcf1d8f07808e47fd05a049a",
            "file": "src/app/core/atoms/select-search/select-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-select-search",
            "styleUrls": [
                "./select-search.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./select-search.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "clearValue",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "id",
                    "defaultValue": "'select-search'",
                    "line": 23,
                    "type": "string | number"
                },
                {
                    "name": "optionList",
                    "line": 31,
                    "type": "[]"
                },
                {
                    "name": "placeholder",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "value",
                    "line": 26,
                    "type": ""
                }
            ],
            "outputsClass": [
                {
                    "name": "optionSelected",
                    "defaultValue": "new EventEmitter<T>()",
                    "line": 36,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_optionSelected",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "filteredOptions",
                    "type": "T[]",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "inputSelectSearch",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'inputSelectSearch'"
                        }
                    ]
                },
                {
                    "name": "inputSelectSearchControl",
                    "defaultValue": "new FormControl()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "ngControl",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "onTouch",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "optionList",
                    "defaultValue": "[]",
                    "type": "T[]",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "optionSelectedTemplate",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'optionSelectedTemplate'"
                        }
                    ]
                },
                {
                    "name": "optionTemplate",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'optionTemplate'"
                        }
                    ]
                },
                {
                    "name": "showSearchInput",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "filterPredicate",
                    "args": [
                        {
                            "name": "data",
                            "type": "T[]"
                        },
                        {
                            "name": "filter",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "T[]",
                    "typeParameters": [],
                    "line": 67,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "T[]",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "filter",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52
                },
                {
                    "name": "optionSelectedAutocomplete",
                    "args": [
                        {
                            "name": "optionSelected",
                            "type": "MatAutocompleteSelectedEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "optionSelected",
                            "type": "MatAutocompleteSelectedEvent",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "T"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "T",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ContentChild, ElementRef, EventEmitter, Input, OnInit, Optional, Output, Self, TemplateRef, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NgControl } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete/autocomplete';\nimport { isObject } from '@helpers/objects-equal.helper';\nimport { normalizeValue } from '@helpers/string.helper';\n\n@Component({\n  selector: 'app-select-search',\n  templateUrl: './select-search.component.html',\n  styleUrls: ['./select-search.component.scss']\n})\nexport class SelectSearchComponent<T> implements ControlValueAccessor, OnInit {\n\n  private optionList: T[] = [];\n  public _optionSelected: T;\n  public filteredOptions: T[];\n  public showSearchInput: boolean;\n  public inputSelectSearchControl = new FormControl();\n\n  @Input() placeholder: string;\n  @Input() clearValue: string;\n  @Input() id: string | number = 'select-search';\n\n  @Input('value')\n  set _value(option: T) {\n    this._optionSelected = option;\n  }\n\n  @Input('optionList')\n  set _optionList(optionList: T[]) {\n    this.optionList = optionList;\n    this.filteredOptions = optionList;\n  }\n\n  @Output() optionSelected = new EventEmitter<T>();\n\n  @ContentChild('optionSelectedTemplate') optionSelectedTemplate: TemplateRef<any>;\n  @ContentChild('optionTemplate') optionTemplate: TemplateRef<any>;\n  @ViewChild('inputSelectSearch') inputSelectSearch: ElementRef<HTMLInputElement>;\n\n\n  onChange = (_: any) => {  };\n  onTouch = (_: any) => {  };\n\n  constructor(@Optional() @Self() public ngControl: NgControl) {\n    if (ngControl) {\n      ngControl.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    this.inputSelectSearchControl.valueChanges\n      .pipe(\n        startWith(''),\n        map((value: string) => {\n          this._optionSelected = null;\n          this.showSearchInput = !!value;\n          return this.filterPredicate(this.optionList, value);\n        })\n      )\n      .subscribe((filteredOptions) => {\n        this.filteredOptions = filteredOptions;\n      });\n  }\n\n  public filterPredicate(data: T[], filter: string): T[] {\n    const filterValue = normalizeValue(filter);\n    return data.filter(option => {\n      if (typeof option === 'string') {\n        return normalizeValue(option).includes(filterValue);\n      }\n      if (isObject(option)) {\n        const concatValue = Object.keys(option).map(key => normalizeValue(option[key])).join('');\n        const everyValue = Object.keys(option).some(key => normalizeValue(option[key]).includes(filterValue));\n\n        return normalizeValue(concatValue).includes(filterValue) || everyValue;\n      }\n      return false;\n    });\n  }\n\n\n  public optionSelectedAutocomplete(optionSelected: MatAutocompleteSelectedEvent) {\n    this._optionSelected = optionSelected.option.value;\n    this.optionSelected.emit(this._optionSelected);\n    this.onChange(this._optionSelected);\n\n    this.filteredOptions = this.optionList;\n    this.inputSelectSearch.nativeElement.blur();\n    this.inputSelectSearch.nativeElement.value = '';\n    this.showSearchInput = false;\n  }\n\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  writeValue(obj: T): void {\n    this._optionSelected = obj;\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables\";\n@import \"src/sass/utilities/position\";\n@import \"src/sass/utilities/text\";\n\n$select-input-height: 38px;\n\n:host {\n  display: inline-block;\n}\n\n.select-search {\n  background-color: $white;\n  border: 1px solid $gray-3;\n  border-radius: 4px;\n  height: $select-input-height;\n  display: block;\n  margin: 0;\n  position: relative;\n  cursor: pointer;\n\n  .select-search-input {\n    padding: 12px 34px 12px 16px;\n    border: 0;\n    height: $select-input-height;\n    width: 100%;\n    background-color: transparent;\n    @extend .text-label;\n    z-index: 2;\n  }\n\n  .select-search-span {\n    position: absolute;\n    padding: 12px 34px 12px 16px;\n    @extend .text-label;\n    z-index: 1;\n    width: 100%;\n  }\n\n  .select-search-icon {\n    pointer-events: none;\n    right: 16px;\n    display: inline-flex;\n    @extend .position-vertical-center\n  }\n}\n\n::ng-deep .mat-autocomplete-panel.select-search-component {\n  background-color: transparent;\n  border: 0;\n  box-shadow: none;\n  position: absolute;\n  overflow: initial;\n\n  .option-container {\n    border-radius: 4px;\n    background-color: $white;\n    box-shadow: 0 20px 40px rgba(9, 39, 85, 0.08);\n    box-sizing: border-box;\n    overflow: auto;\n    max-height: 300px;\n  }\n\n  mat-option.select-basic-option,\n  mat-option.select-basic-option.mat-option.mat-active {\n    color: $black;\n    background-color: transparent;\n    height: $select-input-height;\n    @extend .text-label;\n\n    &:hover {\n      background-color: $gray-1;\n    }\n\n    &.mat-selected {\n      background-color: $light-primary;\n    }\n  }\n\n  mat-option.select-basic-option.select-basic-option-clear,\n  mat-option.select-basic-option.select-basic-option-clear.mat-active {\n    color: $gray-4;\n  }\n}\n",
                    "styleUrl": "./select-search.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "ngControl",
                        "type": "NgControl"
                    }
                ],
                "line": 44,
                "jsdoctags": [
                    {
                        "name": "ngControl",
                        "type": "NgControl",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor",
                "OnInit"
            ],
            "accessors": {
                "_value": {
                    "name": "_value",
                    "setSignature": {
                        "name": "_value",
                        "type": "void",
                        "args": [
                            {
                                "name": "option",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 26,
                        "jsdoctags": [
                            {
                                "name": "option",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "_optionList": {
                    "name": "_optionList",
                    "setSignature": {
                        "name": "_optionList",
                        "type": "void",
                        "args": [
                            {
                                "name": "optionList",
                                "type": "[]"
                            }
                        ],
                        "returnType": "void",
                        "line": 31,
                        "jsdoctags": [
                            {
                                "name": "optionList",
                                "type": "[]",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<label class=\"select-search\"\n       [htmlFor]=\"id\">\n\n  <ng-container *ngIf=\"!showSearchInput\">\n    <span *ngIf=\"placeholder && !_optionSelected\"\n          class=\"select-search-span text-truncate text-gray-4\">\n      {{placeholder}}\n    </span>\n\n    <span class=\"select-search-span text-truncate\"\n          *ngIf=\"_optionSelected\">\n      <ng-container *ngIf=\"!optionSelectedTemplate\">{{_optionSelected}}</ng-container>\n      <ng-container [ngTemplateOutlet]=\"optionSelectedTemplate\"\n                    [ngTemplateOutletContext]=\"{$implicit: _optionSelected}\">\n      </ng-container>\n    </span>\n  </ng-container>\n\n  <input type=\"search\"\n         class=\"select-search-input\"\n         #inputSelectSearch\n         [id]=\"id\"\n         [formControl]=\"inputSelectSearchControl\"\n         [matAutocomplete]=\"selectSearch\">\n\n  <mat-autocomplete autoActiveFirstOption\n                    (optionSelected)=\"optionSelectedAutocomplete($event)\"\n                    [disableRipple]=\"true\"\n                    #selectSearch=\"matAutocomplete\"\n                    class=\"select-search-component\">\n    <div class=\"option-container\">\n      <mat-option class=\"select-basic-option select-basic-option-clear\"\n                  *ngIf=\"clearValue && filteredOptions?.length\">\n        {{clearValue}}\n      </mat-option>\n      <mat-option\n        class=\"select-basic-option\"\n        *ngFor=\"let option of filteredOptions\"\n        [value]=\"option\">\n        <ng-container *ngIf=\"!optionTemplate\">{{option}}</ng-container>\n        <ng-container [ngTemplateOutlet]=\"optionTemplate\"\n                      [ngTemplateOutletContext]=\"{$implicit: option}\">\n        </ng-container>\n      </mat-option>\n    </div>\n  </mat-autocomplete>\n\n\n  <app-icon class=\"select-search-icon\"\n            fontName=\"keyboard_arrow_down\"\n            innerClass=\"text-gray-5\"\n            fontSize=\"14px\"></app-icon>\n</label>\n"
        },
        {
            "name": "SelectTabComponent",
            "id": "component-SelectTabComponent-de36ffd03bdb8edae13122d56571ccff",
            "file": "src/app/core/atoms/select-tab/select-tab.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-select-tab",
            "styleUrls": [
                "./select-tab.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./select-tab.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "selectTabDisabled",
                    "line": 23,
                    "type": "boolean"
                },
                {
                    "name": "selectTabList",
                    "defaultValue": "[]",
                    "line": 12,
                    "type": "Array<string>"
                },
                {
                    "name": "selectTabValue",
                    "line": 15,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_selectTabDisabled",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "_selectTabFormControlName",
                    "defaultValue": "'selectTabRadio'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "_selectTabFormGroup",
                    "defaultValue": "new FormGroup({})",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "_selectTabValue",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "selectTabSubscribe",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "templateRef",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "TemplateRef"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeSelectTabValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ContentChild, Input, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'app-select-tab',\n    templateUrl: './select-tab.component.html',\n    styleUrls: ['./select-tab.component.scss']\n})\nexport class SelectTabComponent implements OnInit, OnDestroy {\n\n    @Input() selectTabList: Array<string> = [];\n\n    @Input('selectTabValue')\n    set selectTabValue(value: string) {\n        this._selectTabValue = value !== null && value !== undefined ? value : this.selectTabList[0];\n        if (this.selectTabControl && (this._selectTabValue !== value)) {\n            this.selectTabControl.setValue(this._selectTabValue);\n        }\n    }\n\n    @Input('selectTabDisabled')\n    set selectTabDisabled(disabled: boolean) {\n        this._selectTabDisabled = disabled || false;\n        if (this.selectTabControl) {\n            disabled ?\n                this.selectTabControl.disable() :\n                this.selectTabControl.enable();\n        }\n    }\n\n    public _selectTabFormGroup = new FormGroup({});\n    public _selectTabFormControlName = 'selectTabRadio';\n    public _selectTabValue = '';\n    public _selectTabDisabled = false;\n    private selectTabSubscribe: Subscription;\n\n    @ContentChild(TemplateRef) templateRef: TemplateRef<any>;\n\n    onChange = (_: any) => {};\n\n    constructor(private _formBuilder: FormBuilder) {\n    }\n\n    ngOnInit(): void {\n        this._selectTabFormGroup = this._formBuilder.group({\n            selectTabRadio: {value: this._selectTabValue, disabled: this._selectTabDisabled}\n        });\n\n        this.changeSelectTabValue();\n    }\n\n    ngOnDestroy() {\n        if (this.selectTabSubscribe) {\n            this.selectTabSubscribe.unsubscribe();\n        }\n    }\n\n    get selectTabControl() {\n        return this._selectTabFormGroup.controls[this._selectTabFormControlName];\n    }\n\n    changeSelectTabValue() {\n        this.selectTabSubscribe = this.selectTabControl.valueChanges.subscribe((value) => {\n            this._selectTabValue = value;\n            this.onChange(this._selectTabValue);\n        });\n\n    }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables/colors\";\n@import \"src/sass/utilities/text\";\n\n.select-tab{\n  flex-wrap: nowrap;\n  display: flex;\n}\n\n:host .select-tab {\n  ::ng-deep .select-tab-radio {\n    & + .radio-mark {\n      opacity: 0;\n    }\n\n    & ~ .radio-content {\n      background-color: $white;\n      border: 1px solid $gray-2;\n      padding: 12px 14px;\n      @extend .text-label\n    }\n\n    &:checked ~ .radio-content {\n      background-color: $black;\n      border-color: $black;\n      color: $white;\n      @extend .text-button\n    }\n\n  }\n\n  .select-tab-content {\n    &:first-child {\n      ::ng-deep .select-tab-radio ~ .radio-content {\n        border-radius: 4px 0 0 4px;\n      }\n    }\n\n    &:last-child {\n      ::ng-deep .select-tab-radio ~ .radio-content {\n        border-radius: 0 4px 4px 0;\n      }\n    }\n  }\n\n\n}\n",
                    "styleUrl": "./select-tab.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder"
                    }
                ],
                "line": 40,
                "jsdoctags": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "selectTabValue": {
                    "name": "selectTabValue",
                    "setSignature": {
                        "name": "selectTabValue",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "string"
                            }
                        ],
                        "returnType": "void",
                        "line": 15,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "selectTabDisabled": {
                    "name": "selectTabDisabled",
                    "setSignature": {
                        "name": "selectTabDisabled",
                        "type": "void",
                        "args": [
                            {
                                "name": "disabled",
                                "type": "boolean"
                            }
                        ],
                        "returnType": "void",
                        "line": 23,
                        "jsdoctags": [
                            {
                                "name": "disabled",
                                "type": "boolean",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "selectTabControl": {
                    "name": "selectTabControl",
                    "getSignature": {
                        "name": "selectTabControl",
                        "type": "",
                        "returnType": "",
                        "line": 59
                    }
                }
            },
            "templateData": "<div class=\"select-tab\" [formGroup]=\"_selectTabFormGroup\">\n  <ng-container *ngFor=\"let selectTab of selectTabList\">\n    <app-radio [radioValue]=\"selectTab\"\n               [formControlName]=\"_selectTabFormControlName\"\n               radioClass=\"select-tab-radio\"\n               class=\"select-tab-content\">\n      <ng-container *ngIf=\"!templateRef\">{{selectTab}}</ng-container>\n      <ng-template [ngTemplateOutlet]=\"templateRef\"\n                   [ngTemplateOutletContext]=\"{$implicit: selectTab}\">\n      </ng-template>\n    </app-radio>\n  </ng-container>\n</div>\n"
        },
        {
            "name": "SidenavComponent",
            "id": "component-SidenavComponent-c183d2885ae943442bfedbe8a03c40e3",
            "file": "src/app/core/organisms/sidenav/sidenav.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sidenav",
            "styleUrls": [
                "./sidenav.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sidenav.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "concatPath",
                    "defaultValue": "CONCAT_PATH",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "roles",
                    "defaultValue": "Role",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Role } from '@models/auth/role.model';\nimport { CONCAT_PATH } from '@parameters/concat-router-path.parameter';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss'],\n})\nexport class SidenavComponent implements OnInit {\n\n  public concatPath = CONCAT_PATH;\n  public roles = Role;\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables/colors\";\n\n.static-sidenav-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 100%;\n}\n\n.static-sidenav {\n  background-color: $black;\n  height: 100vh;\n  width: 64px;\n  padding: 24px 16px;\n  box-sizing: border-box;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n}\n\n.sidenav-top-taps .sidenav-taps {\n  margin-bottom: 24px;\n}\n\n.sidenav-bottom-taps .sidenav-taps {\n  margin-top: 24px;\n}\n\n::ng-deep .mat-tooltip.sidenav-tooltip {\n  margin-left: 25px;\n}\n",
                    "styleUrl": "./sidenav.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-sidenav-container class=\"static-sidenav-container\">\n    <mat-sidenav mode=\"side\"\n                 opened>\n        <div class=\"static-sidenav\">\n\n            <div class=\"sidenav-top-taps\">\n\n                <div class=\"sidenav-taps\">\n                    <app-router [router]=\"concatPath.base\">\n                        <app-icon svgName=\"main-logo\"\n                                  svgWidth=\"32px\"></app-icon>\n                    </app-router>\n                </div>\n\n                <div class=\"sidenav-taps\">\n                    <app-sidenav-navigation navigationTooltip=\"Operaciones\"\n                                            navigationText=\"OP\"\n                                            [navigationRoute]=\"concatPath.operations\">\n                    </app-sidenav-navigation>\n                </div>\n\n                <div class=\"sidenav-taps\" *appRoles=\"[roles.Admin]\">\n                    <app-sidenav-navigation navigationTooltip=\"Administrador\"\n                                            navigationText=\"AD\"\n                                            [navigationRoute]=\"concatPath.admin\">\n                    </app-sidenav-navigation>\n                </div>\n            </div>\n\n            <div class=\"sidenav-bottom-taps\">\n\n                <div class=\"sidenav-taps\">\n                    <app-profile></app-profile>\n                </div>\n\n            </div>\n\n        </div>\n    </mat-sidenav>\n\n\n    <mat-sidenav-content>\n        <ng-content></ng-content>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n"
        },
        {
            "name": "SidenavNavigationComponent",
            "id": "component-SidenavNavigationComponent-fb0ba2de50b0d0b5e2704ab7f164fc2b",
            "file": "src/app/core/organisms/sidenav/components/sidenav-navigation/sidenav-navigation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sidenav-navigation",
            "styleUrls": [
                "./sidenav-navigation.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sidenav-navigation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "navigationRoute",
                    "line": 12,
                    "type": "string[] | string"
                },
                {
                    "name": "navigationText",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "navigationTooltip",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-sidenav-navigation',\n    templateUrl: './sidenav-navigation.component.html',\n    styleUrls: ['./sidenav-navigation.component.scss']\n})\nexport class SidenavNavigationComponent implements OnInit {\n\n    @Input() navigationTooltip: string;\n    @Input() navigationText: string;\n    @Input() navigationRoute: string[] | string;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables/colors\";\n\n:host .inner-sidenav-navigation-container {\n  .inner-sidenav-text {\n    color: $gray-6;\n    margin-left: 8px;\n  }\n\n  .inner-sidenav-navigation-expansion-icon {\n    color: $gray-6;\n  }\n\n\n  .inner-sidenav-navigation {\n    display: flex;\n    align-items: center;\n    padding: 12px 16px;\n    border-radius: 4px;\n\n    &:hover {\n      background: rgba(0, 61, 153, 0.04);\n    }\n  }\n\n  ::ng-deep .inner-sidenav-navigation-active {\n    .inner-sidenav-navigation {\n      background: rgba(0, 61, 153, 0.04);\n    }\n\n    .inner-sidenav-text,\n    .inner-sidenav-navigation-expansion-icon{\n      color: $primary;\n    }\n  }\n}\n",
                    "styleUrl": "./sidenav-navigation.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-tooltip [tooltipValue]=\"navigationTooltip\"\n             tooltipClass=\"sidenav-tooltip\">\n  <app-router [router]=\"navigationRoute\"\n              class=\"d-block\">\n    <ng-template #routerActiveTemplate let-routerActiveVariable>\n      <app-button-action-text [active]=\"routerActiveVariable.isActive\">{{navigationText}}</app-button-action-text>\n    </ng-template>\n  </app-router>\n</app-tooltip>\n"
        },
        {
            "name": "StepComponent",
            "id": "component-StepComponent-63a8ddfdf32b8e031199a4dffb6551ef",
            "file": "src/app/core/molecules/stepper/step/step.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-step",
            "styleUrls": [
                "./step.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./step.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cancelButtonText",
                    "defaultValue": "'Cancelar edición'",
                    "line": 18
                },
                {
                    "name": "saveButtonDisabled",
                    "defaultValue": "true",
                    "line": 20
                },
                {
                    "name": "saveButtonText",
                    "defaultValue": "'Guardar cambios'",
                    "line": 19
                },
                {
                    "name": "stepDescription",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "stepDisabled",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "stepEdit",
                    "line": 16,
                    "type": "boolean"
                },
                {
                    "name": "stepExpandedToggle",
                    "line": 29,
                    "type": "boolean"
                },
                {
                    "name": "stepId",
                    "defaultValue": "1",
                    "line": 13,
                    "type": "number | string"
                },
                {
                    "name": "stepReadonly",
                    "line": 15,
                    "type": "boolean"
                },
                {
                    "name": "stepTitle",
                    "defaultValue": "'Título'",
                    "line": 11
                }
            ],
            "outputsClass": [
                {
                    "name": "cancelButtonEvent",
                    "defaultValue": "new EventEmitter()",
                    "line": 25,
                    "type": "EventEmitter"
                },
                {
                    "name": "saveButtonEvent",
                    "defaultValue": "new EventEmitter()",
                    "line": 26,
                    "type": "EventEmitter"
                },
                {
                    "name": "stepCloseEvent",
                    "defaultValue": "new EventEmitter()",
                    "line": 23,
                    "type": "EventEmitter"
                },
                {
                    "name": "stepOpenEvent",
                    "defaultValue": "new EventEmitter()",
                    "line": 22,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "matExpansionPanel",
                    "type": "MatExpansionPanel",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatExpansionPanel, {static: true}"
                        }
                    ]
                },
                {
                    "name": "stepExpanded",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { MatExpansionPanel } from '@angular/material/expansion';\n\n@Component({\n  selector: 'app-step',\n  templateUrl: './step.component.html',\n  styleUrls: ['./step.component.scss']\n})\nexport class StepComponent {\n\n  @Input() stepTitle = 'Título';\n  @Input() stepDescription: string;\n  @Input() stepId: number | string = 1;\n  @Input() stepDisabled: boolean;\n  @Input() stepReadonly: boolean;\n  @Input() stepEdit: boolean;\n\n  @Input() cancelButtonText = 'Cancelar edición';\n  @Input() saveButtonText = 'Guardar cambios';\n  @Input() saveButtonDisabled = true;\n\n  @Output() stepOpenEvent = new EventEmitter();\n  @Output() stepCloseEvent = new EventEmitter();\n\n  @Output() cancelButtonEvent = new EventEmitter();\n  @Output() saveButtonEvent = new EventEmitter();\n\n  @Input('stepExpandedToggle')\n  set stepExpandedToggle(expandedToggle: boolean) {\n    if (expandedToggle) {\n      this.matExpansionPanel.open();\n    } else {\n      this.matExpansionPanel.close();\n    }\n  }\n\n  stepExpanded = false;\n\n  @ViewChild(MatExpansionPanel, {static: true}) matExpansionPanel: MatExpansionPanel;\n\n  constructor() {\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '~sass/variables/colors';\n@import '~sass/utilities/text';\n@import '~sass/utilities/display';\n\n:host .step {\n  &.step-disabled {\n    pointer-events: none;\n\n  }\n\n  .steps-panel {\n    box-shadow: none;\n    background-color: $white;\n    border: 1px solid $gray-1;\n    box-sizing: border-box;\n    border-radius: 8px;\n  }\n\n  .step-header {\n    background-color: transparent;\n    padding: 24px 24px 0;\n    align-items: flex-start;\n\n    &:hover {\n      background-color: transparent;\n    }\n\n    &[aria-disabled=true] {\n      .step-header-id {\n        background-color: $gray-4;\n      }\n\n      .step-header-title {\n        color: $gray-4;\n      }\n    }\n\n    &.mat-expanded {\n      .step-header-id {\n        background-color: $primary;\n      }\n\n      .step-header-title {\n        color: $primary;\n      }\n    }\n\n    .step-header-content {\n      width: 100%;\n      justify-content: space-between;\n      @extend .d-flex-vertical-center\n    }\n\n    .step-header-title-container {\n      @extend .d-flex-vertical-center\n    }\n\n    .step-header-id {\n      border-radius: 4px;\n      padding: 6px 8px;\n      width: 24px;\n      height: 24px;\n      color: $white;\n      background-color: $gray-6;\n      margin-right: 18px;\n      @extend .text-caption\n    }\n\n    .step-header-title {\n      @extend .text-tag\n    }\n\n    .step-header-description-container {\n      justify-content: flex-end;\n      margin-right: 0;\n      max-width: 250px;\n      @extend .d-flex-vertical-center;\n\n      &-readonly {\n        pointer-events: none;\n      }\n    }\n\n    .step-header-description {\n      color: $dark-primary;\n      margin-right: 8px;\n      @extend .text-button\n    }\n\n    .step-header-description-icon {\n      color: $dark-primary;\n    }\n  }\n\n\n  ::ng-deep {\n    .mat-expansion-panel-body {\n      padding: 0 24px 24px;\n    }\n  }\n\n\n  .step-body {\n    border-top: 1px solid $gray-1;\n\n    .steps-body-content {\n      min-height: 70px;\n    }\n\n    .step-body-actions {\n      border-top: 1px solid $gray-1;\n      padding-top: 16px;\n      @extend .d-flex-horizontal-end;\n    }\n  }\n}\n",
                    "styleUrl": "./step.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 39
            },
            "accessors": {
                "stepExpandedToggle": {
                    "name": "stepExpandedToggle",
                    "setSignature": {
                        "name": "stepExpandedToggle",
                        "type": "void",
                        "args": [
                            {
                                "name": "expandedToggle",
                                "type": "boolean"
                            }
                        ],
                        "returnType": "void",
                        "line": 29,
                        "jsdoctags": [
                            {
                                "name": "expandedToggle",
                                "type": "boolean",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<div class=\"step\" [class.step-disabled]=\"stepDisabled || stepReadonly\">\n  <mat-expansion-panel hideToggle\n                       class=\"steps-panel\"\n                       [disabled]=\"stepDisabled || stepReadonly\"\n                       [(expanded)]=\"stepExpanded\"\n                       (opened)=\"stepOpenEvent.emit()\"\n                       (closed)=\"stepCloseEvent.emit()\">\n    <mat-expansion-panel-header class=\"step-header\"\n                                expandedHeight=\"64px\"\n                                collapsedHeight=\"72px\">\n      <div class=\"step-header-content\">\n        <mat-panel-title class=\"step-header-title-container\">\n          <span class=\"step-header-id\">{{stepId}}</span>\n          <span class=\"step-header-title\">{{stepTitle}}</span>\n        </mat-panel-title>\n        <mat-panel-description class=\"step-header-description-container\"\n                               [class.step-header-description-container-readonly]=\"stepReadonly\"\n                               *ngIf=\"!stepExpanded && stepDescription && (!stepDisabled || stepReadonly)\">\n          <span class=\"step-header-description text-truncate\">{{stepDescription}}</span>\n          <app-icon *ngIf=\"!stepReadonly\"\n                    class=\"step-header-description-icon\"\n                    fontName=\"edit\"\n                    fontSize=\"24px\"></app-icon>\n        </mat-panel-description>\n      </div>\n    </mat-expansion-panel-header>\n    <div class=\"step-body\">\n      <div class=\"steps-body-content\">\n        <ng-content></ng-content>\n      </div>\n\n      <div class=\"step-body-actions\">\n        <app-button appearance=\"secondary\"\n                    class=\"mr-4\"\n                    (click)=\"cancelButtonEvent.emit()\">\n          {{cancelButtonText}}\n        </app-button>\n        <app-button appearance=\"primary\"\n                    [disabled]=\"saveButtonDisabled\"\n                    (click)=\"saveButtonEvent.emit()\">\n          {{saveButtonText}}\n        </app-button>\n      </div>\n    </div>\n  </mat-expansion-panel>\n</div>\n"
        },
        {
            "name": "TagComponent",
            "id": "component-TagComponent-6c6a95e496040c03a51136ac1946facd",
            "file": "src/app/core/atoms/tag/tag.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tag",
            "styleUrls": [
                "./tag.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tag.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "tagStatus",
                    "line": 10,
                    "type": "\"error\" | \"warning\" | \"success\""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-tag',\n  templateUrl: './tag.component.html',\n  styleUrls: ['./tag.component.scss']\n})\nexport class TagComponent implements OnInit {\n\n  @Input() tagStatus: 'error' | 'warning' | 'success';\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".tag {\n  padding: 5px 18px;\n  text-transform: uppercase;\n}\n",
                    "styleUrl": "./tag.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<span class=\"text-tag tag\"\n      [class.text-danger]=\"tagStatus === 'error'\"\n      [class.text-warning]=\"tagStatus === 'warning'\"\n      [class.text-success]=\"tagStatus === 'success'\">\n  <ng-content></ng-content>\n</span>\n"
        },
        {
            "name": "TooltipComponent",
            "id": "component-TooltipComponent-0ab0466f967c6380c2f3c82f6129c8c3",
            "file": "src/app/core/atoms/tooltip/tooltip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tooltip",
            "styleUrls": [
                "./tooltip.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tooltip.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "tooltipClass",
                    "defaultValue": "''",
                    "line": 12
                },
                {
                    "name": "tooltipDisabled",
                    "line": 17,
                    "type": "boolean"
                },
                {
                    "name": "tooltipHideDelay",
                    "line": 16,
                    "type": "number"
                },
                {
                    "name": "tooltipPosition",
                    "defaultValue": "'right'",
                    "line": 13,
                    "type": "TooltipPosition"
                },
                {
                    "name": "tooltipShowDelay",
                    "line": 15,
                    "type": "number"
                },
                {
                    "name": "tooltipTouchGestures",
                    "line": 14,
                    "type": "TooltipTouchGestures"
                },
                {
                    "name": "tooltipValue",
                    "defaultValue": "'tooltip'",
                    "line": 11
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { TooltipPosition, TooltipTouchGestures } from '@angular/material/tooltip';\n\n@Component({\n    selector: 'app-tooltip',\n    templateUrl: './tooltip.component.html',\n    styleUrls: ['./tooltip.component.scss']\n})\nexport class TooltipComponent implements OnInit {\n\n    @Input() tooltipValue = 'tooltip';\n    @Input() tooltipClass = '';\n    @Input() tooltipPosition: TooltipPosition = 'right';\n    @Input() tooltipTouchGestures: TooltipTouchGestures;\n    @Input() tooltipShowDelay: number;\n    @Input() tooltipHideDelay: number;\n    @Input() tooltipDisabled: boolean;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/sass/variables/colors\";\n@import \"src/sass/utilities/text\";\n\n.tooltip {\n  display: unset;\n}\n\n::ng-deep .mat-tooltip.tooltip {\n  display: inline-flex;\n  position: relative;\n  background: $black;\n  border-radius: 4px;\n  padding: 9px 8px;\n  overflow: initial;\n  color: $white;\n  @extend .text-caption;\n\n  &:after {\n    content: \"\";\n    height: 10px;\n    width: 10px;\n    position: absolute;\n    background: $black;\n    left: -5px;\n    top: calc(50% - 5px);\n    transform: rotate(45deg);\n    transition: width 1s;\n  }\n\n  &.left,\n  &.before{\n    &:after {\n      left: auto;\n      right: -5px;\n    }\n  }\n\n  &.below{\n    &:after {\n      left: calc(50% - 5px);\n      top: -5px;\n    }\n  }\n\n  &.above{\n    &:after {\n      left: calc(50% - 5px);\n      bottom: -5px;\n      top: auto;\n    }\n  }\n}\n\n",
                    "styleUrl": "./tooltip.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 17
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"tooltip\"\n     [matTooltipClass]=\"tooltipClass + ' tooltip ' + tooltipPosition\"\n     [matTooltip]=\"tooltipValue\"\n     [matTooltipPosition]=\"tooltipPosition\"\n     [matTooltipTouchGestures]=\"tooltipTouchGestures\"\n     [matTooltipShowDelay]=\"tooltipShowDelay\"\n     [matTooltipHideDelay]=\"tooltipHideDelay\"\n     [matTooltipDisabled]=\"tooltipDisabled\">\n  <ng-content></ng-content>\n</div>\n"
        },
        {
            "name": "UnderConstructionComponent",
            "id": "component-UnderConstructionComponent-c90c019a143b545e245fce8922c99baf",
            "file": "src/app/core/pages/under-construction/under-construction.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-under-construction",
            "styleUrls": [
                "./under-construction.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./under-construction.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-under-construction',\n  templateUrl: './under-construction.component.html',\n  styleUrls: ['./under-construction.component.scss']\n})\nexport class UnderConstructionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./under-construction.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"under-construction d-flex-center\">\n  <div class=\"content text-center\">\n    <app-icon svgName=\"under-construction\"\n              svgWidth=\"295px\"></app-icon>\n    <h1 class=\"text-h5 mt-8 mb-0\">Página en construcción</h1>\n    <p class=\"text-subtitle-1 mt-5 mb-0\">Pronto verás nuevas funcionalidades aquí</p>\n  </div>\n</section>\n"
        },
        {
            "name": "UpdatePasswordFormComponent",
            "id": "component-UpdatePasswordFormComponent-82111f63ad2b8e8cfda8eca04fdea9f4",
            "file": "src/app/core/organisms/update-password-form/update-password-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "UpdatePasswordForm"
                }
            ],
            "selector": "app-update-password-form",
            "styleUrls": [
                "./update-password-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./update-password-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appearance",
                    "defaultValue": "'default'",
                    "line": 14,
                    "type": "\"dialog\" | \"default\""
                }
            ],
            "outputsClass": [
                {
                    "name": "formCancelEvent",
                    "defaultValue": "new EventEmitter()",
                    "line": 16,
                    "type": "EventEmitter"
                },
                {
                    "name": "formSubmitEvent",
                    "defaultValue": "new EventEmitter<string>()",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "capsLock",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "recoverPasswordResetForm",
                    "type": "UpdatePasswordForm",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "formCancel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23
                },
                {
                    "name": "resetPasswordForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { UpdatePasswordForm } from './form/update-password.form';\n\n@Component({\n    selector: 'app-update-password-form',\n    templateUrl: './update-password-form.component.html',\n    styleUrls: ['./update-password-form.component.scss'],\n    providers: [UpdatePasswordForm]\n})\nexport class UpdatePasswordFormComponent implements OnInit {\n\n    public capsLock: boolean;\n\n    @Input() appearance: 'dialog' | 'default' = 'default';\n    @Output() formSubmitEvent = new EventEmitter<string>();\n    @Output() formCancelEvent = new EventEmitter();\n\n    constructor(\n        public recoverPasswordResetForm: UpdatePasswordForm,\n    ) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    resetPasswordForm() {\n        this.recoverPasswordResetForm.resetForm();\n    }\n\n    formSubmit(): void {\n        this.formSubmitEvent.emit(this.recoverPasswordResetForm.passwordControl.value);\n    }\n\n    formCancel(): void {\n        this.formCancelEvent.emit();\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".update-password-actions {\n  .cancel {\n    margin-top: 14px;\n  }\n}\n\n.update-password-dialog {\n  display: flex;\n  flex-direction: row-reverse;\n\n  .cancel {\n    margin-right: 14px;\n    margin-top: 0;\n  }\n}\n",
                    "styleUrl": "./update-password-form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "recoverPasswordResetForm",
                        "type": "UpdatePasswordForm"
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "recoverPasswordResetForm",
                        "type": "UpdatePasswordForm",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"recoverPasswordResetForm.form$\"\n      (ngSubmit)=\"formSubmit()\">\n\n    <div class=\"password mb-5\">\n        <app-form-field>\n            <app-form-field-label>Tu nueva contraseña</app-form-field-label>\n            <app-input formControlName=\"password\"\n                       behavior=\"password\"\n                       labelClass=\"d-block\"\n                       id=\"password\"\n                       placeholder=\"Escribe aquí una contraseña nueva\">\n            </app-input>\n        </app-form-field>\n    </div>\n\n    <div class=\"confirm-password mb-5\">\n        <app-form-field>\n            <app-form-field-label>Repite tu nueva contraseña</app-form-field-label>\n            <app-input (appCapsLock)=\"capsLock=$event\"\n                       formControlName=\"confirmPassword\"\n                       behavior=\"password\"\n                       labelClass=\"d-block\"\n                       id=\"confirm-password\"\n                       placeholder=\"Repite aquí la contraseña que escribiste\">\n            </app-input>\n            <ng-container *ngIf=\"recoverPasswordResetForm.confirmPasswordControl.hasDifferentValuesError\">\n                <app-form-field-error>{{recoverPasswordResetForm.confirmPasswordControl.controlError}}</app-form-field-error>\n            </ng-container>\n        </app-form-field>\n\n        <label class=\"d-flex-vertical-center mt-2\" *ngIf=\"capsLock\">\n            <app-icon fontName=\"warning\"\n                      fontSize=\"16px\"\n                      innerClass=\"text-warning\"\n                      class=\"d-inline-flex mr-2\"></app-icon>\n            <span class=\"text-caption text-warning\">Las mayúsculas están activadas</span>\n        </label>\n    </div>\n\n    <div class=\"validators mb-7\">\n        <app-password-validator [valid]=\"recoverPasswordResetForm.passwordControl.validMinLength\">\n            6 caracteres mínimo\n        </app-password-validator>\n        <app-password-validator [valid]=\"recoverPasswordResetForm.passwordControl.validUpperCase\">\n            1 mayúscula\n        </app-password-validator>\n        <app-password-validator [valid]=\"recoverPasswordResetForm.passwordControl.validLowerCase\">\n            1 minúscula\n        </app-password-validator>\n        <app-password-validator [valid]=\"recoverPasswordResetForm.passwordControl.validNumberOrCharacter\">\n            1 número o caracter especial\n        </app-password-validator>\n    </div>\n\n\n    <div class=\"update-password-actions\"\n         [class.update-password-dialog]=\"appearance === 'dialog'\">\n        <div class=\"submit\">\n            <app-button [disabled]=\"recoverPasswordResetForm.form$.invalid\"\n                        innerClass=\"w-100\"\n                        appearance=\"primary\"\n                        behavior=\"submit\">\n                Cambiar de contraseña\n            </app-button>\n        </div>\n\n        <div class=\"cancel\">\n            <app-button (click)=\"formCancel()\"\n                        innerClass=\"w-100\"\n                        appearance=\"secondary\"\n                        behavior=\"button\">\n                Cancelar\n            </app-button>\n        </div>\n    </div>\n</form>\n"
        }
    ],
    "modules": [
        {
            "name": "AccountModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AccountCardComponent"
                        },
                        {
                            "name": "AccountComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "RecoverPasswordCodeComponent"
                        },
                        {
                            "name": "RecoverPasswordComponent"
                        },
                        {
                            "name": "RecoverPasswordResetComponent"
                        },
                        {
                            "name": "RecoverPasswordUserComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AccountRoutingModule"
                        },
                        {
                            "name": "AlertModule"
                        },
                        {
                            "name": "ButtonsModule"
                        },
                        {
                            "name": "DirectivesModule"
                        },
                        {
                            "name": "FormFieldModule"
                        },
                        {
                            "name": "IconsModule"
                        },
                        {
                            "name": "ImplementsServiceModule"
                        },
                        {
                            "name": "InputsModule"
                        },
                        {
                            "name": "LinksModule"
                        },
                        {
                            "name": "UpdatePasswordFormModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AccountRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AdminModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AdminComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AdminRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AdminRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AlertModule",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AlertService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AlertComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "IconsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "MainLoaderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "IconsRegistryModule"
                        },
                        {
                            "name": "InterceptorsServiceModule"
                        },
                        {
                            "name": "PagesModule"
                        },
                        {
                            "name": "StoreFactoryModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "MainLoaderComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BackRouterModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BackRouterComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "IconsModule"
                        },
                        {
                            "name": "LinksModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BackRouterComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BusinessModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BusinessComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "BusinessRoutingModule"
                        },
                        {
                            "name": "GuardServiceModule"
                        },
                        {
                            "name": "SidenavModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BusinessRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ButtonsModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AccountComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "RecoverPasswordResetComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "IconsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AccountComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "RecoverPasswordResetComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CardModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CardActionComponent"
                        },
                        {
                            "name": "CardRadioComponent"
                        },
                        {
                            "name": "CardStaticInformationComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "IconsModule"
                        },
                        {
                            "name": "RadioModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CardActionComponent"
                        },
                        {
                            "name": "CardRadioComponent"
                        },
                        {
                            "name": "CardStaticInformationComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CheckboxModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ClientsServiceModule",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AuthClientService"
                        },
                        {
                            "name": "CalendarClientService"
                        },
                        {
                            "name": "GenericService"
                        },
                        {
                            "name": "LocalClientService"
                        },
                        {
                            "name": "StorageClientService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DirectivesModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CapsLockDirective"
                        },
                        {
                            "name": "DigitsOnlyDirective"
                        },
                        {
                            "name": "RolesDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CapsLockDirective"
                        },
                        {
                            "name": "DigitsOnlyDirective"
                        },
                        {
                            "name": "RolesDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FormFieldModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AccountComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "RecoverPasswordResetComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AccountComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "RecoverPasswordResetComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "GuardServiceModule",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AuthClientService"
                        },
                        {
                            "name": "CalendarClientService"
                        },
                        {
                            "name": "GenericService"
                        },
                        {
                            "name": "LocalClientService"
                        },
                        {
                            "name": "StorageClientService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ImplementsServiceModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "IconsModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "IconsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "IconsComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "IconsRegistryModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ImplementsServiceModule",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AuthClientService"
                        },
                        {
                            "name": "CalendarClientService"
                        },
                        {
                            "name": "GenericService"
                        },
                        {
                            "name": "LocalClientService"
                        },
                        {
                            "name": "StorageClientService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ClientsServiceModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "InnerSidenavModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "InnerSidenavComponent"
                        },
                        {
                            "name": "InnerSidenavNavigationComponent"
                        },
                        {
                            "name": "InnerSidenavNavigationExpansionComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "IconsModule"
                        },
                        {
                            "name": "LinksModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "InnerSidenavComponent"
                        },
                        {
                            "name": "InnerSidenavNavigationComponent"
                        },
                        {
                            "name": "InnerSidenavNavigationExpansionComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "InputDatepickerModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DatepickerHeaderComponent"
                        },
                        {
                            "name": "InputDatepickerComponent"
                        },
                        {
                            "name": "InputDatepickerRangeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "IconsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "InputDatepickerComponent"
                        },
                        {
                            "name": "InputDatepickerRangeComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "InputsModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AccountComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "RecoverPasswordResetComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "DirectivesModule"
                        },
                        {
                            "name": "IconsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AccountComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "RecoverPasswordResetComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "InterceptorsServiceModule",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AuthClientService"
                        },
                        {
                            "name": "CalendarClientService"
                        },
                        {
                            "name": "GenericService"
                        },
                        {
                            "name": "LocalClientService"
                        },
                        {
                            "name": "StorageClientService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ClientsServiceModule"
                        },
                        {
                            "name": "ImplementsServiceModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LinksModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HrefComponent"
                        },
                        {
                            "name": "RouterComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "RouterComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OperationsCapacitiesModule",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "OperationsCapacitiesImplementService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "OpCapacitiesLocalDefaultCapacityCardComponent"
                        },
                        {
                            "name": "OpCapacitiesLocalDefaultCapacityComponent"
                        },
                        {
                            "name": "OpCapacitiesLocalDefaultCapacityDialogComponent"
                        },
                        {
                            "name": "OpCapacitiesStepCapacityTableComponent"
                        },
                        {
                            "name": "OpCapacitiesStepCapacityTableFormComponent"
                        },
                        {
                            "name": "OpCapacitiesStepEditionModeComponent"
                        },
                        {
                            "name": "OpCapacitiesStepExpressResourceComponent"
                        },
                        {
                            "name": "OpCapacitiesStepGroupOrLocalComponent"
                        },
                        {
                            "name": "OperationsCapacitiesComponent"
                        },
                        {
                            "name": "OperationsCapacityAmPmComponent"
                        },
                        {
                            "name": "OperationsCapacityExpressComponent"
                        },
                        {
                            "name": "OperationsCapacityHomeComponent"
                        },
                        {
                            "name": "OperationsCapacityRetComponent"
                        },
                        {
                            "name": "OperationsCapacityScheduledComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AlertModule"
                        },
                        {
                            "name": "BackRouterModule"
                        },
                        {
                            "name": "ButtonsModule"
                        },
                        {
                            "name": "CardModule"
                        },
                        {
                            "name": "CheckboxModule"
                        },
                        {
                            "name": "IconsModule"
                        },
                        {
                            "name": "InputDatepickerModule"
                        },
                        {
                            "name": "InputsModule"
                        },
                        {
                            "name": "LinksModule"
                        },
                        {
                            "name": "OperationsCapacitiesRoutingModule"
                        },
                        {
                            "name": "RadioModule"
                        },
                        {
                            "name": "SelectSearchModule"
                        },
                        {
                            "name": "SelectTabModule"
                        },
                        {
                            "name": "StepperModule"
                        },
                        {
                            "name": "TooltipModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OperationsCapacitiesRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OperationsModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "OperationsComponent"
                        },
                        {
                            "name": "OperationsHomeComponent"
                        },
                        {
                            "name": "OperationsSidenavComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ButtonsModule"
                        },
                        {
                            "name": "CardModule"
                        },
                        {
                            "name": "ClientsServiceModule"
                        },
                        {
                            "name": "IconsModule"
                        },
                        {
                            "name": "InnerSidenavModule"
                        },
                        {
                            "name": "LinksModule"
                        },
                        {
                            "name": "OperationsRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OperationsRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OperationsSettingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "OperationsSettingComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "BackRouterModule"
                        },
                        {
                            "name": "OperationsSettingRoutingModule"
                        },
                        {
                            "name": "PagesModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OperationsSettingRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OperationsStoresModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "OperationsStoresComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "BackRouterModule"
                        },
                        {
                            "name": "OperationsStoresRoutingModule"
                        },
                        {
                            "name": "PagesModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OperationsStoresRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OperationsZonesModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "OperationsZonesComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "BackRouterModule"
                        },
                        {
                            "name": "OperationsZonesRoutingModule"
                        },
                        {
                            "name": "PagesModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OperationsZonesRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PagesModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AccountComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "RecoverPasswordResetComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "IconsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AccountComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "RecoverPasswordResetComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProfileModule",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "ProfileUpdatePasswordDialogService"
                        },
                        {
                            "name": "ProfileUserInformationDialogService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ProfileComponent"
                        },
                        {
                            "name": "ProfileDialogHeaderComponent"
                        },
                        {
                            "name": "ProfileUpdatePasswordDialogComponent"
                        },
                        {
                            "name": "ProfileUserInformationDialogComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AlertModule"
                        },
                        {
                            "name": "ButtonsModule"
                        },
                        {
                            "name": "CardModule"
                        },
                        {
                            "name": "IconsModule"
                        },
                        {
                            "name": "UpdatePasswordFormModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ProfileComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RadioModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "RadioComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "RadioComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SelectModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AccountComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "RecoverPasswordResetComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "IconsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AccountComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "RecoverPasswordResetComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SelectSearchModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AccountComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "RecoverPasswordResetComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "IconsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AccountComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "RecoverPasswordResetComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SelectTabModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SelectTabComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "RadioModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SelectTabComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SidenavModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SidenavComponent"
                        },
                        {
                            "name": "SidenavNavigationComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ButtonsModule"
                        },
                        {
                            "name": "DirectivesModule"
                        },
                        {
                            "name": "IconsModule"
                        },
                        {
                            "name": "LinksModule"
                        },
                        {
                            "name": "ProfileModule"
                        },
                        {
                            "name": "TooltipModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SidenavComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "StepperModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "StepComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ButtonsModule"
                        },
                        {
                            "name": "IconsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "StepComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "StoreFactoryModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TagModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TagComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TagComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TooltipModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TooltipComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TooltipComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UpdatePasswordFormModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PasswordValidatorComponent"
                        },
                        {
                            "name": "UpdatePasswordFormComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ButtonsModule"
                        },
                        {
                            "name": "DirectivesModule"
                        },
                        {
                            "name": "FormFieldModule"
                        },
                        {
                            "name": "IconsModule"
                        },
                        {
                            "name": "InputsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UpdatePasswordFormComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "ACCOUNT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/business/business-routing.module.ts",
                "type": "Route",
                "defaultValue": "{\n    path: BUSINESS_PATH.login.valueOf(),\n    canActivate: [AccountGuard],\n    loadChildren: () => import('./account/account.module').then(m => m.AccountModule),\n}"
            },
            {
                "name": "ADMIN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/business/business-routing.module.ts",
                "type": "Route",
                "defaultValue": "{\n    path: BUSINESS_PATH.admin.valueOf(),\n    canLoad: [AuthGuard],\n    canActivate: [AuthGuard],\n    data: {roles: [Role.Admin.valueOf()]},\n    loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule)\n}"
            },
            {
                "name": "API_GATEWAY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/parameters/endpoints.parameter.ts",
                "type": "",
                "defaultValue": "`${environment.api_gateway}`"
            },
            {
                "name": "API_GATEWAY_AUTH",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/parameters/endpoints.parameter.ts",
                "type": "",
                "defaultValue": "`${environment.api_gateway_auth}`"
            },
            {
                "name": "BUSINESS_PATH",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/parameters/router-path.parameter.ts",
                "type": "object",
                "defaultValue": "{\n    login: 'cuenta',\n    admin: 'administrador',\n    operations: 'operaciones'\n}"
            },
            {
                "name": "CAPACITIES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/business/operations/operations-routing.module.ts",
                "type": "Route",
                "defaultValue": "{\n    path: OPERATIONS_PATH.capacities.valueOf(),\n    loadChildren: () => import('./views/operations-capacities/operations-capacities.module').then(m => m.OperationsCapacitiesModule),\n}"
            },
            {
                "name": "capacityAlertSuccessMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/business/operations/views/operations-capacities/parameters/operations-capacities-alert-message.parameter.ts",
                "type": "",
                "defaultValue": "(capacityType: string, capacityValue) => {\n  return `Se guardó con éxito la edición de capacidades\n            <span class=\"text-button\">${capacityType}</span> para\n            <span class=\"text-button\">${capacityValue}.</span>`;\n}"
            },
            {
                "name": "CCapacitiesServiceTypeName",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/models/capacities/capacities-service-type.model.ts",
                "type": "object",
                "defaultValue": "{\n    [ECapacitiesServiceType.amPm]: 'AM/PM',\n    [ECapacitiesServiceType.scheduled]: 'Programado',\n    [ECapacitiesServiceType.express]: 'Express',\n    [ECapacitiesServiceType.ret]: 'RET'\n}"
            },
            {
                "name": "CCapacitiesServiceTypeRoute",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/models/capacities/capacities-service-type.model.ts",
                "type": "object",
                "defaultValue": "{\n    [ECapacitiesServiceType.amPm]: OPERATIONS_CAPACITIES_PATH.amPm,\n    [ECapacitiesServiceType.scheduled]: OPERATIONS_CAPACITIES_PATH.scheduled,\n    [ECapacitiesServiceType.express]: OPERATIONS_CAPACITIES_PATH.express,\n    [ECapacitiesServiceType.ret]: OPERATIONS_CAPACITIES_PATH.ret\n}"
            },
            {
                "name": "CCapacitiesStepEditionModeName",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-edition-mode/op-capacities-step-edition-mode.component.ts",
                "type": "object",
                "defaultValue": "{\n  [ECapacitiesStepEditionMode.calendar]: 'Calendario',\n  [ECapacitiesStepEditionMode.default]: 'Por defecto',\n}"
            },
            {
                "name": "CCapacityStepGroupOrLocalName",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-group-or-local/op-capacities-step-group-or-local.service.ts",
                "type": "object",
                "defaultValue": "{\n  [ECapacityStepGroupOrLocal.group]: 'Grupo',\n  [ECapacityStepGroupOrLocal.local]: 'Local',\n}"
            },
            {
                "name": "CODE_ERROR_MESSAGES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/parameters/form-error-message.parameter.ts",
                "type": "object",
                "defaultValue": "{\n  required: 'Por favor ingresa un código válido',\n  minlength: 'Por favor ingresa un código válido',\n  pattern: 'Por favor ingresa un código válido',\n  wrongData: 'El código ingresado es incorrecto'\n}"
            },
            {
                "name": "COMPONENTS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/business/account/account.module.ts",
                "type": "[]",
                "defaultValue": "[\n    AccountComponent,\n    LoginComponent,\n    RecoverPasswordResetComponent\n]"
            },
            {
                "name": "COMPONENTS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/pages.module.ts",
                "type": "[]",
                "defaultValue": "[\n    NotSupportedComponent,\n    UnderConstructionComponent,\n    NotFoundComponent,\n]"
            },
            {
                "name": "COMPONENTS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/atoms/buttons/buttons.module.ts",
                "type": "[]",
                "defaultValue": "[\n  ButtonComponent,\n  ButtonIconComponent,\n  ButtonActionIconComponent,\n  ButtonActionTextComponent\n]"
            },
            {
                "name": "COMPONENTS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/atoms/inputs/inputs.module.ts",
                "type": "[]",
                "defaultValue": "[\n    InputComponent,\n    InputSearchComponent,\n    InputNumberComponent\n]"
            },
            {
                "name": "COMPONENTS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/atoms/select/select.module.ts",
                "type": "[]",
                "defaultValue": "[\n    SelectComponent\n]"
            },
            {
                "name": "COMPONENTS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/atoms/select-search/select-search.module.ts",
                "type": "[]",
                "defaultValue": "[\n  SelectSearchComponent\n]"
            },
            {
                "name": "COMPONENTS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/molecules/form-field/form-field.module.ts",
                "type": "[]",
                "defaultValue": "[\n    FormFieldComponent,\n    FormFieldLabelComponent,\n    FormFieldErrorComponent,\n]"
            },
            {
                "name": "CONCAT_PATH",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/parameters/concat-router-path.parameter.ts",
                "type": "object",
                "defaultValue": "{\n    base: '/',\n    operations: `/${BUSINESS_PATH.operations}`,\n    operationCapacities: `/${BUSINESS_PATH.operations}/${OPERATIONS_PATH.capacities}`,\n    operationZones: `/${BUSINESS_PATH.operations}/${OPERATIONS_PATH.zones}`,\n    operationStores: `/${BUSINESS_PATH.operations}/${OPERATIONS_PATH.stores}`,\n    operationSettings: `/${BUSINESS_PATH.operations}/${OPERATIONS_PATH.settings}`,\n    operationCapacitiesAmPm: `/${BUSINESS_PATH.operations}/${OPERATIONS_PATH.capacities}/${OPERATIONS_CAPACITIES_PATH.amPm}`,\n    operationCapacitiesScheduled: `/${BUSINESS_PATH.operations}/${OPERATIONS_PATH.capacities}/${OPERATIONS_CAPACITIES_PATH.scheduled}`,\n    operationCapacitiesExpress: `/${BUSINESS_PATH.operations}/${OPERATIONS_PATH.capacities}/${OPERATIONS_CAPACITIES_PATH.express}`,\n    operationCapacitiesRet: `/${BUSINESS_PATH.operations}/${OPERATIONS_PATH.capacities}/${OPERATIONS_CAPACITIES_PATH.ret}`,\n    operationCapacitiesReport: `/${BUSINESS_PATH.operations}/${OPERATIONS_PATH.capacities}/${OPERATIONS_CAPACITIES_PATH.report}`,\n\n    login: `/${BUSINESS_PATH.login}/${LOGIN_PATH.login}`,\n    recoverPassword: `/${BUSINESS_PATH.login}/${LOGIN_PATH.recoverPassword}`,\n    recoverPasswordReset: `/${BUSINESS_PATH.login}/${LOGIN_PATH.recoverPassword}/${LOGIN_PATH.recoverPasswordReset}`,\n    recoverPasswordUser: `/${BUSINESS_PATH.login}/${LOGIN_PATH.recoverPassword}/${LOGIN_PATH.recoverPasswordUser}`,\n    recoverPasswordCode: `/${BUSINESS_PATH.login}/${LOGIN_PATH.recoverPassword}/${LOGIN_PATH.recoverPasswordCode}`,\n\n    admin: `/${BUSINESS_PATH.admin}`,\n}"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "CUpdatePasswordMessages",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/organisms/update-password-form/parameters/update-password-messages.parameter.ts",
                "type": "object",
                "defaultValue": "{\n    error: 'No se pudo guardar <strong>tu nueva contraseña</strong>, por favor inténtalo de nuevo.',\n    success: 'Se cambió con éxito la <strong>contraseña de tu perfil</strong>.'\n}"
            },
            {
                "name": "DIRECTIVES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/directives/directives.module.ts",
                "type": "[]",
                "defaultValue": "[\n    DigitsOnlyDirective,\n    RolesDirective,\n]"
            },
            {
                "name": "EMAIL_ERROR_MESSAGES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/parameters/form-error-message.parameter.ts",
                "type": "object",
                "defaultValue": "{\n  required: 'Por favor ingresa un correo válido',\n  email: 'Por favor ingresa un correo válido',\n  pattern: 'Por favor ingresa un correo válido',\n  wrongData: 'El usuario ingresado es incorrecto'\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ci2.ts",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  show_logs: false,\n  envName: 'dev2',\n  api_gateway: 'https://4kz2r4t838.execute-api.us-east-1.amazonaws.com/CI02',\n  api_gateway_auth: 'https://28c9y4dvs8.execute-api.us-east-1.amazonaws.com/CI02',\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  show_logs: false,\n  envName: 'prod',\n  api_gateway: 'https://4kz2r4t838.execute-api.us-east-1.amazonaws.com/PROD',\n  api_gateway_auth: 'https://28c9y4dvs8.execute-api.us-east-1.amazonaws.com/PROD',\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.qa.ts",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  show_logs: false,\n  envName: 'qa',\n  api_gateway: 'https://4kz2r4t838.execute-api.us-east-1.amazonaws.com/QA',\n  api_gateway_auth: 'https://28c9y4dvs8.execute-api.us-east-1.amazonaws.com/QA',\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.qa2.ts",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  show_logs: false,\n  envName: 'qa2',\n  api_gateway: 'https://4kz2r4t838.execute-api.us-east-1.amazonaws.com/QA02',\n  api_gateway_auth: 'https://28c9y4dvs8.execute-api.us-east-1.amazonaws.com/QA02',\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  show_logs: false,\n  envName: 'dev',\n  api_gateway: 'https://4kz2r4t838.execute-api.us-east-1.amazonaws.com/CI02',\n  api_gateway_auth: 'https://28c9y4dvs8.execute-api.us-east-1.amazonaws.com/CI02',\n}"
            },
            {
                "name": "httpInterceptorProviders",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/interceptors/interceptor.providers.ts",
                "type": "[]",
                "defaultValue": "[\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n]"
            },
            {
                "name": "ICONS_SVG",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/atoms/icons/constants/icons-svg.ts",
                "type": "Array<IconsSvgModel>",
                "defaultValue": "[\n  {name: 'ampm', path: `${pathIcons}ampm.svg`},\n  {name: 'avatar', path: `${pathIcons}avatar.svg`},\n  {name: 'book', path: `${pathIcons}book.svg`},\n  {name: 'calendar', path: `${pathIcons}calendar.svg`},\n  {name: 'configuration', path: `${pathIcons}configuration.svg`},\n  {name: 'inkafarma', path: `${pathIcons}inkafarma.svg`},\n  {name: 'main-logo', path: `${pathIcons}main-logo.svg`},\n  {name: 'mifarma', path: `${pathIcons}mifarma.svg`},\n  {name: 'moto', path: `${pathIcons}moto.svg`},\n  {name: 'navigation', path: `${pathIcons}navigation.svg`},\n  {name: 'stores', path: `${pathIcons}stores.svg`},\n  {name: 'truck', path: `${pathIcons}truck.svg`},\n  {name: 'search', path: `${pathIcons}search.svg`},\n  {name: 'datepicker', path: `${pathIcons}datepicker.svg`},\n  {name: 'logo', path: `${pathIcons}logo.svg`},\n  {name: 'assigned-orders', path: `${pathIllustrations}assigned-orders.svg`},\n  {name: 'empty-orders-1', path: `${pathIllustrations}empty-orders-1.svg`},\n  {name: 'empty-orders', path: `${pathIllustrations}empty-orders.svg`},\n  {name: 'login', path: `${pathIllustrations}login.svg`},\n  {name: 'look-orders', path: `${pathIllustrations}look-orders.svg`},\n  {name: 'on-route', path: `${pathIllustrations}on-route.svg`},\n  {name: 'order-canceled', path: `${pathIllustrations}order-canceled.svg`},\n  {name: 'order-updated', path: `${pathIllustrations}order-updated.svg`},\n  {name: 'search-store', path: `${pathIllustrations}search-store.svg`},\n  {name: 'under-construction', path: `${pathIllustrations}under-construction.svg`},\n]"
            },
            {
                "name": "isArray",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/helpers/objects-equal.helper.ts",
                "type": "",
                "defaultValue": "(element: object | any) => {\n    return typeof element === 'object' && element !== null && Object.prototype.toString.call(element) === '[object Array]';\n}"
            },
            {
                "name": "isObject",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/helpers/objects-equal.helper.ts",
                "type": "",
                "defaultValue": "(element: object | any) => {\n    return typeof element === 'object' && element !== null && Object.prototype.toString.call(element) === '[object Object]';\n}"
            },
            {
                "name": "LOGIN_PATH",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/parameters/router-path.parameter.ts",
                "type": "object",
                "defaultValue": "{\n    login: 'iniciar-sesion',\n    recoverPassword: 'recuperar-contrasena',\n    recoverPasswordReset: 'contrasena',\n    recoverPasswordUser: 'usuario',\n    recoverPasswordCode: 'codigo',\n}"
            },
            {
                "name": "MY_FORMATS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/atoms/input-datepicker/input-datepicker/input-datepicker.component.ts",
                "type": "object",
                "defaultValue": "{\n    parse: {\n        dateInput: 'DD/MM/YYYY',\n    },\n    display: {\n        dateInput: 'DD/MM/YYYY',\n        monthYearLabel: 'MMMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n}"
            },
            {
                "name": "NAME_ERROR_MESSAGES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/parameters/form-error-message.parameter.ts",
                "type": "object",
                "defaultValue": "{\n  required: 'Ingresa tus nombres y apellidos',\n  validateCharacters: 'El nombre es inválido'\n}"
            },
            {
                "name": "objectHasElements",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/helpers/objects-equal.helper.ts",
                "type": "",
                "defaultValue": "(element: object | any) => {\n    return element && isObject(element) && Object.entries(element).length > 0 && isObject(element);\n}"
            },
            {
                "name": "OPERATIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/business/business-routing.module.ts",
                "type": "Route",
                "defaultValue": "{\n    path: BUSINESS_PATH.operations.valueOf(),\n    loadChildren: () => import('./operations/operations.module').then(m => m.OperationsModule),\n}"
            },
            {
                "name": "OPERATIONS_CAPACITIES_PATH",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/parameters/router-path.parameter.ts",
                "type": "object",
                "defaultValue": "{\n    amPm: 'am-pm',\n    scheduled: 'programado',\n    express: 'express',\n    ret: 'retiro-tienda',\n    report: 'reportes'\n}"
            },
            {
                "name": "OPERATIONS_PATH",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/parameters/router-path.parameter.ts",
                "type": "object",
                "defaultValue": "{\n    stores: 'locales',\n    zones: 'zonas',\n    capacities: 'capacidades',\n    settings: 'configuraciones'\n}"
            },
            {
                "name": "PASSWORD_ERROR_MESSAGES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/parameters/form-error-message.parameter.ts",
                "type": "object",
                "defaultValue": "{\n  required: 'Por favor ingresa una contraseña válida',\n  minlength: 'Por favor ingresa una contraseña válida',\n  pattern: 'Por favor ingresa una contraseña válida',\n  wrongData: 'La contraseña ingresada es incorrecta',\n  differentValues: 'Las contraseñas ingresadas no coinciden'\n}"
            },
            {
                "name": "pathIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/atoms/icons/constants/icons-svg.ts",
                "type": "string",
                "defaultValue": "'../assets/icons/'"
            },
            {
                "name": "pathIllustrations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/atoms/icons/constants/icons-svg.ts",
                "type": "string",
                "defaultValue": "'../assets/illustrations/'"
            },
            {
                "name": "RecoveryPasswordAlertMessages",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/business/account/parameters/recovery-password-alert-messages.parameter.ts",
                "type": "object",
                "defaultValue": "{\n    invalidUserName: 'Hubo un error al validar el correo, por favor inténtalo de nuevo.'\n}"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            },
            {
                "name": "RolesNames",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/models/auth/role.model.ts",
                "type": "object",
                "defaultValue": "{\n    [Role.Assistant]: 'Algunos permisos habilitados',\n    [Role.Admin]: 'Administrador de cuentas',\n    [Role.Viewer]: 'Solo puede ver'\n}"
            },
            {
                "name": "SERVICES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/clients/clients-service.module.ts",
                "type": "[]",
                "defaultValue": "[\n    GenericService,\n    CalendarClientService,\n    LocalClientService,\n    AuthClientService,\n    StorageClientService,\n]"
            },
            {
                "name": "SERVICES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/guards/guard-service.module.ts",
                "type": "[]",
                "defaultValue": "[\n    AuthGuard,\n    AccountGuard\n]"
            },
            {
                "name": "SERVICES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/implements/implements-service.module.ts",
                "type": "[]",
                "defaultValue": "[\n    AuthImplementService\n]"
            },
            {
                "name": "SERVICES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/interceptors/interceptors-service.module.ts",
                "type": "[]",
                "defaultValue": "[\n    ErrorInterceptor,\n    TokenInterceptor\n]"
            },
            {
                "name": "SETTING",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/business/operations/operations-routing.module.ts",
                "type": "Route",
                "defaultValue": "{\n    path: OPERATIONS_PATH.settings.valueOf(),\n    loadChildren: () => import('./views/operations-setting/operations-setting.module').then(m => m.OperationsSettingModule),\n}"
            },
            {
                "name": "STORES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/business/operations/operations-routing.module.ts",
                "type": "Route",
                "defaultValue": "{\n    path: OPERATIONS_PATH.stores.valueOf(),\n    loadChildren: () => import('./views/operations-stores/operations-stores.module').then(m => m.OperationsStoresModule),\n}"
            },
            {
                "name": "validCharacters",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/validators/generic-validator.ts",
                "type": "",
                "defaultValue": "/^[A-Za-zÀ-ÿ\\u00f1\\u00d1 ]+$/"
            },
            {
                "name": "validNumbers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/validators/generic-validator.ts",
                "type": "",
                "defaultValue": "/^[0-9]*$/"
            },
            {
                "name": "ZONES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/business/operations/operations-routing.module.ts",
                "type": "Route",
                "defaultValue": "{\n    path: OPERATIONS_PATH.zones.valueOf(),\n    loadChildren: () => import('./views/operations-zones/operations-zones.module').then(m => m.OperationsZonesModule),\n}"
            }
        ],
        "functions": [
            {
                "name": "addUnitOfTime",
                "file": "src/app/shared/helpers/dates.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "date"
                    },
                    {
                        "name": "amount",
                        "optional": true
                    },
                    {
                        "name": "unit",
                        "optional": true
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "date",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "amount",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "unit",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "checkDateAfterDate",
                "file": "src/app/shared/helpers/dates.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "dateAfter"
                    },
                    {
                        "name": "dateBefore"
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "dateAfter",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dateBefore",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "checkDateIsSameOrAfterDate",
                "file": "src/app/shared/helpers/dates.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "dateAfter"
                    },
                    {
                        "name": "dateBefore"
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "dateAfter",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dateBefore",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "emailMasking",
                "file": "src/app/shared/helpers/email-mask.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "email",
                        "type": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "email",
                        "type": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getDate",
                "file": "src/app/shared/helpers/dates.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "date",
                        "optional": true
                    },
                    {
                        "name": "format",
                        "optional": true
                    },
                    {
                        "name": "language",
                        "optional": true
                    },
                    {
                        "name": "strict",
                        "type": "boolean",
                        "optional": true
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "date",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "format",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "language",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "strict",
                        "type": "boolean",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getDaysRangeBetweenDates",
                "file": "src/app/shared/helpers/dates.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "endDate",
                        "type": ""
                    },
                    {
                        "name": "startDate",
                        "type": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "endDate",
                        "type": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "startDate",
                        "type": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getEnableErrorMessages",
                "file": "src/app/shared/helpers/control-error.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "formControl"
                    }
                ],
                "returnType": "boolean",
                "jsdoctags": [
                    {
                        "name": "formControl",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getErrorByFormControl",
                "file": "src/app/shared/helpers/control-error.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "formControl"
                    },
                    {
                        "name": "errorMessageArray",
                        "type": "any"
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "formControl",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "errorMessageArray",
                        "type": "any",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getYesterdayDate",
                "file": "src/app/shared/helpers/dates.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": []
            },
            {
                "name": "JwtDecodeToken",
                "file": "src/app/shared/helpers/jwt-decode.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "token"
                    }
                ],
                "returnType": "T",
                "jsdoctags": [
                    {
                        "name": "token",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "normalizeValue",
                "file": "src/app/shared/helpers/string.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "value"
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "value",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "parseUrl",
                "file": "src/app/shared/helpers/parse-url.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "url"
                    },
                    {
                        "name": "redirectTo"
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "url",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "redirectTo",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "resetControlHelper",
                "file": "src/app/shared/helpers/control-error.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "control"
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "control",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [
            {
                "name": "EAlertStatus",
                "childs": [
                    {
                        "name": "success",
                        "value": "success"
                    },
                    {
                        "name": "warning",
                        "value": "warning"
                    },
                    {
                        "name": "error",
                        "value": "error"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/core/molecules/alert/alert.component.ts"
            },
            {
                "name": "EAuthCredentials",
                "childs": [
                    {
                        "name": "username",
                        "value": "adm-operations"
                    },
                    {
                        "name": "password",
                        "value": "12345"
                    },
                    {
                        "name": "grant_type",
                        "value": "password"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/shared/parameters/auth.parameters.ts"
            },
            {
                "name": "ECapacitiesServiceType",
                "childs": [
                    {
                        "name": "amPm",
                        "value": "AM_PM"
                    },
                    {
                        "name": "scheduled",
                        "value": "PROG"
                    },
                    {
                        "name": "express",
                        "value": "EXP"
                    },
                    {
                        "name": "ret",
                        "value": "RET"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/shared/models/capacities/capacities-service-type.model.ts"
            },
            {
                "name": "ECapacitiesStepCapacityTable",
                "childs": [
                    {
                        "name": "daysRange",
                        "value": "daysRange"
                    },
                    {
                        "name": "hourlyCapacity",
                        "value": "hourlyCapacity"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-capacity-table/op-capacities-step-capacity-table.service.ts"
            },
            {
                "name": "ECapacitiesStepEditionMode",
                "childs": [
                    {
                        "name": "calendar",
                        "value": "CALENDAR"
                    },
                    {
                        "name": "default",
                        "value": "DEFAULT"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-edition-mode/op-capacities-step-edition-mode.service.ts"
            },
            {
                "name": "ECapacitiesStepExpressResource",
                "childs": [
                    {
                        "name": "daysRange",
                        "value": "daysRange"
                    },
                    {
                        "name": "hourlyCapacity",
                        "value": "hourlyCapacity"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-express-resource/op-capacities-step-express-resource.service.ts"
            },
            {
                "name": "ECapacityStepGroupOrLocal",
                "childs": [
                    {
                        "name": "group",
                        "value": "GROUP"
                    },
                    {
                        "name": "local",
                        "value": "LOCAL"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-group-or-local/op-capacities-step-group-or-local.service.ts"
            },
            {
                "name": "ECapacityStepStatus",
                "childs": [
                    {
                        "name": "disabled",
                        "value": "disabled"
                    },
                    {
                        "name": "readonly",
                        "value": "readonly"
                    },
                    {
                        "name": "open",
                        "value": "open"
                    },
                    {
                        "name": "close",
                        "value": "close"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/business/operations/views/operations-capacities/models/operations-capacity-step-status.model.ts"
            },
            {
                "name": "EChannel",
                "childs": [
                    {
                        "name": "digital",
                        "value": "DIGITAL"
                    },
                    {
                        "name": "call",
                        "value": "CALL"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/shared/models/channel/channel.model.ts"
            },
            {
                "name": "EHttpHeaderContentTypes",
                "childs": [
                    {
                        "name": "xWwwFormUrlencoded",
                        "value": "application/x-www-form-urlencoded"
                    },
                    {
                        "name": "json",
                        "value": "application/json"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/shared/parameters/http-header.parameter.ts"
            },
            {
                "name": "EHttpHeaders",
                "childs": [
                    {
                        "name": "contentType",
                        "value": "Content-Type"
                    },
                    {
                        "name": "authorization",
                        "value": "Authorization"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/shared/parameters/http-header.parameter.ts"
            },
            {
                "name": "EProfileDialogType",
                "childs": [
                    {
                        "name": "logout",
                        "value": "1"
                    },
                    {
                        "name": "updatePassword",
                        "value": "2"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/core/organisms/profile/parameters/profile-dialog-type.parameter.ts"
            },
            {
                "name": "Role",
                "childs": [
                    {
                        "name": "Assistant",
                        "value": "ROLE_ASSISTANT"
                    },
                    {
                        "name": "Viewer",
                        "value": "ROLE_VIEWER"
                    },
                    {
                        "name": "Admin",
                        "value": "ROLE_ADMINISTRATOR"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/shared/models/auth/role.model.ts"
            }
        ],
        "groupedVariables": {
            "src/app/business/business-routing.module.ts": [
                {
                    "name": "ACCOUNT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/business/business-routing.module.ts",
                    "type": "Route",
                    "defaultValue": "{\n    path: BUSINESS_PATH.login.valueOf(),\n    canActivate: [AccountGuard],\n    loadChildren: () => import('./account/account.module').then(m => m.AccountModule),\n}"
                },
                {
                    "name": "ADMIN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/business/business-routing.module.ts",
                    "type": "Route",
                    "defaultValue": "{\n    path: BUSINESS_PATH.admin.valueOf(),\n    canLoad: [AuthGuard],\n    canActivate: [AuthGuard],\n    data: {roles: [Role.Admin.valueOf()]},\n    loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule)\n}"
                },
                {
                    "name": "OPERATIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/business/business-routing.module.ts",
                    "type": "Route",
                    "defaultValue": "{\n    path: BUSINESS_PATH.operations.valueOf(),\n    loadChildren: () => import('./operations/operations.module').then(m => m.OperationsModule),\n}"
                }
            ],
            "src/app/shared/parameters/endpoints.parameter.ts": [
                {
                    "name": "API_GATEWAY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/parameters/endpoints.parameter.ts",
                    "type": "",
                    "defaultValue": "`${environment.api_gateway}`"
                },
                {
                    "name": "API_GATEWAY_AUTH",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/parameters/endpoints.parameter.ts",
                    "type": "",
                    "defaultValue": "`${environment.api_gateway_auth}`"
                }
            ],
            "src/app/shared/parameters/router-path.parameter.ts": [
                {
                    "name": "BUSINESS_PATH",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/parameters/router-path.parameter.ts",
                    "type": "object",
                    "defaultValue": "{\n    login: 'cuenta',\n    admin: 'administrador',\n    operations: 'operaciones'\n}"
                },
                {
                    "name": "LOGIN_PATH",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/parameters/router-path.parameter.ts",
                    "type": "object",
                    "defaultValue": "{\n    login: 'iniciar-sesion',\n    recoverPassword: 'recuperar-contrasena',\n    recoverPasswordReset: 'contrasena',\n    recoverPasswordUser: 'usuario',\n    recoverPasswordCode: 'codigo',\n}"
                },
                {
                    "name": "OPERATIONS_CAPACITIES_PATH",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/parameters/router-path.parameter.ts",
                    "type": "object",
                    "defaultValue": "{\n    amPm: 'am-pm',\n    scheduled: 'programado',\n    express: 'express',\n    ret: 'retiro-tienda',\n    report: 'reportes'\n}"
                },
                {
                    "name": "OPERATIONS_PATH",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/parameters/router-path.parameter.ts",
                    "type": "object",
                    "defaultValue": "{\n    stores: 'locales',\n    zones: 'zonas',\n    capacities: 'capacidades',\n    settings: 'configuraciones'\n}"
                }
            ],
            "src/app/business/operations/operations-routing.module.ts": [
                {
                    "name": "CAPACITIES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/business/operations/operations-routing.module.ts",
                    "type": "Route",
                    "defaultValue": "{\n    path: OPERATIONS_PATH.capacities.valueOf(),\n    loadChildren: () => import('./views/operations-capacities/operations-capacities.module').then(m => m.OperationsCapacitiesModule),\n}"
                },
                {
                    "name": "SETTING",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/business/operations/operations-routing.module.ts",
                    "type": "Route",
                    "defaultValue": "{\n    path: OPERATIONS_PATH.settings.valueOf(),\n    loadChildren: () => import('./views/operations-setting/operations-setting.module').then(m => m.OperationsSettingModule),\n}"
                },
                {
                    "name": "STORES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/business/operations/operations-routing.module.ts",
                    "type": "Route",
                    "defaultValue": "{\n    path: OPERATIONS_PATH.stores.valueOf(),\n    loadChildren: () => import('./views/operations-stores/operations-stores.module').then(m => m.OperationsStoresModule),\n}"
                },
                {
                    "name": "ZONES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/business/operations/operations-routing.module.ts",
                    "type": "Route",
                    "defaultValue": "{\n    path: OPERATIONS_PATH.zones.valueOf(),\n    loadChildren: () => import('./views/operations-zones/operations-zones.module').then(m => m.OperationsZonesModule),\n}"
                }
            ],
            "src/app/business/operations/views/operations-capacities/parameters/operations-capacities-alert-message.parameter.ts": [
                {
                    "name": "capacityAlertSuccessMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/business/operations/views/operations-capacities/parameters/operations-capacities-alert-message.parameter.ts",
                    "type": "",
                    "defaultValue": "(capacityType: string, capacityValue) => {\n  return `Se guardó con éxito la edición de capacidades\n            <span class=\"text-button\">${capacityType}</span> para\n            <span class=\"text-button\">${capacityValue}.</span>`;\n}"
                }
            ],
            "src/app/shared/models/capacities/capacities-service-type.model.ts": [
                {
                    "name": "CCapacitiesServiceTypeName",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/models/capacities/capacities-service-type.model.ts",
                    "type": "object",
                    "defaultValue": "{\n    [ECapacitiesServiceType.amPm]: 'AM/PM',\n    [ECapacitiesServiceType.scheduled]: 'Programado',\n    [ECapacitiesServiceType.express]: 'Express',\n    [ECapacitiesServiceType.ret]: 'RET'\n}"
                },
                {
                    "name": "CCapacitiesServiceTypeRoute",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/models/capacities/capacities-service-type.model.ts",
                    "type": "object",
                    "defaultValue": "{\n    [ECapacitiesServiceType.amPm]: OPERATIONS_CAPACITIES_PATH.amPm,\n    [ECapacitiesServiceType.scheduled]: OPERATIONS_CAPACITIES_PATH.scheduled,\n    [ECapacitiesServiceType.express]: OPERATIONS_CAPACITIES_PATH.express,\n    [ECapacitiesServiceType.ret]: OPERATIONS_CAPACITIES_PATH.ret\n}"
                }
            ],
            "src/app/business/operations/views/operations-capacities/components/op-capacities-step-edition-mode/op-capacities-step-edition-mode.component.ts": [
                {
                    "name": "CCapacitiesStepEditionModeName",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-edition-mode/op-capacities-step-edition-mode.component.ts",
                    "type": "object",
                    "defaultValue": "{\n  [ECapacitiesStepEditionMode.calendar]: 'Calendario',\n  [ECapacitiesStepEditionMode.default]: 'Por defecto',\n}"
                }
            ],
            "src/app/business/operations/views/operations-capacities/components/op-capacities-step-group-or-local/op-capacities-step-group-or-local.service.ts": [
                {
                    "name": "CCapacityStepGroupOrLocalName",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-group-or-local/op-capacities-step-group-or-local.service.ts",
                    "type": "object",
                    "defaultValue": "{\n  [ECapacityStepGroupOrLocal.group]: 'Grupo',\n  [ECapacityStepGroupOrLocal.local]: 'Local',\n}"
                }
            ],
            "src/app/shared/parameters/form-error-message.parameter.ts": [
                {
                    "name": "CODE_ERROR_MESSAGES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/parameters/form-error-message.parameter.ts",
                    "type": "object",
                    "defaultValue": "{\n  required: 'Por favor ingresa un código válido',\n  minlength: 'Por favor ingresa un código válido',\n  pattern: 'Por favor ingresa un código válido',\n  wrongData: 'El código ingresado es incorrecto'\n}"
                },
                {
                    "name": "EMAIL_ERROR_MESSAGES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/parameters/form-error-message.parameter.ts",
                    "type": "object",
                    "defaultValue": "{\n  required: 'Por favor ingresa un correo válido',\n  email: 'Por favor ingresa un correo válido',\n  pattern: 'Por favor ingresa un correo válido',\n  wrongData: 'El usuario ingresado es incorrecto'\n}"
                },
                {
                    "name": "NAME_ERROR_MESSAGES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/parameters/form-error-message.parameter.ts",
                    "type": "object",
                    "defaultValue": "{\n  required: 'Ingresa tus nombres y apellidos',\n  validateCharacters: 'El nombre es inválido'\n}"
                },
                {
                    "name": "PASSWORD_ERROR_MESSAGES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/parameters/form-error-message.parameter.ts",
                    "type": "object",
                    "defaultValue": "{\n  required: 'Por favor ingresa una contraseña válida',\n  minlength: 'Por favor ingresa una contraseña válida',\n  pattern: 'Por favor ingresa una contraseña válida',\n  wrongData: 'La contraseña ingresada es incorrecta',\n  differentValues: 'Las contraseñas ingresadas no coinciden'\n}"
                }
            ],
            "src/app/business/account/account.module.ts": [
                {
                    "name": "COMPONENTS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/business/account/account.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n    AccountComponent,\n    LoginComponent,\n    RecoverPasswordResetComponent\n]"
                }
            ],
            "src/app/core/pages/pages.module.ts": [
                {
                    "name": "COMPONENTS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/pages.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n    NotSupportedComponent,\n    UnderConstructionComponent,\n    NotFoundComponent,\n]"
                }
            ],
            "src/app/core/atoms/buttons/buttons.module.ts": [
                {
                    "name": "COMPONENTS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/atoms/buttons/buttons.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n  ButtonComponent,\n  ButtonIconComponent,\n  ButtonActionIconComponent,\n  ButtonActionTextComponent\n]"
                }
            ],
            "src/app/core/atoms/inputs/inputs.module.ts": [
                {
                    "name": "COMPONENTS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/atoms/inputs/inputs.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n    InputComponent,\n    InputSearchComponent,\n    InputNumberComponent\n]"
                }
            ],
            "src/app/core/atoms/select/select.module.ts": [
                {
                    "name": "COMPONENTS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/atoms/select/select.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n    SelectComponent\n]"
                }
            ],
            "src/app/core/atoms/select-search/select-search.module.ts": [
                {
                    "name": "COMPONENTS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/atoms/select-search/select-search.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n  SelectSearchComponent\n]"
                }
            ],
            "src/app/core/molecules/form-field/form-field.module.ts": [
                {
                    "name": "COMPONENTS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/molecules/form-field/form-field.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n    FormFieldComponent,\n    FormFieldLabelComponent,\n    FormFieldErrorComponent,\n]"
                }
            ],
            "src/app/shared/parameters/concat-router-path.parameter.ts": [
                {
                    "name": "CONCAT_PATH",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/parameters/concat-router-path.parameter.ts",
                    "type": "object",
                    "defaultValue": "{\n    base: '/',\n    operations: `/${BUSINESS_PATH.operations}`,\n    operationCapacities: `/${BUSINESS_PATH.operations}/${OPERATIONS_PATH.capacities}`,\n    operationZones: `/${BUSINESS_PATH.operations}/${OPERATIONS_PATH.zones}`,\n    operationStores: `/${BUSINESS_PATH.operations}/${OPERATIONS_PATH.stores}`,\n    operationSettings: `/${BUSINESS_PATH.operations}/${OPERATIONS_PATH.settings}`,\n    operationCapacitiesAmPm: `/${BUSINESS_PATH.operations}/${OPERATIONS_PATH.capacities}/${OPERATIONS_CAPACITIES_PATH.amPm}`,\n    operationCapacitiesScheduled: `/${BUSINESS_PATH.operations}/${OPERATIONS_PATH.capacities}/${OPERATIONS_CAPACITIES_PATH.scheduled}`,\n    operationCapacitiesExpress: `/${BUSINESS_PATH.operations}/${OPERATIONS_PATH.capacities}/${OPERATIONS_CAPACITIES_PATH.express}`,\n    operationCapacitiesRet: `/${BUSINESS_PATH.operations}/${OPERATIONS_PATH.capacities}/${OPERATIONS_CAPACITIES_PATH.ret}`,\n    operationCapacitiesReport: `/${BUSINESS_PATH.operations}/${OPERATIONS_PATH.capacities}/${OPERATIONS_CAPACITIES_PATH.report}`,\n\n    login: `/${BUSINESS_PATH.login}/${LOGIN_PATH.login}`,\n    recoverPassword: `/${BUSINESS_PATH.login}/${LOGIN_PATH.recoverPassword}`,\n    recoverPasswordReset: `/${BUSINESS_PATH.login}/${LOGIN_PATH.recoverPassword}/${LOGIN_PATH.recoverPasswordReset}`,\n    recoverPasswordUser: `/${BUSINESS_PATH.login}/${LOGIN_PATH.recoverPassword}/${LOGIN_PATH.recoverPasswordUser}`,\n    recoverPasswordCode: `/${BUSINESS_PATH.login}/${LOGIN_PATH.recoverPassword}/${LOGIN_PATH.recoverPasswordCode}`,\n\n    admin: `/${BUSINESS_PATH.admin}`,\n}"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/app/core/organisms/update-password-form/parameters/update-password-messages.parameter.ts": [
                {
                    "name": "CUpdatePasswordMessages",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/organisms/update-password-form/parameters/update-password-messages.parameter.ts",
                    "type": "object",
                    "defaultValue": "{\n    error: 'No se pudo guardar <strong>tu nueva contraseña</strong>, por favor inténtalo de nuevo.',\n    success: 'Se cambió con éxito la <strong>contraseña de tu perfil</strong>.'\n}"
                }
            ],
            "src/app/shared/directives/directives.module.ts": [
                {
                    "name": "DIRECTIVES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/directives/directives.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n    DigitsOnlyDirective,\n    RolesDirective,\n]"
                }
            ],
            "src/environments/environment.ci2.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ci2.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  show_logs: false,\n  envName: 'dev2',\n  api_gateway: 'https://4kz2r4t838.execute-api.us-east-1.amazonaws.com/CI02',\n  api_gateway_auth: 'https://28c9y4dvs8.execute-api.us-east-1.amazonaws.com/CI02',\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  show_logs: false,\n  envName: 'prod',\n  api_gateway: 'https://4kz2r4t838.execute-api.us-east-1.amazonaws.com/PROD',\n  api_gateway_auth: 'https://28c9y4dvs8.execute-api.us-east-1.amazonaws.com/PROD',\n}"
                }
            ],
            "src/environments/environment.qa.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.qa.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  show_logs: false,\n  envName: 'qa',\n  api_gateway: 'https://4kz2r4t838.execute-api.us-east-1.amazonaws.com/QA',\n  api_gateway_auth: 'https://28c9y4dvs8.execute-api.us-east-1.amazonaws.com/QA',\n}"
                }
            ],
            "src/environments/environment.qa2.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.qa2.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  show_logs: false,\n  envName: 'qa2',\n  api_gateway: 'https://4kz2r4t838.execute-api.us-east-1.amazonaws.com/QA02',\n  api_gateway_auth: 'https://28c9y4dvs8.execute-api.us-east-1.amazonaws.com/QA02',\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  show_logs: false,\n  envName: 'dev',\n  api_gateway: 'https://4kz2r4t838.execute-api.us-east-1.amazonaws.com/CI02',\n  api_gateway_auth: 'https://28c9y4dvs8.execute-api.us-east-1.amazonaws.com/CI02',\n}"
                }
            ],
            "src/app/shared/interceptors/interceptor.providers.ts": [
                {
                    "name": "httpInterceptorProviders",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/interceptors/interceptor.providers.ts",
                    "type": "[]",
                    "defaultValue": "[\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n]"
                }
            ],
            "src/app/core/atoms/icons/constants/icons-svg.ts": [
                {
                    "name": "ICONS_SVG",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/atoms/icons/constants/icons-svg.ts",
                    "type": "Array<IconsSvgModel>",
                    "defaultValue": "[\n  {name: 'ampm', path: `${pathIcons}ampm.svg`},\n  {name: 'avatar', path: `${pathIcons}avatar.svg`},\n  {name: 'book', path: `${pathIcons}book.svg`},\n  {name: 'calendar', path: `${pathIcons}calendar.svg`},\n  {name: 'configuration', path: `${pathIcons}configuration.svg`},\n  {name: 'inkafarma', path: `${pathIcons}inkafarma.svg`},\n  {name: 'main-logo', path: `${pathIcons}main-logo.svg`},\n  {name: 'mifarma', path: `${pathIcons}mifarma.svg`},\n  {name: 'moto', path: `${pathIcons}moto.svg`},\n  {name: 'navigation', path: `${pathIcons}navigation.svg`},\n  {name: 'stores', path: `${pathIcons}stores.svg`},\n  {name: 'truck', path: `${pathIcons}truck.svg`},\n  {name: 'search', path: `${pathIcons}search.svg`},\n  {name: 'datepicker', path: `${pathIcons}datepicker.svg`},\n  {name: 'logo', path: `${pathIcons}logo.svg`},\n  {name: 'assigned-orders', path: `${pathIllustrations}assigned-orders.svg`},\n  {name: 'empty-orders-1', path: `${pathIllustrations}empty-orders-1.svg`},\n  {name: 'empty-orders', path: `${pathIllustrations}empty-orders.svg`},\n  {name: 'login', path: `${pathIllustrations}login.svg`},\n  {name: 'look-orders', path: `${pathIllustrations}look-orders.svg`},\n  {name: 'on-route', path: `${pathIllustrations}on-route.svg`},\n  {name: 'order-canceled', path: `${pathIllustrations}order-canceled.svg`},\n  {name: 'order-updated', path: `${pathIllustrations}order-updated.svg`},\n  {name: 'search-store', path: `${pathIllustrations}search-store.svg`},\n  {name: 'under-construction', path: `${pathIllustrations}under-construction.svg`},\n]"
                },
                {
                    "name": "pathIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/atoms/icons/constants/icons-svg.ts",
                    "type": "string",
                    "defaultValue": "'../assets/icons/'"
                },
                {
                    "name": "pathIllustrations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/atoms/icons/constants/icons-svg.ts",
                    "type": "string",
                    "defaultValue": "'../assets/illustrations/'"
                }
            ],
            "src/app/shared/helpers/objects-equal.helper.ts": [
                {
                    "name": "isArray",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/helpers/objects-equal.helper.ts",
                    "type": "",
                    "defaultValue": "(element: object | any) => {\n    return typeof element === 'object' && element !== null && Object.prototype.toString.call(element) === '[object Array]';\n}"
                },
                {
                    "name": "isObject",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/helpers/objects-equal.helper.ts",
                    "type": "",
                    "defaultValue": "(element: object | any) => {\n    return typeof element === 'object' && element !== null && Object.prototype.toString.call(element) === '[object Object]';\n}"
                },
                {
                    "name": "objectHasElements",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/helpers/objects-equal.helper.ts",
                    "type": "",
                    "defaultValue": "(element: object | any) => {\n    return element && isObject(element) && Object.entries(element).length > 0 && isObject(element);\n}"
                }
            ],
            "src/app/core/atoms/input-datepicker/input-datepicker/input-datepicker.component.ts": [
                {
                    "name": "MY_FORMATS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/atoms/input-datepicker/input-datepicker/input-datepicker.component.ts",
                    "type": "object",
                    "defaultValue": "{\n    parse: {\n        dateInput: 'DD/MM/YYYY',\n    },\n    display: {\n        dateInput: 'DD/MM/YYYY',\n        monthYearLabel: 'MMMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n}"
                }
            ],
            "src/app/business/account/parameters/recovery-password-alert-messages.parameter.ts": [
                {
                    "name": "RecoveryPasswordAlertMessages",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/business/account/parameters/recovery-password-alert-messages.parameter.ts",
                    "type": "object",
                    "defaultValue": "{\n    invalidUserName: 'Hubo un error al validar el correo, por favor inténtalo de nuevo.'\n}"
                }
            ],
            "src/app/shared/models/auth/role.model.ts": [
                {
                    "name": "RolesNames",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/models/auth/role.model.ts",
                    "type": "object",
                    "defaultValue": "{\n    [Role.Assistant]: 'Algunos permisos habilitados',\n    [Role.Admin]: 'Administrador de cuentas',\n    [Role.Viewer]: 'Solo puede ver'\n}"
                }
            ],
            "src/app/shared/clients/clients-service.module.ts": [
                {
                    "name": "SERVICES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/clients/clients-service.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n    GenericService,\n    CalendarClientService,\n    LocalClientService,\n    AuthClientService,\n    StorageClientService,\n]"
                }
            ],
            "src/app/shared/guards/guard-service.module.ts": [
                {
                    "name": "SERVICES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/guards/guard-service.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n    AuthGuard,\n    AccountGuard\n]"
                }
            ],
            "src/app/shared/implements/implements-service.module.ts": [
                {
                    "name": "SERVICES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/implements/implements-service.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n    AuthImplementService\n]"
                }
            ],
            "src/app/shared/interceptors/interceptors-service.module.ts": [
                {
                    "name": "SERVICES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/interceptors/interceptors-service.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n    ErrorInterceptor,\n    TokenInterceptor\n]"
                }
            ],
            "src/app/shared/validators/generic-validator.ts": [
                {
                    "name": "validCharacters",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/validators/generic-validator.ts",
                    "type": "",
                    "defaultValue": "/^[A-Za-zÀ-ÿ\\u00f1\\u00d1 ]+$/"
                },
                {
                    "name": "validNumbers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/validators/generic-validator.ts",
                    "type": "",
                    "defaultValue": "/^[0-9]*$/"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/shared/helpers/dates.helper.ts": [
                {
                    "name": "addUnitOfTime",
                    "file": "src/app/shared/helpers/dates.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "date"
                        },
                        {
                            "name": "amount",
                            "optional": true
                        },
                        {
                            "name": "unit",
                            "optional": true
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "date",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "amount",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "unit",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "checkDateAfterDate",
                    "file": "src/app/shared/helpers/dates.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "dateAfter"
                        },
                        {
                            "name": "dateBefore"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "dateAfter",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dateBefore",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "checkDateIsSameOrAfterDate",
                    "file": "src/app/shared/helpers/dates.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "dateAfter"
                        },
                        {
                            "name": "dateBefore"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "dateAfter",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dateBefore",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDate",
                    "file": "src/app/shared/helpers/dates.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "date",
                            "optional": true
                        },
                        {
                            "name": "format",
                            "optional": true
                        },
                        {
                            "name": "language",
                            "optional": true
                        },
                        {
                            "name": "strict",
                            "type": "boolean",
                            "optional": true
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "date",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "format",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "language",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "strict",
                            "type": "boolean",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDaysRangeBetweenDates",
                    "file": "src/app/shared/helpers/dates.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "endDate",
                            "type": ""
                        },
                        {
                            "name": "startDate",
                            "type": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "endDate",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "startDate",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getYesterdayDate",
                    "file": "src/app/shared/helpers/dates.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/shared/helpers/email-mask.helper.ts": [
                {
                    "name": "emailMasking",
                    "file": "src/app/shared/helpers/email-mask.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "email",
                            "type": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/helpers/control-error.helper.ts": [
                {
                    "name": "getEnableErrorMessages",
                    "file": "src/app/shared/helpers/control-error.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "formControl"
                        }
                    ],
                    "returnType": "boolean",
                    "jsdoctags": [
                        {
                            "name": "formControl",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getErrorByFormControl",
                    "file": "src/app/shared/helpers/control-error.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "formControl"
                        },
                        {
                            "name": "errorMessageArray",
                            "type": "any"
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "formControl",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "errorMessageArray",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resetControlHelper",
                    "file": "src/app/shared/helpers/control-error.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "control"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "control",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/helpers/jwt-decode.helper.ts": [
                {
                    "name": "JwtDecodeToken",
                    "file": "src/app/shared/helpers/jwt-decode.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "token"
                        }
                    ],
                    "returnType": "T",
                    "jsdoctags": [
                        {
                            "name": "token",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/helpers/string.helper.ts": [
                {
                    "name": "normalizeValue",
                    "file": "src/app/shared/helpers/string.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "value"
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/helpers/parse-url.helper.ts": [
                {
                    "name": "parseUrl",
                    "file": "src/app/shared/helpers/parse-url.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "url"
                        },
                        {
                            "name": "redirectTo"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "redirectTo",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/core/molecules/alert/alert.component.ts": [
                {
                    "name": "EAlertStatus",
                    "childs": [
                        {
                            "name": "success",
                            "value": "success"
                        },
                        {
                            "name": "warning",
                            "value": "warning"
                        },
                        {
                            "name": "error",
                            "value": "error"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/core/molecules/alert/alert.component.ts"
                }
            ],
            "src/app/shared/parameters/auth.parameters.ts": [
                {
                    "name": "EAuthCredentials",
                    "childs": [
                        {
                            "name": "username",
                            "value": "adm-operations"
                        },
                        {
                            "name": "password",
                            "value": "12345"
                        },
                        {
                            "name": "grant_type",
                            "value": "password"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/shared/parameters/auth.parameters.ts"
                }
            ],
            "src/app/shared/models/capacities/capacities-service-type.model.ts": [
                {
                    "name": "ECapacitiesServiceType",
                    "childs": [
                        {
                            "name": "amPm",
                            "value": "AM_PM"
                        },
                        {
                            "name": "scheduled",
                            "value": "PROG"
                        },
                        {
                            "name": "express",
                            "value": "EXP"
                        },
                        {
                            "name": "ret",
                            "value": "RET"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/shared/models/capacities/capacities-service-type.model.ts"
                }
            ],
            "src/app/business/operations/views/operations-capacities/components/op-capacities-step-capacity-table/op-capacities-step-capacity-table.service.ts": [
                {
                    "name": "ECapacitiesStepCapacityTable",
                    "childs": [
                        {
                            "name": "daysRange",
                            "value": "daysRange"
                        },
                        {
                            "name": "hourlyCapacity",
                            "value": "hourlyCapacity"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-capacity-table/op-capacities-step-capacity-table.service.ts"
                }
            ],
            "src/app/business/operations/views/operations-capacities/components/op-capacities-step-edition-mode/op-capacities-step-edition-mode.service.ts": [
                {
                    "name": "ECapacitiesStepEditionMode",
                    "childs": [
                        {
                            "name": "calendar",
                            "value": "CALENDAR"
                        },
                        {
                            "name": "default",
                            "value": "DEFAULT"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-edition-mode/op-capacities-step-edition-mode.service.ts"
                }
            ],
            "src/app/business/operations/views/operations-capacities/components/op-capacities-step-express-resource/op-capacities-step-express-resource.service.ts": [
                {
                    "name": "ECapacitiesStepExpressResource",
                    "childs": [
                        {
                            "name": "daysRange",
                            "value": "daysRange"
                        },
                        {
                            "name": "hourlyCapacity",
                            "value": "hourlyCapacity"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-express-resource/op-capacities-step-express-resource.service.ts"
                }
            ],
            "src/app/business/operations/views/operations-capacities/components/op-capacities-step-group-or-local/op-capacities-step-group-or-local.service.ts": [
                {
                    "name": "ECapacityStepGroupOrLocal",
                    "childs": [
                        {
                            "name": "group",
                            "value": "GROUP"
                        },
                        {
                            "name": "local",
                            "value": "LOCAL"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-group-or-local/op-capacities-step-group-or-local.service.ts"
                }
            ],
            "src/app/business/operations/views/operations-capacities/models/operations-capacity-step-status.model.ts": [
                {
                    "name": "ECapacityStepStatus",
                    "childs": [
                        {
                            "name": "disabled",
                            "value": "disabled"
                        },
                        {
                            "name": "readonly",
                            "value": "readonly"
                        },
                        {
                            "name": "open",
                            "value": "open"
                        },
                        {
                            "name": "close",
                            "value": "close"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/business/operations/views/operations-capacities/models/operations-capacity-step-status.model.ts"
                }
            ],
            "src/app/shared/models/channel/channel.model.ts": [
                {
                    "name": "EChannel",
                    "childs": [
                        {
                            "name": "digital",
                            "value": "DIGITAL"
                        },
                        {
                            "name": "call",
                            "value": "CALL"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/shared/models/channel/channel.model.ts"
                }
            ],
            "src/app/shared/parameters/http-header.parameter.ts": [
                {
                    "name": "EHttpHeaderContentTypes",
                    "childs": [
                        {
                            "name": "xWwwFormUrlencoded",
                            "value": "application/x-www-form-urlencoded"
                        },
                        {
                            "name": "json",
                            "value": "application/json"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/shared/parameters/http-header.parameter.ts"
                },
                {
                    "name": "EHttpHeaders",
                    "childs": [
                        {
                            "name": "contentType",
                            "value": "Content-Type"
                        },
                        {
                            "name": "authorization",
                            "value": "Authorization"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/shared/parameters/http-header.parameter.ts"
                }
            ],
            "src/app/core/organisms/profile/parameters/profile-dialog-type.parameter.ts": [
                {
                    "name": "EProfileDialogType",
                    "childs": [
                        {
                            "name": "logout",
                            "value": "1"
                        },
                        {
                            "name": "updatePassword",
                            "value": "2"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/core/organisms/profile/parameters/profile-dialog-type.parameter.ts"
                }
            ],
            "src/app/shared/models/auth/role.model.ts": [
                {
                    "name": "Role",
                    "childs": [
                        {
                            "name": "Assistant",
                            "value": "ROLE_ASSISTANT"
                        },
                        {
                            "name": "Viewer",
                            "value": "ROLE_VIEWER"
                        },
                        {
                            "name": "Admin",
                            "value": "ROLE_ADMINISTRATOR"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/shared/models/auth/role.model.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "canActivate": [
                            "AppGuard"
                        ],
                        "children": [
                            {
                                "path": "",
                                "loadChildren": "./business/business.module#BusinessModule",
                                "children": [
                                    {
                                        "kind": "module",
                                        "children": [
                                            {
                                                "name": "routes",
                                                "filename": "src/app/business/business-routing.module.ts",
                                                "module": "BusinessRoutingModule",
                                                "children": [
                                                    {
                                                        "path": "",
                                                        "canActivate": [
                                                            "AuthGuard"
                                                        ],
                                                        "component": "BusinessComponent",
                                                        "children": [
                                                            {
                                                                "path": "",
                                                                "redirectTo": "BUSINESS_PATH.operations.valueOf()",
                                                                "pathMatch": "full"
                                                            },
                                                            "OPERATIONS",
                                                            "ADMIN"
                                                        ]
                                                    },
                                                    "ACCOUNT"
                                                ],
                                                "kind": "module"
                                            }
                                        ],
                                        "module": "BusinessModule"
                                    }
                                ]
                            },
                            {
                                "path": "sin-soporte",
                                "component": "NotSupportedComponent",
                                "pathMatch": "full"
                            },
                            {
                                "path": "**",
                                "component": "NotFoundComponent",
                                "pathMatch": "full"
                            }
                        ]
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/business/account/account.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccountComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/business/account/account.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COMPONENTS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/business/account/components/account-card/account-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccountCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/business/account/components/recover-password-code/recover-password-code.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RecoverPasswordCodeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/business/account/components/recover-password-reset/recover-password-reset.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RecoverPasswordResetComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/business/account/components/recover-password-user/recover-password-user.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RecoverPasswordUserComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/business/account/controls/code.control.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CodeControl",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/business/account/controls/email.control.ts",
                "type": "class",
                "linktype": "classe",
                "name": "EmailControl",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/business/account/controls/login-password.control.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LoginPasswordControl",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/business/account/form/login.form.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LoginForm",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/business/account/form/recover-password-code.form.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "RecoverPasswordCodeForm",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/business/account/form/recover-password-user.form.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "RecoverPasswordUserForm",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/business/account/parameters/recovery-password-alert-messages.parameter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RecoveryPasswordAlertMessages",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/business/account/stores/recovery-password.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "RecoveryPasswordStore",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/business/account/views/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/business/account/views/recover-password/recover-password.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RecoverPasswordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/business/admin/admin.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AdminComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/business/business-routing.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACCOUNT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/business/business-routing.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ADMIN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/business/business-routing.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OPERATIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/business/business.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BusinessComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/components/operations-sidenav/operations-sidenav.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OperationsSidenavComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/operations-routing.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CAPACITIES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/operations-routing.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SETTING",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/operations-routing.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "STORES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/operations-routing.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ZONES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/operations.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OperationsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/components/op-capacities-local-default-capacity-card/op-capacities-local-default-capacity-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OpCapacitiesLocalDefaultCapacityCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/components/op-capacities-local-default-capacity-dialog/op-capacities-local-default-capacity-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OpCapacitiesLocalDefaultCapacityDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/components/op-capacities-local-default-capacity-dialog/op-capacities-local-default-capacity-dialog.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OpCapacitiesLocalDefaultCapacityDialogService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/components/op-capacities-local-default-capacity/op-capacities-local-default-capacity.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OpCapacitiesLocalDefaultCapacityComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/components/op-capacities-local-default-capacity/op-capacities-local-default-capacity.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OpCapacitiesLocalDefaultCapacityService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-capacity-table-form/form/op-capacities-step-capacity-table-form.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OpCapacitiesStepCapacityTableFormService",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-capacity-table-form/op-capacities-step-capacity-table-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OpCapacitiesStepCapacityTableFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-capacity-table/controls/capacity-quantity-for-selection.control.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CapacityQuantityForSelectionControl",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-capacity-table/controls/capacity-quantity.control.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CapacityQuantityControl",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-capacity-table/models/op-capacities-step-capacity-table.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "FromFormToCapacityStepCapacityTableSegments",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-capacity-table/models/op-capacities-step-capacity-table.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICapacityStepCapacityTableFormValue",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-capacity-table/models/op-capacities-step-capacity-table.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICapacityStepCapacityTableSegments",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-capacity-table/op-capacities-step-capacity-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OpCapacitiesStepCapacityTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-capacity-table/op-capacities-step-capacity-table.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OpCapacitiesStepCapacityTableService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-edition-mode/op-capacities-step-edition-mode.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OpCapacitiesStepEditionModeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-edition-mode/op-capacities-step-edition-mode.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CCapacitiesStepEditionModeName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-edition-mode/op-capacities-step-edition-mode.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OpCapacitiesStepEditionModeService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-express-resource/controls/express-resource.control.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ExpressResourceControl",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-express-resource/form/op-capacities-step-express-resource-form.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OpCapacitiesStepExpressResourceFormService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-express-resource/models/op-capacities-step-express-resource.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "FromFormToCapacityStepExpressResourceSegments",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-express-resource/models/op-capacities-step-express-resource.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICapacityStepExpressResourceSegments",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-express-resource/op-capacities-step-express-resource.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OpCapacitiesStepExpressResourceComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-express-resource/op-capacities-step-express-resource.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OpCapacitiesStepExpressResourceService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-group-or-local/op-capacities-step-group-or-local.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OpCapacitiesStepGroupOrLocalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/27",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-group-or-local/op-capacities-step-group-or-local.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OpCapacitiesStepGroupOrLocalService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/components/op-capacities-step-group-or-local/op-capacities-step-group-or-local.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CCapacityStepGroupOrLocalName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/controls/capacity-range.control.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CapacityRangeControl",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/models/operations-capacities-responses.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CapacitiesLocal",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/models/operations-capacities-responses.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CapacitiesLocalServiceDefaultCapacity",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/models/operations-capacities-responses.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CapacitiesServiceType",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/models/operations-capacities-responses.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CapacityServiceTypeSegment",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/models/operations-capacities-service-type-query-params.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IOpCapacitiesServiceTypeQueryParams",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/models/operations-capacity-converter.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CapacityRangeLimit",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/models/operations-capacity-converter.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ToCapacityStepAmPmCapacitySegments",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/models/operations-capacity-converter.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ToCapacityStepExpressResourceSegments",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/models/operations-capacity-converter.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ToCapacityStepRetCapacitySegments",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/models/operations-capacity-converter.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ToCapacityStepScheduledCapacitySegments",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/operations-capacities.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OperationsCapacitiesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/parameters/operations-capacities-alert-message.parameter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "capacityAlertSuccessMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/services/operations-capacities-implement.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OperationsCapacitiesImplementService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/views/operations-capacity-am-pm/operations-capacity-am-pm.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OperationsCapacityAmPmComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/views/operations-capacity-am-pm/operations-capacity-am-pm.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OperationsCapacityAmPmService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/views/operations-capacity-am-pm/store/operations-capacity-am-pm-store.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OperationsCapacityAmPmStoreService",
                "coveragePercent": 12,
                "coverageCount": "3/25",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/views/operations-capacity-express/operations-capacity-express.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OperationsCapacityExpressComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/views/operations-capacity-express/operations-capacity-express.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OperationsCapacityExpressService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/views/operations-capacity-express/store/operations-capacity-express-store.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OperationsCapacityExpressStoreService",
                "coveragePercent": 12,
                "coverageCount": "3/25",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/views/operations-capacity-home/operations-capacity-home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OperationsCapacityHomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/views/operations-capacity-home/store/operations-capacity-home-store.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OperationsCapacityHomeStoreService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/views/operations-capacity-ret/operations-capacity-ret.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OperationsCapacityRetComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/views/operations-capacity-ret/operations-capacity-ret.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OperationsCapacityRetService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/views/operations-capacity-ret/store/operations-capacity-ret-store.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OperationsCapacityRetStoreService",
                "coveragePercent": 12,
                "coverageCount": "3/25",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/views/operations-capacity-scheduled/operations-capacity-scheduled.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OperationsCapacityScheduledComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/views/operations-capacity-scheduled/operations-capacity-scheduled.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OperationsCapacityScheduledService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-capacities/views/operations-capacity-scheduled/store/operations-capacity-scheduled-store.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OperationsCapacityScheduledStoreService",
                "coveragePercent": 12,
                "coverageCount": "3/25",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-home/operations-home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OperationsHomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-setting/operations-setting.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OperationsSettingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-stores/operations-stores.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OperationsStoresComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/business/operations/views/operations-zones/operations-zones.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OperationsZonesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/buttons/button-action-icon/button-action-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonActionIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/buttons/button-action-text/button-action-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonActionTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/buttons/button-icon/button-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/buttons/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/buttons/buttons.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COMPONENTS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/icons/constants/icons-svg.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ICONS_SVG",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/icons/constants/icons-svg.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pathIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/icons/constants/icons-svg.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pathIllustrations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/icons/icons.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/icons/models/icons-svg.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "IconsSvgModel",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/input-datepicker/components/datepicker-header/datepicker-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatepickerHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/input-datepicker/input-datepicker-range/input-datepicker-range.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputDatepickerRangeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/input-datepicker/input-datepicker-range/input-datepicker-range.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IDatepickerRange",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/input-datepicker/input-datepicker/input-datepicker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputDatepickerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/input-datepicker/input-datepicker/input-datepicker.component.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CustomDateAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/input-datepicker/input-datepicker/input-datepicker.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MY_FORMATS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/inputs/input-number/input-number.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputNumberComponent",
                "coveragePercent": 0,
                "coverageCount": "0/30",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/inputs/input-search/input-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/27",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/inputs/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/inputs/inputs.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COMPONENTS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/links/href/href.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HrefComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/links/router/router.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RouterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/radio/radio.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/select-search/select-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/select-search/select-search.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COMPONENTS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/select-tab/select-tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectTabComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/select/select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/select/select.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COMPONENTS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/tag/tag.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TagComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/atoms/tooltip/tooltip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TooltipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/core/molecules/alert/alert.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AlertComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/molecules/alert/alert.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AlertService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/molecules/back-router/back-router.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BackRouterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/molecules/cards/card-action/card-action.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardActionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/molecules/cards/card-radio/card-radio.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardRadioComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/core/molecules/cards/card-static-information/card-static-information.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardStaticInformationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/molecules/form-field/form-field-error/form-field-error.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormFieldErrorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/molecules/form-field/form-field-label/form-field-label.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormFieldLabelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/molecules/form-field/form-field.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormFieldComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/molecules/form-field/form-field.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COMPONENTS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/molecules/stepper/step/step.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StepComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/core/organisms/inner-sidenav/components/inner-sidenav-navigation-expansion/inner-sidenav-navigation-expansion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InnerSidenavNavigationExpansionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/core/organisms/inner-sidenav/components/inner-sidenav-navigation/inner-sidenav-navigation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InnerSidenavNavigationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/organisms/inner-sidenav/inner-sidenav.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InnerSidenavComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/core/organisms/profile/components/profile-dialog-header/profile-dialog-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfileDialogHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/organisms/profile/profile.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/core/organisms/profile/views/profile-update-password-dialog/profile-update-password-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfileUpdatePasswordDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/core/organisms/profile/views/profile-update-password-dialog/profile-update-password-dialog.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProfileUpdatePasswordDialogService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/organisms/profile/views/profile-user-information-dialog/profile-user-information-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfileUserInformationDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/organisms/profile/views/profile-user-information-dialog/profile-user-information-dialog.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProfileUserInformationDialogService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/organisms/sidenav/components/sidenav-navigation/sidenav-navigation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidenavNavigationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/organisms/sidenav/sidenav.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidenavComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/organisms/update-password-form/components/password-validator/password-validator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PasswordValidatorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/organisms/update-password-form/controls/confirm-password.control.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ConfirmPasswordControl",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/organisms/update-password-form/controls/password.control.ts",
                "type": "class",
                "linktype": "classe",
                "name": "PasswordControl",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/organisms/update-password-form/form/update-password.form.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UpdatePasswordForm",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/core/organisms/update-password-form/parameters/update-password-messages.parameter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CUpdatePasswordMessages",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/organisms/update-password-form/update-password-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UpdatePasswordFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/main-loader/main-loader.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MainLoaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/main-loader/main-loader.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MainLoaderService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/not-found/not-found.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotFoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/not-supported/not-supported.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotSupportedComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/pages.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COMPONENTS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/under-construction/under-construction.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UnderConstructionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/clients/auth/auth-client.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthClientService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/clients/calendar/calendar-client.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CalendarClientService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/clients/calendar/local-client.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LocalClientService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/clients/clients-service.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SERVICES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/clients/generic/generic.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GenericService",
                "coveragePercent": 11,
                "coverageCount": "1/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/clients/storage/storage-client.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "StorageClientService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/directives/caps-lock/caps-lock.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "CapsLockDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/directives/digits-only/digits-only.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "DigitsOnlyDirective",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/directives/directives.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DIRECTIVES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/directives/roles/roles.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "RolesDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/guards/account.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AccountGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/guards/app.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AppGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/guards/auth.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGuard",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/guards/guard-service.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SERVICES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/helpers/control-error.helper.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "getEnableErrorMessages",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/helpers/control-error.helper.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "getErrorByFormControl",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/helpers/control-error.helper.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "resetControlHelper",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/helpers/dates.helper.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "addUnitOfTime",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/helpers/dates.helper.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "checkDateAfterDate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/helpers/dates.helper.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "checkDateIsSameOrAfterDate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/helpers/dates.helper.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "getDate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/helpers/dates.helper.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "getDaysRangeBetweenDates",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/helpers/dates.helper.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "getYesterdayDate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/helpers/email-mask.helper.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "emailMasking",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/helpers/jwt-decode.helper.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "JwtDecodeToken",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/helpers/objects-equal.helper.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isArray",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/helpers/objects-equal.helper.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isObject",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/helpers/objects-equal.helper.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "objectHasElements",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/helpers/parse-url.helper.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "parseUrl",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/helpers/string.helper.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "normalizeValue",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/implements/auth/auth-implement.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthImplementService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/implements/implements-service.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SERVICES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interceptors/error.interceptor.service.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "ErrorInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interceptors/interceptor.providers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "httpInterceptorProviders",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interceptors/interceptors-service.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SERVICES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interceptors/token.interceptor.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "TokenInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/auth.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IAuthCodeRequest",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/auth.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IAuthRequest",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/auth.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IAuthResponse",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/auth.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IAuthRestorePasswordRequest",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/custom-controls.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICustomSelectOption",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/user.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IUser",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/auth/role.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RolesNames",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/auth/user.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/calendar/calendar-params.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICalendarParams",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/calendar/calendar-response.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CalendarServiceDefaultCapacities",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/calendar/calendar-response.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICalendarServiceDefaultCapacities",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/calendar/calendar.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Blocked",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/calendar/calendar.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "BlockedDayResponse",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/calendar/calendar.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Calendar",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/calendar/calendar.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CalendarResponse",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/calendar/calendar.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SelectedDay",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/calendar/calendar.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Week",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/calendar/calendar.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IBlocked",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/calendar/calendar.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IBlockedResponse",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/calendar/calendar.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICalendar",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/calendar/calendar.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICalendarRequestParams",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/calendar/calendar.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICalendarResponse",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/calendar/calendar.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IDayBlockedRequest",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/calendar/calendar.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IDayList",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/calendar/capacity.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Capacity",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/calendar/capacity.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ResponseDetailCapacity",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/calendar/capacity.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICalendarUpdateRequestParams",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/calendar/capacity.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICapacity",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/calendar/capacity.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICapacityRequestParams",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/calendar/capacity.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ISegment",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/capacities/capacities-service-type.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CCapacitiesServiceTypeName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/capacities/capacities-service-type.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CCapacitiesServiceTypeRoute",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/local/local-group.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LocalGroup",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/local/local-group.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ILocalGroup",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/local/local-params.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ILocalParams",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/local/local.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Local",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/local/local.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ILocal",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/local/local.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ILocalCompany",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/local/local.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ILocalService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/local/service-type.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ServiceType",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/local/service-type.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ServiceTypeSegment",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/local/service-type.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IServiceType",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/local/service-type.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IServiceTypeSegment",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/parameters/concat-router-path.parameter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CONCAT_PATH",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/parameters/endpoints.parameter.ts",
                "type": "class",
                "linktype": "classe",
                "name": "EndpointsParameter",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/parameters/endpoints.parameter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "API_GATEWAY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/parameters/endpoints.parameter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "API_GATEWAY_AUTH",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/parameters/form-error-message.parameter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CODE_ERROR_MESSAGES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/parameters/form-error-message.parameter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EMAIL_ERROR_MESSAGES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/parameters/form-error-message.parameter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NAME_ERROR_MESSAGES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/parameters/form-error-message.parameter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PASSWORD_ERROR_MESSAGES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/parameters/router-path.parameter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BUSINESS_PATH",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/parameters/router-path.parameter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LOGIN_PATH",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/parameters/router-path.parameter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OPERATIONS_CAPACITIES_PATH",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/parameters/router-path.parameter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OPERATIONS_PATH",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stores/token-store.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TokenStoreService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stores/user-store.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserStoreService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/validators/generic-validator.ts",
                "type": "class",
                "linktype": "classe",
                "name": "GenericValidator",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/validators/generic-validator.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "validCharacters",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/validators/generic-validator.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "validNumbers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ci2.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.qa.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.qa2.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}